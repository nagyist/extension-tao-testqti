{"version":3,"mappings":"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","names":["define","_","pluginFactory","ckEditor","name","init","isIOSDevice","$input","$cke","__","getItemStatus","item","exports","Object","_this","selector","eventName","eventParam","$link","handleLink","jumplinksBox","component","Handlebars","Template","helpers","data","buffer","escapeExpression","helper","stack1","defaults","questions","answered","flagged","viewed","total","questionsViewed","getJumps","getParts","getSections","result","sections","getActiveItem","getNextSections","canList","section","getJump","getPart","getSection","parts","getItem","identifier","getItemCategories","hasItemCategory","fuzzyMatch","taoPrefix","categories","getTestStats","getPartStats","getSectionStats","getScopeStats","testStats","_this$getPart","currentPartPosition","isCurrentPartLinear","sort","linearPartIndex","inaccessibleParts","countOfInaccessibleUnasweredQestions","countOfInaccessibleFlaggedQestions","getScopeMap","scopeMap","jump","part","scope","getScopeMapFromContext","context","getItemPart","getItemSection","getItemAt","items","getItemIdentifier","each","callback","updateItemStats","map","computeItemStats","acc","getEmptyStats","computeStats","patch","self","targetMap","currentMap","reindex","offset","offsetPart","offsetSection","lastPartId","lastSectionId","position","createJumpTable","reviewEnabled","itemReviewEnabled","mapHelper","shortcutsBox","$element","$closeBtn","$keyNavigationItems","elements","propagateTab","on","cursor","keyNavigator","navigableDomElement","shortcutsGroups","id","label","shortcuts","shortcut","$$1","isReviewPanelEnabled","jumplinksFactory","shortcutsFactory","namespaceHelper","plugin","testRunner","config","questionStatus","testRunnerOptions","pluginShortcuts","areaBroker","getJumpElement","shortcutsConfig","avoidInput","prevent","elem","panelJumplink","enabled","text","currentItem","updatedConfig","announcedText","$announce","after","render","$","$headerBar","$headerElements","registerHeaderNavigator","group","defaultPosition","getNavigators","destroy","$navigationBar","$toolbarElements","pos","registerToolbarNavigator","$topToolbar","registerTopToolbarNavigator","$navigatorTree","$enabledItems","navigableItems","getItemFromNavigable","itemsNavigator","loop","keyNextItem","keyPrevItem","keyNavigators","managedNavigators","selectors","filters","enabledItems","$panel","$navigator","isFizzyLayout","initFizzy","$testStatusHeader","navigableTestStatus","keepState","itemListingVisited","$filters","navigableFilters","filtersNavigator","currentFilter","filter","$trees","navigableTrees","navigator","scrollHelper","addLabelledByAttribute","value","removeLabelledByAttribute","manageLabelledByAttribute","$content","getQtiChoice","addNavigator","addInputsNavigator","$qtiInteractions","$itemElement","$choiceInput","choiceType","$nav","$inputs","input","$qtiChoices","$lastParent","list","setupListNavigator","$parent","choiceNavigator","element","$jumpLinksBox","$links","headerNavigation","toolbarNavigation","topToolbarNavigation","navigatorNavigation","pageNavigation","rubricsNavigation","itemNavigation","linearItemNavigation","stimulusNavigation","jumpLinks","strategy","getName","getConfig","getTestRunner","providerRegistry","navigable","strategyFactory","$elt","allowedToNavigateFrom","strategies","autoFocus","wcagBehavior","flatNavigation","keyNextGroup","keyPrevGroup","keyNextTab","keyPrevTab","keyNextContent","keyPrevContent","defaultMode","linearMode","nativeMode","instance","modeFactory","contentNavigatorType","groupNavigator","navigationMode","navigationConfig","document","setMode","getMode","isActive","keyNavigatorFactory","defaultPluginConfig","pluginConfig","state","header","updateTitle","updateState","$container","dialogAlert","dialogConfirm","shortcutRegistry","globalShortcut","actionPrefix","defaultOptions","alert","focus","confirm","dialog","handle","accept","closeAccept","closeReject","reject","dialogShortcut","stack","opened","removeHandle","closeDialogs","testOptions","alerts","confirms","propagate","addHandle","before","closeLast","install","dataIsObject","resolve","itemRunner","$modalsContainer","startClosed","top","isLeavingSection","sectionStats","nbItems","isLeavingTestPart","testPart","testPartStats","isLast","isFirst","isLastOf","stats","isFirstOf","getSiblingItems","itemId","previous","siblings","itemChain","next","directions","size","direction","getNextItem","getPreviousItem","isMovingToNextItem","params","isMovingToPreviousItem","isJumpingToItem","navigationHelper","buttonData","control","title","icon","end","itemInlineMessage","createOkButton","testContext","testMap","dataType","$btn","e","$navigationContainer","$inlineContainer","enable","disable","_typeof","feedback$1","closeCurrent","currentFeedback","message","type","typeCaster","$itemContainer","contentHeight","$item","isScrollable","selectedHeight","containerParent","$testRunnerSections","extraHeight","$gridRows","$qtiContent","$contentArea","adaptItemHeight","loadingBar","found","removed","feedback","nextStep","inlineMode","messagePlugin","module","inlineMessage","alertMessage","autoscroll","modalFeedback","defineMode","createMessages","isDestroyed","renderedFeedbacks","renderingQueue","dom","inline","destroyFeedback","tFeedbacks","overlayConfig","show","hide","labelHiddenCls","separatorCls","collapseTools","collapseNavigation","collapseInOrder","hover","collapseOrder","$window","collapser","allCollapsibles","getCollapsiblesFromConfig","getSortedCollapsiblesFromDom","getUnsortedCollapsiblesFromDom","expandedWidth","collapsedWidth","availableWidth","previousAvailableWidth","toCollapse","collapseNeeded","toExpand","$controls","$elements","extraWidth","_allCollapsibles","order","$controlElements","key","collapseCls","$actionsBar","$toolbox","$navigation","buildCollapsiblesList","toggleCollapsibles","hider","blankifyLinks","mathify","require","MathJax","rubricBlock","pollingFactory","waitingDialog","defaultConfig","checkInterval","indicator","connectivity","proxy","waiting","waitContent","proceedContent","action","interval","autoStart","catch","reasons","flags","args","dialogMessage","dialogConfig","buttons","labels","ok","cancel","pauseContext","category","subCategory","originalMessage","pauseOnError","returnToHome","reloadPage","processError","trigger","dialogTpl","error","loggerFactory","logger","duration","currentUpdatePromise","getItemAttempt","getPositiveNumber","getItemDuration","durationStore","Promise","updateDuration","then","addDurationToCallActionParams","itemDuration","getDuration","currentTestPart","fixedTestMap","fixedCurrentItem","reached","completed","fixedMap","scopedMap","categoriesToMatch","matchSize","updateStats","matchCategories","expectedCategories","matched","Math","patterns","pattern","ratio","format","showTotal","long","short","scopes","test","testSection","indicators","percentage","isMatchedCategories","statsComputer","computeIndicator","computeProgress","progressData","update","$label","$bar","showLabel","count","children","removeClass","slice","addClass","Template$1","progressHelper","percentageRendererFactory","positionRendererFactory","renderers","progressbar","testRunnerConfig","rendererFactory","progressConfig","hiddenByQuestions","hiddenByCategories","isProgressbarHidden","channel","isLeaving","timeArr","timeArgArr","timerMessage","answeredMessage","questionsMessage","countdown","encodedTime","warningId","warningMessage","parseInt","time","hours","minutes","seconds","$time","$timeScreenreader","screenreaderWarningId","start","stop","complete","level","countdownTooltip","theme","placement","setTimeout","warningTimeout","timeEncoder","getTimerMessage","tooltip","moment","showBeforeStart","displayWarning","info","success","warning","danger","timerbox","updating","timerIdsToRemove","getTimers","addTimer","updateTimer","removeTimer","deindex","timer","toggleZenMode","$zenModeToggler","$countdownContainer","countdownFactory","zenMode","startHidden","setUp","tearDown","lastConsumedExtraTime","consumedExtraTime","applyExtraTime","responseCardinalities","single","multiple","ordered","record","interactionMinConstraintProperties","matchInteraction","choiceInteraction","orderInteraction","associateInteraction","hottextInteraction","hotspotInteraction","graphicOrderInteraction","graphicAssociateInteraction","selectPointInteraction","currentItemHelper","getDeclarations","getResponseDeclaration","toResponse","mappedCardinality","response","transform","v","isQtiValueNull","isQuestionAnswered","fullyAnswered","currentCardinality","responses","defaultValue","constraintValue","guessInteractionConstraintValues","itemBody","interactions","constraintValues","attributes","qtiClass","constraintProperty","isAnswered","empty","declarations","baseType","cardinality","getStimuliHrefs","pluck","getTextStimuliHrefs","stimuli","textStimuli","getInstantStats","options","partiallyAnsweredIsAnswered","sync","submitButtonLabel","msg","flaggedCount","unansweredCount","itemsCountMessage","statsHelper","getExitMessage","messageEnabled","testSession","initial","interacting","suspended","closed","itemSession","solution","notSelected","messages","states","timerConfig","itemIdentifier","endTestWarning","noExitTimedSectionWarning","movePromise","actives","applyToStrategies","strategyHandler","getActives","extraTimeStrategy","enforcedStayStrategy","guidedNavigationStrategy","timeoutStrategy","warnSectionLeavingStrategy","timers","constraintsWarnings","threshold","shown","constraintsWarningsForScreenreader","buildTimer","constraintData","newTimer","isLinear","scopeMapping","assessmentTest","assessmentSection","assessmentItemRef","getScope","warningMessages","warningMessagesForScreenraeder","enumerable","configurable","writable","obj","getStrategyHandler","timerboxFactory","timersFactory","timeConstraints","handleError","screenreaderNotifcationTimeoutId","contextualWarnings","warnings","warningsForScreenreader","guidedNavigation","restoreTimerFromClient","questionsStats","updatedTimers","statsScope","unansweredQuestions","remainingTime","timeStore","ariaHidden","clearTimeout","updateTitles","currentPart","_this$titles$scope","$timer","_this2","attribute","className","titles","itemTraceVariables","variables","ITEM_START_TIME_CLIENT","tracesStore","onError","traceData","allowPartial","allowSkipping","isInteracting","currenItem","toBoolean","warnBeforeNext","shouldWarnForUnansweredItems","hasFlagged","unansweredOnly","hasUnanswered","nextItemWarning","nextPartWarning","nextPart","remainingAttempts","testPartId","warnBeforeEnd","warnBeforeEndPart","shouldWarnBeforeEndPart","shouldWarnBeforeEnd","shouldWarnBeforeNext","nextWarningHelper","specificTitle","createElement","enableElement","disableElement","updateElement","nextItem","isLastItem","doNext","nextItemPosition","unansweredWarning","warningScope","enableNav","triggerNextAction","warningHelper","registerShortcut","kbdShortcut","accepted","content","dlg","checkboxParams","checked","dialogOptions","heading","autoRender","autoDestroy","close","onOkBtn","$checkbox","refuse","dialogConfirmNext","nextSectionWarning","itemPartiallyAnswered","customNextMessage","submitChecked","store","submitUnchecked","err","testStore","nextSection","isWarnSectionLeavingEabled","toggle","previousItemWarning","triggerAction","canDoPrevious","currentSection","previousSection","previousPart","doPrevious","$component","$filterBar","$tree","$infoAnswered","$infoViewed","$infoAll","$infoUnanswered","$infoFlagged","$linearState","$target","flagItem","mode","_defaults","canCollapse","preventsUnseen","hidden","_cssCls","active","collapsed","collapsible","disabled","unseen","_iconCls","_selectors","filterBar","tree","collapseHandle","linearState","infoAnswered","infoViewed","infoUnanswered","infoFlagged","infoPanel","infoPanelLabels","tabInfoAll","tabInfoUnanswered","tabInfoFlagged","partLabels","sectionLabels","itemLabels","itemIcons","activeItem","icons","linearStart","counters","collapsiblePanels","notFlagged","notAnswered","notInformational","informational","_filterMap","all","unanswered","filtered","navigatorApi","getProgressionTotal","progression","setItemFlag","$items","filterCb","$section","$itemsFound","$filtered","updateConfig","scopeClass","autoScroll","totalQuestions","getScopedMap","cls","itm","counter","writeCount","$place","display","select","selected","hierarchy","previousPosition","$previous","open","openSelected","openOnly","togglePanel","collapseSelector","panel","scrollContainer","itemButtonListContainerElem","_component$getConfig","displaySectionTitles","displayItemTooltip","nonInformationalCount","fizzyMap","fizzySection","dataItem","fizzyItem","disableUnseenItems","updatedMap","updatedItem","updatedScopeMap","updatedFizzyMap","updatedItemData","activeItemId","isSkipaheadEnabled","renderItemButtonListComponents","previousItem","$closeButton","componentFactory","itemButtonListFactory","closeButton","itemButtonListContainer","button","$button","markReviewCategory","defaultNavigatorFactory","fizzyNavigatorFactory","setFlag","unsetFlag","setFlagBookmarked","unsetFlagBookmarked","showReview","hideReview","showTestOverview","hideTestOverview","review","currentContext","reviewScreen","markReview","flag","updateButton","itemPosition","flagStatus","isHidden","navigatorConfig","defaultOpen","navigatorFactory","previousItemPosition","isPluginAllowed","canFlag","flagCurrentItem","$panelContainer","isItemFlagged","skip","doSkip","validateResponses","warnMessage","warnListener","warnBeforeLeaving","window","event","removeEliminationsOnClose","restoreEliminationsOnOpen","eliminator","isEliminable","enableEliminator","disableEliminator","$choices","isPluginEnabled","togglePlugin","mask","allMasks","maskApi","reveal","answerMasking","$choiceInteractions","getMasksState","setMasksState","statifier","answerMaskingFactory","itemStates","restoreStateOnToggle","restoreStateOnMove","disableMasking","enableMasking","togglePluginButton","n","Array","_arrayLikeToArray","len","audio","currentPlayback","mediaContentData","selection","ttsComponent","clearAPIPElements","elementClass","$contentNodes","join","container","getCurrentItem","handleContentNodeClick","$currentTarget","selectedItemIndex","initDefaultModeItem","initItemWithTextSelection","currentSelection","commonAncestorContainer","selectedItem","initNextItem","url","initDefaultModePlayback","setMediaContentData","setPlaybackRate","playbackRate","setTTSStateOnContainer","togglePlayback","toggleSFHMode","toggleSettings","isSettings","handleResize","_this$getPosition","x","y","maxXPosition","makePlaceable","makeStackable","_this$getConfig","left","maxPlaybackRate","minPlaybackRate","defaultPlaybackRate","$closeElement","$dragElement","$playbackElement","$sfhModeElement","$sliderElement","$settingsElement","manualStart","restrict","restriction","elementRect","right","bottom","onmove","xOffset","yOffset","interact","interaction","interactElement","animate","connected","range","min","max","step","activeElementClass","stackingOptions","stackingScope","getTTSItemData","_apipElement$contentL","contentLinkInfo","_apipElement$relatedE","_apipElement$relatedE2","_apipElement$relatedE3","audioFileInfo","_ref","_ref$fileHref","fileHref","elementId","getTTSItemOrder","_apipData$accessibili","accessElement","_apipData$inclusionOr","_apipData$inclusionOr2","elementOrder","ttsComponentFactory","ttsApipDataProvider","createNavigationGroup","$navigationGroupElement","groupNavigationId","$navigationElements","setCursorAt","$currentElement","_ref2","getTTSComponent","isConfigured","enablePlugin","disablePlugin","toggleTool","ttsApipData","_ref3","dynamicComponentInstance","preview","delay","dynamicComponent","draggable","resizable","preserveAspectRatio","width","minWidth","maxWidth","minHeight","height","previewDelay","maskComponent","foo","areaMasking","renderTo","draggableContainer","isEnabled","addMask","calculatorFactory","basicCalculatorFactory","scientificCalculatorFactory","defaultCalcConfig","proportionalResize","bodmasCalcConfig","scientificCalcConfig","calculator","maths","degree","bodmas","scientific","factory","calcConfig","replace","alternativeTemplate","buildCalculator","allowIn","toggleCalculator","stackerFactory","comment","contextOptions","stacker","toggleComment","isVisible","hidePanel","namespace","stopEvents","hideViewer","viewerFactory","pdfViewer","showPanel","resizeViewer","$overlay","$title","fitToWidth","allowSearch","displayViewer","initPanelEvents","hideIfVisible","allRanges","isHighlighting","highlightHelper","containerSelector","containersBlackList","clearOnClick","discardSelection","prevSelection","toggleHighlighting","highlight","restoreIndex","index","getIndex","clearHighlights","getId","eventifier","highlighterFactory","highlighters","addHighlighter","getHighlighterById","getAllHighlighters","getItemHighlighter","getNonItemHighlighters","getLength","itemHelper","highlighterCollection","hasHighlights","aria","pressed","highlightsIndex","highlighterStore","loadHighlight","stimHighlighter","saveAll","themeHandler","themeLoader","changeTheme","$qtiItem","previousTheme","allMenuEntries","menuEntry","pluginName","oldNamespace","availableThemes","defaultTheme","selectedTheme","reloadThemes","themesConfig","role","themeEntry","itemThemeId","maskAPI","place","placeOverlay","styleResizableEdges","isResizable","addResizeControll","$resizeControll","class","makeResizable","bringAllToFront","innerDrag","closer","invokeOnOverlays","invokeOnMasks","maskConfig","applyTransformsToOverlays","applyTransformsToInnerDrag","applyTransformsToCloser","overlay","transformOverlay","restoreOverlay","appendVisualGuides","visualGuides","removeVisualGuides","makeDraggable","pointerEventsPrefix","$moveIcon","prepend","invokeOnAll","applyTransforms","dragRestriction","rect","$dragIcon","background","dimensions","applyTransformsToMasks","$closeIcon","invokeOn","fromTop","fromLeft","createPart","edges","edgesBorders","addOverlay","beforeResize","onResize","setTopHeight","setRightWidth","resizeControll","setBottomHeight","setInnerHeight","setLeftWidth","allParts","compoundMask","constrains","minBottomHeight","minTopHeight","createCompoundMask","createVisualGuides","createInnerDragHandle","createCloser","setTransforms","correctTransforms","getDimensions","getPosition","defaultDimensions","outerWidth","outerHeight","innerWidth","innerHeight","outerX","outerY","innerX","innerY","dragMinWidth","dragMinHeight","resizeHandleSize","innerDragHeight","lineHeight","paddingLeft","paddingTop","compoundMaskFactory","maskOptions","containerWidthHasChanged","transformMask","openMask","closeMask","toggleMask","controls","$clonedTarget","scrollOffsetsChanged","scrollLeft","scrollTop","scrollId","scrollData","scrolling","magnifierPanel","updateScrollPositions","$newZoomLevel","targetWidth","targetHeight","observer","childList","characterData","subtree","setScrollingListener","removeScrollingListener","delta","actualSize","el","$node","$root","indexes","$this","initConfig","zoomLevelMin","zoomLevelMax","zoomLevelStep","zoomLevel","maxRatio","$initTarget","dynamicComponentConfig","getZoomLevel","getTarget","setTarget","zoomTo","applyZoomLevel","showZoomLevel","updateMaxSize","updateZoom","zoomBy","zoomIn","zoomOut","zoomAt","translate","applySize","applyScrolling","updateMagnifier","scrollingListenerCallback","scrollingTop","scrollInClone","dx","dy","dynamicComponentContext","$inner","$zoomLevel","findSourceNode","createObserver","startObserver","stopObserver","screenRatio","defaultBaseSize","defaultLevelMin","defaultLevel","levelMin","levelMax","levelStep","baseSize","dynamicComponentDefaultConfig","magnifierPanelFactory","zoomMin","zoomMax","zoomStep","magnifier","hideMagnifier","showMagnifier","getMagnifierPanel","toggleMagnifier","transformer","lower","upper","_setZoomLevel","newScale","isOverZoom","_resetZoom","forceRepaint","sel","zoom","sx","sy","zoomAction"],"sources":["../runner/plugins/content/accessibility/focusOnFirstField.js","../runner/plugins/content/accessibility/jumplinks/helpers.js","../runner/plugins/content/accessibility/jumplinks/jumplinks.js","../runner/helpers/map.js","../runner/helpers/isReviewPanelEnabled.js","../runner/plugins/content/accessibility/jumplinks/shortcuts.js","../runner/plugins/content/accessibility/jumplinks/plugin.js","../runner/plugins/content/accessibility/keyNavigation/strategies/headerNavigation.js","../runner/plugins/content/accessibility/keyNavigation/strategies/toolbarNavigation.js","../runner/plugins/content/accessibility/keyNavigation/strategies/topToolbarNavigation.js","../runner/plugins/content/accessibility/keyNavigation/strategies/navigatorNavigation.js","../runner/plugins/content/accessibility/keyNavigation/strategies/pageNavigation.js","../runner/plugins/content/accessibility/keyNavigation/strategies/rubricsNavigation.js","../runner/plugins/content/accessibility/keyNavigation/strategies/itemNavigation.js","../runner/plugins/content/accessibility/keyNavigation/strategies/linearItemNavigation.js","../runner/plugins/content/accessibility/keyNavigation/strategies/stimulusNavigation.js","../runner/plugins/content/accessibility/keyNavigation/strategies/jumpLinks.js","../runner/plugins/content/accessibility/keyNavigation/strategies/index.js","../runner/plugins/content/accessibility/keyNavigation/strategiesManager.js","../runner/plugins/content/accessibility/keyNavigation/helpers.js","../runner/plugins/content/accessibility/keyNavigation/modes/defaultMode.js","../runner/plugins/content/accessibility/keyNavigation/modes/linearMode.js","../runner/plugins/content/accessibility/keyNavigation/modes/nativeMode.js","../runner/plugins/content/accessibility/keyNavigation/modes/index.js","../runner/plugins/content/accessibility/keyNavigation/modesManager.js","../runner/plugins/content/accessibility/keyNavigation/keyNavigation.js","css!taoQtiTest/runner/plugins/content/accessibility/css/key-navigation","../runner/plugins/content/accessibility/keyNavigation/plugin.js","../runner/plugins/content/accessibility/mainLandmark/header.js","../runner/plugins/content/dialog/dialog.js","../runner/plugins/content/dialog/exitMessages.js","../runner/plugins/content/dialog/itemAlertMessage.js","../runner/helpers/navigation.js","../runner/plugins/content/dialog/itemInlineMessage.js","../runner/plugins/content/feedback/feedback.js","../runner/plugins/content/itemScrolling/itemScrolling.js","../runner/plugins/content/loading/loading.js","../runner/plugins/content/modalFeedback/modalFeedback.js","../runner/plugins/content/overlay/overlay.js","../runner/plugins/content/responsiveness/collapser.js","../runner/plugins/content/rubricBlock/rubricBlock.js","../runner/plugins/controls/connectivity/connectivity.js","../runner/plugins/controls/connectivity/pauseOnError.js","../runner/plugins/controls/duration/duration.js","../runner/plugins/controls/progressbar/progress.js","../runner/plugins/controls/progressbar/renderer/percentage.js","../runner/plugins/controls/progressbar/renderer/position.js","../runner/plugins/controls/progressbar/progressbar.js","../runner/plugins/controls/testState/testState.js","../runner/helpers/getTimerMessage.js","../runner/plugins/controls/timer/component/css/countdown!css","../runner/plugins/controls/timer/component/countdown.js","../runner/plugins/controls/timer/component/css/timerbox!css","../runner/plugins/controls/timer/component/timerbox.js","../runner/plugins/controls/timer/strategy/enforcedStay.js","../runner/plugins/controls/timer/strategy/extraTime.js","../runner/plugins/controls/timer/strategy/guidedNavigation.js","../runner/plugins/controls/timer/strategy/timeout.js","../runner/helpers/currentItem.js","../runner/helpers/stats.js","../runner/helpers/messages.js","../runner/config/states.js","../runner/plugins/controls/timer/strategy/warnSectionLeaving.js","../runner/plugins/controls/timer/strategy/strategyHandler.js","../runner/plugins/controls/timer/timers.js","../runner/plugins/controls/timer/plugin.js","../runner/plugins/controls/title/title.js","../runner/plugins/controls/trace/itemTraceVariables.js","../runner/plugins/navigation/allowSkipping.js","../runner/plugins/navigation/next/nextWarningHelper.js","../runner/plugins/navigation/next.js","../runner/plugins/navigation/next/dialogConfirmNext.js","../runner/plugins/navigation/next/linearNextItemWarning.js","../runner/plugins/navigation/nextSection.js","../runner/plugins/navigation/previous.js","../runner/plugins/navigation/review/navigator.js","../runner/plugins/navigation/review/navigatorFizzy.js","../runner/plugins/navigation/review/review.js","../runner/plugins/navigation/skip.js","../runner/plugins/navigation/validateResponses.js","../runner/plugins/navigation/warnBeforeLeaving.js","../runner/plugins/security/disableRightClick.js","../runner/plugins/tools/answerElimination/eliminator.js","../runner/plugins/tools/answerMasking/answerMasking.js","../runner/plugins/tools/answerMasking/plugin.js","../runner/plugins/tools/apipTextToSpeech/textToSpeech.js","../runner/plugins/tools/apipTextToSpeech/ttsApipDataProvider.js","../runner/plugins/tools/apipTextToSpeech/plugin.js","../runner/plugins/tools/areaMasking/mask.js","../runner/plugins/tools/areaMasking/areaMasking.js","../runner/plugins/tools/calculator.js","../runner/plugins/tools/comment/comment.js","../runner/plugins/tools/documentViewer/documentViewer.js","../runner/plugins/tools/highlighter/highlighter.js","../runner/plugins/tools/highlighter/collection.js","../runner/plugins/tools/highlighter/plugin.js","../runner/plugins/tools/itemThemeSwitcher/itemThemeSwitcher.js","../runner/plugins/tools/lineReader/compoundMask.js","../runner/plugins/tools/lineReader/plugin.js","../runner/plugins/tools/magnifier/magnifierPanel.js","../runner/plugins/tools/magnifier/magnifier.js","../runner/plugins/tools/zoom.js","onLayerEnd0.js","module-create.js"],"sourcesContent":["define('taoQtiTest/runner/plugins/content/accessibility/focusOnFirstField',['lodash', 'taoTests/runner/plugin', 'ckeditor'], function (_, pluginFactory, ckEditor) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    ckEditor = ckEditor && Object.prototype.hasOwnProperty.call(ckEditor, 'default') ? ckEditor['default'] : ckEditor;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018 (original work) Open Assessment Technologies SA;\n     */\n    /**\n     * Check if client uses the iOS device.\n     *\n     * @returns {*|boolean}\n     */\n\n    function isIOSDevice() {\n      return /(iPhone|iPad)/i.test(navigator.userAgent);\n    }\n    /**\n     * Returns the configured plugin\n     */\n\n\n    var focusOnFirstField = pluginFactory({\n      name: 'focusOnFirstField',\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        /**\n         * When an Item is loaded - if we set the focus on any input then the ipad sets the focus on the\n         * keyboard, so the windows lose focus\n         * and we get an error message for the test in fullscreen mode\n         */\n\n        if (!isIOSDevice()) {\n          this.getTestRunner().after('renderitem', function () {\n            var $input = self.getAreaBroker().getContentArea().find('.qti-itemBody').find('input, textarea, select').not(':input[type=button], :input[type=submit], :input[type=reset]').first();\n            var $cke = $input.closest('.qti-interaction').find('.cke');\n\n            if ($cke.length) {\n              _.delay(function () {\n                ckEditor.instances[$cke.attr('id').replace(/^cke_/, '')].focus();\n              }, 100);\n            } else {\n              $input.focus();\n            }\n          });\n        }\n      }\n    });\n\n    return focusOnFirstField;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/jumplinks/helpers',['exports', 'i18n'], function (exports, __) { 'use strict';\n\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Returns factory-like object.\n     *\n     * @param {AreaBroker} broker\n     *\n     * @returns {Object} - when you access properties it returns the corresponding element and move the focus on it.\n     *  List of availiable properties\n     *      - question\n     *      - navigation\n     *      - toolbox\n     *      - teststatus\n     */\n\n    var getJumpElementFactory = function getJumpElementFactory(broker) {\n      return {\n        get container() {\n          return broker.getContainer();\n        },\n\n        get question() {\n          return broker.getContainer().find('.content-wrapper').first();\n        },\n\n        get navigation() {\n          return broker.getNavigationArea().find(':not(.hidden)[tabindex]').first();\n        },\n\n        get toolbox() {\n          return broker.getToolboxArea().find(':not(.hidden)[tabindex]').first();\n        },\n\n        get teststatus() {\n          return broker.getPanelArea().find(':not(.hidden)[tabindex]').first();\n        }\n\n      };\n    };\n    /**\n     * Returns testrunner item status.\n     *\n     * @param {Object} item - testrunner item\n     *\n     * @returns {String} - localized string.\n     */\n\n    var getItemStatus = function getItemStatus(item) {\n      if (item.flagged) {\n        return __('Flagged for review');\n      }\n\n      if (item.answered) {\n        return __('Answered');\n      }\n\n      if (item.viewed) {\n        return __('Not answered');\n      }\n\n      return __('Not seen');\n    };\n    /**\n     * Detects if review panel hidden or not.\n     *\n     * @param {TestRunner} testRunner\n     *\n     * @returns {Boolean}\n     */\n\n    var isReviewPanelHidden = function isReviewPanelHidden(testRunner) {\n      return testRunner.getAreaBroker().getPanelArea().find('.qti-navigator').is('.hidden');\n    };\n\n    exports.getItemStatus = getItemStatus;\n    exports.getJumpElementFactory = getJumpElementFactory;\n    exports.isReviewPanelHidden = isReviewPanelHidden;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/jumplinks/jumplinks',['lodash', 'ui/component', 'handlebars'], function (_, component, Handlebars) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    component = component && Object.prototype.hasOwnProperty.call(component, 'default') ? component['default'] : component;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\n    function program1(depth0,data) {\n      \n      \n      return \"hidden\";\n      }\n\n      buffer += \"<nav class=\\\"jump-links-box\\\" aria-label=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Jump Menu\", options) : helperMissing.call(depth0, \"__\", \"Jump Menu\", options)))\n        + \"\\\">\\n    <ul>\\n        <li class=\\\"jump-link-item\\\">\\n            <button data-jump=\\\"question\\\" class=\\\"jump-link\\\" >\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Jump to:\", options) : helperMissing.call(depth0, \"__\", \"Jump to:\", options)))\n        + \" <b>\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Question\", options) : helperMissing.call(depth0, \"__\", \"Question\", options)))\n        + \" - \";\n      if (helper = helpers.questionStatus) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.questionStatus); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</b></button>\\n        </li>\\n        <li class=\\\"jump-link-item\\\">\\n            <button data-jump=\\\"navigation\\\" class=\\\"jump-link\\\" >\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Jump to:\", options) : helperMissing.call(depth0, \"__\", \"Jump to:\", options)))\n        + \" <b>\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Navigation\", options) : helperMissing.call(depth0, \"__\", \"Navigation\", options)))\n        + \"</b></button>\\n        </li>\\n        <li class=\\\"jump-link-item\\\">\\n            <button data-jump=\\\"toolbox\\\" class=\\\"jump-link\\\" >\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Jump to:\", options) : helperMissing.call(depth0, \"__\", \"Jump to:\", options)))\n        + \" <b>\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Toolbox\", options) : helperMissing.call(depth0, \"__\", \"Toolbox\", options)))\n        + \"</b></button>\\n        </li>\\n        <li class=\\\"jump-link-item \";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.isReviewPanelEnabled), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" >\\n            <button data-jump=\\\"teststatus\\\" class=\\\"jump-link\\\" >\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Jump to:\", options) : helperMissing.call(depth0, \"__\", \"Jump to:\", options)))\n        + \" <b>\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Test Status and Structure\", options) : helperMissing.call(depth0, \"__\", \"Test Status and Structure\", options)))\n        + \"</b></button>\\n        </li>\\n        <li class=\\\"jump-link-item\\\">\\n            <button data-jump=\\\"shortcuts\\\" class=\\\"jump-link\\\" >\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Jump to:\", options) : helperMissing.call(depth0, \"__\", \"Jump to:\", options)))\n        + \" <b>\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Open Keyboard Shortcuts\", options) : helperMissing.call(depth0, \"__\", \"Open Keyboard Shortcuts\", options)))\n        + \"</b></button>\\n        </li>\\n    </ul>\\n</nav>\\n\";\n      return buffer;\n      });\n    function jumplinksTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Default config values, see below.\n     */\n\n    var defaults = {};\n    /**\n     * Creates and initialize the jumplinks component.\n     * Please not the component IS NOT rendered.\n     * You'll have to render it by yourself.\n     *\n     * @returns {jumplinks} the component, initialized and rendered\n     */\n\n    function jumplinksFactory(config) {\n      /**\n       * @typedef {Object} jumplinksBox\n       */\n      var jumplinksBox = component({}, defaults).on('render', function () {\n        var _this = this;\n\n        // handle related Jump Links\n        var behavior = [{\n          selector: '[data-jump=question] ',\n          eventName: 'jump',\n          eventParam: 'question'\n        }, {\n          selector: '[data-jump=navigation]',\n          eventName: 'jump',\n          eventParam: 'navigation'\n        }, {\n          selector: '[data-jump=toolbox]',\n          eventName: 'jump',\n          eventParam: 'toolbox'\n        }, {\n          selector: '[data-jump=teststatus]',\n          eventName: 'jump',\n          eventParam: 'teststatus'\n        }, {\n          selector: '[data-jump=shortcuts]',\n          eventName: 'shortcuts',\n          eventParam: 'shortcuts'\n        }];\n\n        _.forEach(behavior, function (linkDescription) {\n          var $link = _this.getElement().find(linkDescription.selector);\n\n          var handleLink = function handleLink() {\n            _this.trigger(linkDescription.eventName, linkDescription.eventParam);\n\n            _this.getElement().find(':focus').blur();\n          };\n\n          if ($link) {\n            $link.on('click', handleLink);\n            $link.on('keyup', function (event) {\n              var activationKeys = [32, 13]; // link can be activated by click or enter/space keys\n\n              if (activationKeys.includes(event.keyCode)) {\n                handleLink();\n              }\n            });\n          }\n        });\n      });\n      jumplinksBox.setTemplate(jumplinksTpl);\n\n      _.defer(function () {\n        jumplinksBox.init(config);\n      });\n\n      return jumplinksBox;\n    }\n\n    return jumplinksFactory;\n\n});\n\n","define('taoQtiTest/runner/helpers/map',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * @typedef {Object} itemStats\n     * @property {Number} questions - the number of questions items\n     * @property {Number} answered - the number of answered questions\n     * @property {Number} flagged - the number of items flagged for review\n     * @property {Number} viewed - the number of viewed items\n     * @property {Number} total - the total number of items\n     * @property {Number} questionsViewed - the number of viewed questions\n     */\n\n    /**\n     * Gets an empty stats record\n     * @returns {itemStats}\n     */\n\n    function getEmptyStats() {\n      return {\n        questions: 0,\n        answered: 0,\n        flagged: 0,\n        viewed: 0,\n        total: 0,\n        questionsViewed: 0\n      };\n    }\n    /**\n     * Defines a helper that provides extractors for an assessment test map\n     */\n\n\n    var map = {\n      /**\n       * Gets the jumps table\n       * @param {Object} map - The assessment test map\n       * @returns {Object}\n       */\n      getJumps: function getJumps(map) {\n        return map && map.jumps;\n      },\n\n      /**\n       * Gets the parts table\n       * @param {Object} map - The assessment test map\n       * @returns {Object}\n       */\n      getParts: function getParts(map) {\n        return map && map.parts;\n      },\n\n      /**\n       * Get sections table\n       * @param {Object} map - The assessment test map\n       * @returns {Object} the sections\n       */\n      getSections: function getSections(map) {\n        var parts = this.getParts(map),\n            result = {};\n\n        _.forEach(parts, function (part) {\n          var sections = part.sections;\n\n          if (sections) {\n            _.forEach(sections, function (section) {\n              result[section.id] = section;\n            });\n          }\n        });\n\n        return result;\n      },\n\n      /**\n       * Get active item from the test map\n       * @param {Object} mapWithActive - The assessment test map which has active part/section/item marked\n       * @returns {Object} the active item\n       */\n      getActiveItem: function getActiveItem(mapWithActive) {\n        var parts = this.getParts(mapWithActive),\n            result = {};\n\n        _.forEach(parts, function (part) {\n          var sections = part.sections;\n\n          if (sections) {\n            _.forEach(sections, function (section) {\n              if (section.active) {\n                var items = section.items;\n\n                _.forEach(items, function (item) {\n                  if (item.active) {\n                    result = item;\n                  }\n                });\n              }\n            });\n          }\n        });\n\n        return result;\n      },\n\n      /**\n       * Return the list of remaining sections.\n       * @param {Object} map - The assessment test map\n       * @param {String} sectionId - The next sections will be gathered once this sectionId has been reached\n       * @returns {Object} the next sections\n       */\n      getNextSections: function getNextSections(map, sectionId) {\n        var sections = this.getSections(map),\n            result = {},\n            canList = false;\n\n        _.forEach(sections, function (section) {\n          if (canList) {\n            result[section.id] = section;\n          }\n\n          if (section.id === sectionId) {\n            canList = true;\n          }\n        });\n\n        return result;\n      },\n\n      /**\n       * Gets the jump at a particular position\n       * @param {Object} map - The assessment test map\n       * @param {Number} position - The position of the item\n       * @returns {Object}\n       */\n      getJump: function getJump(map, position) {\n        var jumps = this.getJumps(map);\n        return jumps && jumps[position];\n      },\n\n      /**\n       * Gets a test part by its identifier\n       * @param {Object} map - The assessment test map\n       * @param {String} partName - The identifier of the test part\n       * @returns {Object}\n       */\n      getPart: function getPart(map, partName) {\n        var parts = this.getParts(map);\n        return parts && parts[partName];\n      },\n\n      /**\n       * Gets a test section by its identifier\n       * @param {Object} map - The assessment test map\n       * @param {String} sectionName - The identifier of the test section\n       * @returns {Object}\n       */\n      getSection: function getSection(map, sectionName) {\n        var parts = this.getParts(map);\n        var section = null;\n\n        _.forEach(parts, function (part) {\n          var sections = part.sections;\n\n          if (sections && sections[sectionName]) {\n            section = sections[sectionName];\n            return false;\n          }\n        });\n\n        return section;\n      },\n\n      /**\n       * Gets a test item by its identifier\n       * @param {Object} map - The assessment test map\n       * @param {String} itemIdentifier - The identifier of the test item\n       * @returns {Object}\n       */\n      getItem: function getItem(map, itemIdentifier) {\n        var jump = _.find(this.getJumps(map), {\n          identifier: itemIdentifier\n        });\n\n        return this.getItemAt(map, jump && jump.position);\n      },\n\n      /**\n       * Gets a test item by its identifier\n       * @param {Object} map - The assessment test map\n       * @param {String} itemIdentifier - The identifier of the test item\n       * @returns {String[]} the raw list of categories\n       */\n      getItemCategories: function getItemCategories(map, itemIdentifier) {\n        var item = this.getItem(map, itemIdentifier);\n\n        if (item && Array.isArray(item.categories)) {\n          return item.categories;\n        }\n\n        return [];\n      },\n\n      /**\n       * Check if an item has a category\n       * @param {Object} map - The assessment test map\n       * @param {String} itemIdentifier - The identifier of the test item\n       * @param {String} category - the category to check\n       * @param {Boolean} [fuzzyMatch=false] - if true the prefix or the case doesn't matter\n       * @returns {String[]} the raw list of categories\n       */\n      hasItemCategory: function hasItemCategory(map, itemIdentifier, category) {\n        var fuzzyMatch = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        var taoPrefix = 'x-tao-option-';\n        var categories = this.getItemCategories(map, itemIdentifier);\n\n        if (!category || !category.length) {\n          return false;\n        }\n\n        var exactMatch = categories.includes(category);\n\n        if (exactMatch) {\n          return true;\n        }\n\n        if (fuzzyMatch) {\n          //check by adding the prefix first\n          if (!category.startsWith(taoPrefix) && category.includes(\"\".concat(taoPrefix).concat(category))) {\n            return true;\n          } //compare without the prefix and any case system\n\n\n          var normalize = function normalize(elt) {\n            return elt.replace(taoPrefix, '').replace(/[-_\\s]/g, '').toLowerCase();\n          };\n\n          return categories.some(function (itemCategory) {\n            return normalize(itemCategory) === normalize(category);\n          });\n        }\n\n        return false;\n      },\n\n      /**\n       * Gets the global stats of the assessment test\n       * @param {Object} map - The assessment test map\n       * @returns {itemStats}\n       */\n      getTestStats: function getTestStats(map) {\n        return map && map.stats;\n      },\n\n      /**\n       * Gets the stats of the test part containing a particular position\n       * @param {Object} map - The assessment test map\n       * @param {String} partName - The identifier of the test part\n       * @returns {itemStats}\n       */\n      getPartStats: function getPartStats(map, partName) {\n        var part = this.getPart(map, partName);\n        return part && part.stats;\n      },\n\n      /**\n       * Gets the stats of the test section containing a particular position\n       * @param {Object} map - The assessment test map\n       * @param {String} sectionName - The identifier of the test section\n       * @returns {itemStats}\n       */\n      getSectionStats: function getSectionStats(map, sectionName) {\n        var section = this.getSection(map, sectionName);\n        return section && section.stats;\n      },\n\n      /**\n       * Gets the stats related to a particular scope\n       * @param {Object} map - The assessment test map\n       * @param {Number} position - The current position\n       * @param {String} [scope] - The name of the scope. Can be: test, part, section (default: test)\n       * @returns {itemStats}\n       */\n      getScopeStats: function getScopeStats(map, position, scope) {\n        var jump = this.getJump(map, position);\n\n        switch (scope) {\n          case 'section':\n          case 'testSection':\n            return this.getSectionStats(map, jump && jump.section);\n\n          case 'part':\n          case 'testPart':\n            return this.getPartStats(map, jump && jump.part);\n          // During calculation stats for this case,\n          // we are considiring all unanswered inaccessible items as answered\n\n          case 'testWithoutInaccessibleItems':\n            {\n              var testStats = this.getTestStats(map);\n\n              var _this$getPart = this.getPart(map, jump && jump.part),\n                  currentPartPosition = _this$getPart.position,\n                  isCurrentPartLinear = _this$getPart.isLinear;\n\n              var parts = Object.values(this.getParts(map)).filter(function (_ref) {\n                var partPosition = _ref.position;\n                return partPosition < currentPartPosition;\n              }).sort(function (a, b) {\n                return b - a;\n              }); // Find the neirest part to which test taker can not navigate\n\n              var linearPartIndex = isCurrentPartLinear ? 0 : parts.findIndex(function (_ref2) {\n                var isLinear = _ref2.isLinear;\n                return isLinear;\n              });\n\n              if (linearPartIndex === -1) {\n                return testStats;\n              } // Calculate all unanswered and flagged questions in inaccessible parts\n\n\n              var inaccessibleParts = parts.slice(linearPartIndex);\n              var countOfInaccessibleUnasweredQestions = inaccessibleParts.reduce(function (acc, _ref3) {\n                var _ref3$stats = _ref3.stats,\n                    questions = _ref3$stats.questions,\n                    answered = _ref3$stats.answered;\n                return acc + (questions - answered);\n              }, 0);\n              var countOfInaccessibleFlaggedQestions = inaccessibleParts.reduce(function (acc, _ref4) {\n                var flagged = _ref4.stats.flagged;\n                return acc + flagged;\n              }, 0);\n              return Object.assign({}, testStats, {\n                answered: testStats.answered + countOfInaccessibleUnasweredQestions,\n                flagged: testStats.flagged - countOfInaccessibleFlaggedQestions\n              });\n            }\n\n          default:\n          case 'test':\n            return this.getTestStats(map);\n        }\n      },\n\n      /**\n       * Gets the map of a particular scope from a particular position\n       * @param {Object} map - The assessment test map\n       * @param {Number} position - The current position\n       * @param {String} [scope] - The name of the scope. Can be: test, part, section (default: test)\n       * @returns {object} The scoped map\n       */\n      getScopeMap: function getScopeMap(map, position, scope) {\n        // need a clone of the map as we will change some properties\n        var scopeMap = _.cloneDeep(map || {}); // gets the current part and section\n\n\n        var jump = this.getJump(scopeMap, position);\n        var part = this.getPart(scopeMap, jump && jump.part);\n        var section = this.getSection(scopeMap, jump && jump.section); // reduce the map to the scope part\n\n        if (scope && scope !== 'test') {\n          scopeMap.parts = {};\n\n          if (part) {\n            scopeMap.parts[jump.part] = part;\n          }\n        } // reduce the map to the scope section\n\n\n        if (part && (scope === 'section' || scope === 'testSection')) {\n          part.sections = {};\n\n          if (section) {\n            part.sections[jump.section] = section;\n          }\n        } // update the stats to reflect the scope\n\n\n        if (section) {\n          section.stats = this.computeItemStats(section.items);\n        }\n\n        if (part) {\n          part.stats = this.computeStats(part.sections);\n        }\n\n        scopeMap.stats = this.computeStats(scopeMap.parts);\n        return scopeMap;\n      },\n\n      /**\n       * Gets the map of a particular scope from a current context\n       * @param {Object} map - The assessment test map\n       * @param {Object} context - The current session context\n       * @param {String} [scope] - The name of the scope. Can be: test, part, section (default: test)\n       * @returns {object} The scoped map\n       */\n      getScopeMapFromContext: function getScopeMapFromContext(map, context, scope) {\n        // need a clone of the map as we will change some properties\n        var scopeMap = _.cloneDeep(map || {});\n\n        var part;\n        var section; // gets the current part and section\n\n        if (context && context.testPartId) {\n          part = this.getPart(scopeMap, context.testPartId);\n        }\n\n        if (context && context.sectionId) {\n          section = this.getSection(scopeMap, context.sectionId);\n        } // reduce the map to the scope part\n\n\n        if (scope && scope !== 'test') {\n          scopeMap.parts = {};\n\n          if (part) {\n            scopeMap.parts[context.testPartId] = part;\n          }\n        } // reduce the map to the scope section\n\n\n        if (part && (scope === 'section' || scope === 'testSection')) {\n          part.sections = {};\n\n          if (section) {\n            part.sections[context.sectionId] = section;\n          }\n        } // update the stats to reflect the scope\n\n\n        if (section) {\n          section.stats = this.computeItemStats(section.items);\n        }\n\n        if (part) {\n          part.stats = this.computeStats(part.sections);\n        }\n\n        scopeMap.stats = this.computeStats(scopeMap.parts);\n        return scopeMap;\n      },\n\n      /**\n       * Gets the test part containing a particular position\n       * @param {Object} map - The assessment test map\n       * @param {Number} position - The position of the item\n       * @returns {Object}\n       */\n      getItemPart: function getItemPart(map, position) {\n        var jump = this.getJump(map, position);\n        return this.getPart(map, jump && jump.part);\n      },\n\n      /**\n       * Gets the test section containing a particular position\n       * @param {Object} map - The assessment test map\n       * @param {Number} position - The position of the item\n       * @returns {Object}\n       */\n      getItemSection: function getItemSection(map, position) {\n        var jump = this.getJump(map, position);\n        var part = this.getPart(map, jump && jump.part);\n        var sections = part && part.sections;\n        return sections && sections[jump && jump.section];\n      },\n\n      /**\n       * Gets the item located at a particular position\n       * @param {Object} map - The assessment test map\n       * @param {Number} position - The position of the item\n       * @returns {Object}\n       */\n      getItemAt: function getItemAt(map, position) {\n        var jump = this.getJump(map, position);\n        var part = this.getPart(map, jump && jump.part);\n        var sections = part && part.sections;\n        var section = sections && sections[jump && jump.section];\n        var items = section && section.items;\n        return items && items[jump && jump.identifier];\n      },\n\n      /**\n       * Gets the identifier of an existing item\n       * @param {Object} map - The assessment test map\n       * @param {Number|String} position - The position of the item, can already be the identifier\n       * @returns {String}\n       */\n      getItemIdentifier: function getItemIdentifier(map, position) {\n        var item;\n\n        if (_.isFinite(position)) {\n          item = this.getItemAt(map, position);\n        } else {\n          item = this.getItem(map, position);\n        }\n\n        return item && item.id;\n      },\n\n      /**\n       * Applies a callback on each item of the provided map\n       * @param {Object} map - The assessment test map\n       * @param {Function} callback(item, section, part, map) - A callback to apply on each item\n       * @returns {Object}\n       */\n      each: function each(map, callback) {\n        if (_.isFunction(callback)) {\n          _.forEach(map && map.parts, function (part) {\n            _.forEach(part && part.sections, function (section) {\n              _.forEach(section && section.items, function (item) {\n                callback(item, section, part, map);\n              });\n            });\n          });\n        }\n\n        return map;\n      },\n\n      /**\n       * Update the map stats from a particular item\n       * @param {Object} map - The assessment test map\n       * @param {Number} position - The position of the item\n       * @returns {Object}\n       */\n      updateItemStats: function updateItemStats(map, position) {\n        var jump = this.getJump(map, position);\n        var part = this.getPart(map, jump && jump.part);\n        var sections = part && part.sections;\n        var section = sections && sections[jump && jump.section];\n\n        if (section) {\n          section.stats = this.computeItemStats(section.items);\n        }\n\n        if (part) {\n          part.stats = this.computeStats(part.sections);\n        }\n\n        if (map) {\n          map.stats = this.computeStats(map.parts);\n        }\n\n        return map;\n      },\n\n      /**\n       * Computes the stats for a list of items\n       * @param {Object} items\n       * @returns {itemStats}\n       */\n      computeItemStats: function computeItemStats(items) {\n        return _.reduce(items, function accStats(acc, item) {\n          if (!item.informational) {\n            acc.questions++;\n\n            if (item.answered) {\n              acc.answered++;\n            }\n\n            if (item.viewed) {\n              acc.questionsViewed++;\n            }\n          }\n\n          if (item.flagged) {\n            acc.flagged++;\n          }\n\n          if (item.viewed) {\n            acc.viewed++;\n          }\n\n          acc.total++;\n          return acc;\n        }, getEmptyStats());\n      },\n\n      /**\n       * Computes the global stats of a collection of stats\n       * @param {Object} collection\n       * @returns {itemStats}\n       */\n      computeStats: function computeStats(collection) {\n        return _.reduce(collection, function accStats(acc, item) {\n          acc.questions += item.stats.questions;\n          acc.answered += item.stats.answered;\n          acc.flagged += item.stats.flagged;\n          acc.viewed += item.stats.viewed;\n          acc.total += item.stats.total;\n          acc.questionsViewed += item.stats.questionsViewed;\n          return acc;\n        }, getEmptyStats());\n      },\n\n      /**\n       * Patch a testMap with a partial testMap.\n       *\n       * If the currentMap is null or the scope is test,\n       * we just use the partialMap as it is.\n       *\n       * Indexes, position and stats will be (re)built.\n       *\n       * @param {Object} currentMap - the map to patch\n       * @param {Object} partialMap - the patch\n       * @param {String} partialMap.scope - indicate the scope of the patch (test, part or section)\n       * @returns {Object} the patched testMap\n       * @throws {TypeError} if the partialMap is no a map\n       */\n      patch: function patch(currentMap, partialMap) {\n        var self = this;\n        var targetMap;\n\n        if (!_.isPlainObject(partialMap) || !partialMap.parts) {\n          throw new TypeError('Invalid test map format');\n        }\n\n        if (!currentMap || partialMap.scope === 'test') {\n          targetMap = _.cloneDeep(partialMap);\n        } else {\n          targetMap = _.cloneDeep(currentMap);\n\n          _.forEach(partialMap.parts, function (partialPart, targetPartId) {\n            if (partialMap.scope === 'part') {\n              //replace the target part\n              targetMap.parts[targetPartId] = _.cloneDeep(partialPart);\n            }\n\n            if (partialMap.scope === 'section') {\n              _.forEach(partialPart.sections, function (partialSection, targetSectionId) {\n                //replace the target section\n                targetMap.parts[targetPartId].sections[targetSectionId] = _.cloneDeep(partialSection); //compte new section stats\n\n                targetMap.parts[targetPartId].sections[targetSectionId].stats = self.computeItemStats(targetMap.parts[targetPartId].sections[targetSectionId].items);\n              });\n            } //compte new/updated part stats\n\n\n            targetMap.parts[targetPartId].stats = self.computeStats(targetMap.parts[targetPartId].sections);\n          }); //compte updated test stats\n\n\n          targetMap.stats = this.computeStats(targetMap.parts);\n        } //the updated map can have a different size than the original\n\n\n        targetMap = this.reindex(targetMap);\n        return targetMap;\n      },\n\n      /**\n       * Rebuild the indexes, positions of all map parts.\n       * Then recreate the jump table.\n       *\n       * @param {Object} map - the map to reindex\n       * @returns {Object} the brand new map\n       * @throws {TypeError} if the map is no a map\n       */\n      reindex: function reindex(map) {\n        var offset = 0;\n        var offsetPart = 0;\n        var offsetSection = 0;\n        var lastPartId;\n        var lastSectionId;\n\n        if (!_.isPlainObject(map) || !map.parts) {\n          throw new TypeError('Invalid test map format');\n        } //remove the jump table\n\n\n        map.jumps = []; //browse the test map, by position\n\n        _.sortBy(map && map.parts, 'position').forEach(function (part) {\n          _.sortBy(part && part.sections, 'position').forEach(function (section) {\n            _.sortBy(section && section.items, 'position').forEach(function (item) {\n              if (lastPartId !== part.id) {\n                offsetPart = 0;\n                lastPartId = part.id;\n                part.position = offset;\n              }\n\n              if (lastSectionId !== section.id) {\n                offsetSection = 0;\n                lastSectionId = section.id;\n                section.position = offset;\n              }\n\n              item.position = offset;\n              item.index = offsetSection + 1;\n              item.positionInPart = offsetPart;\n              item.positionInSection = offsetSection;\n              map.jumps[offset] = {\n                identifier: item.id,\n                section: section.id,\n                part: part.id,\n                position: offset\n              };\n              offset++;\n              offsetSection++;\n              offsetPart++;\n            });\n          });\n        });\n\n        return map;\n      },\n\n      /**\n       * Create the jump table for a test map\n       *\n       * @param {Object} map - the map\n       * @returns {Object} the brand new map with a jump table\n       * @throws {TypeError} if the map is no a map\n       */\n      createJumpTable: function createJumpTable(map) {\n        if (!_.isPlainObject(map) || !map.parts) {\n          throw new TypeError('Invalid test map format');\n        }\n\n        map.jumps = [];\n        this.each(map, function (item, section, part) {\n          var offset = item.position;\n          map.jumps[offset] = {\n            identifier: item.id,\n            section: section.id,\n            part: part.id,\n            position: offset\n          };\n        });\n        return map;\n      }\n    };\n\n    return map;\n\n});\n\n","define('taoQtiTest/runner/helpers/isReviewPanelEnabled',['taoQtiTest/runner/helpers/map'], function (mapHelper) { 'use strict';\n\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n\n    /**\n     * Tells if the review panel is enabled\n     * @returns {Boolean}\n     */\n\n    function isReviewPanelEnabled(runner) {\n      var reviewEnabled = mapHelper.hasItemCategory(runner.getTestMap(), runner.getTestContext().itemIdentifier, 'reviewScreen', true);\n      var itemReviewEnabled = runner.getOptions().review.enabled;\n      return reviewEnabled && itemReviewEnabled;\n    }\n\n    return isReviewPanelEnabled;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/jumplinks/shortcuts',['i18n', 'lodash', 'ui/component', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'handlebars'], function (__, _, component, keyNavigator, navigableDomElement, Handlebars) { 'use strict';\n\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    component = component && Object.prototype.hasOwnProperty.call(component, 'default') ? component['default'] : component;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n        <div class=\\\"shortcuts-group-wrapper\\\">\\n            <h3 class=\\\"shortcuts-group-title\\\">\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</h3>\\n            <ul class=\\\"shortcuts-group-list\\\">\\n                \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.shortcuts), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n            </ul>\\n        </div>\\n        \";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n                <li class=\\\"shortcut-item\\\">\\n                    <span class=\\\"shortcut-item-shortcut\\\">\\n                        <kbd>\";\n      if (helper = helpers.shortcut) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.shortcut); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</kbd>\\n                    </span>\\n                    <span class=\\\"shortcut-item-action\\\">\\n                        \";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\n                    </span>\\n                </li>\\n                \";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"shortcuts-list-wrapper\\\">\\n    <div class=\\\"shortcuts-list\\\" role=\\\"dialog\\\" aria-modal=\\\"true\\\" aria-labelledby=\\\"jumplinks/shortcuts-heading\\\"\\n        aria-describedby=\\\"jumplinks/shortcuts-description\\\">\\n        <h2 class=\\\"shortcuts-list-title\\\" id=\\\"jumplinks/shortcuts-heading\\\">\\n            \"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Keyboard Navigation\", options) : helperMissing.call(depth0, \"__\", \"Keyboard Navigation\", options)))\n        + \"\\n        </h2>\\n        <div id=\\\"jumplinks/shortcuts-description\\\">\\n            <p class=\\\"shortcuts-list-description\\\">\\n                \"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Keyboard shortcuts for the Accessibility Tools are available to the Test-taker.\", options) : helperMissing.call(depth0, \"__\", \"Keyboard shortcuts for the Accessibility Tools are available to the Test-taker.\", options)))\n        + \"\\n            </p>\\n            <p class=\\\"shortcuts-list-description\\\">\\n                \"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"You can magnify the content by up to 200%. Check your browser settings to find out how to do it.\", options) : helperMissing.call(depth0, \"__\", \"You can magnify the content by up to 200%. Check your browser settings to find out how to do it.\", options)))\n        + \"\\n            </p>\\n        </div>\\n        <button aria-label=\\\"Close dialog\\\" class=\\\"btn-close small\\\" data-control=\\\"close-btn\\\" type=\\\"button\\\">\\n            <span class=\\\"icon-close\\\"></span>\\n        </button>\\n        \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.shortcutsGroups), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function shortcutsTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Default config values, see below.\n     */\n\n    var defaults = {\n      shortcutsGroups: [{\n        id: 'navigation-shortcuts',\n        label: __('Navigation shortcuts'),\n        shortcuts: [{\n          id: 'next',\n          shortcut: 'ALT + Shift + N',\n          label: __('Go to the next question')\n        }, {\n          id: 'previous',\n          shortcut: 'ALT + Shift + P',\n          label: __('Go to the previous question')\n        }, {\n          id: 'current',\n          shortcut: 'ALT + Shift + Q',\n          label: __('Go to the current question')\n        }, {\n          id: 'top',\n          shortcut: 'ALT + Shift + T',\n          label: __('Go to the top of the page')\n        }]\n      }]\n    };\n    /**\n     * Creates and initialize the shortcuts component.\n     * Please not the component IS NOT rendered.\n     * You'll have to render it by yourself.\n     *\n     * @param {Object} config\n     * @returns {shortcutsBox} the component, initialized and rendered\n     */\n\n    function shortcutsBoxFactory(config) {\n      var ESK_KEY_CODE = 27;\n      var shortcutsBox = component({}, defaults).on('render', function () {\n        var _this = this;\n\n        var $element = this.getElement();\n        var $closeBtn = $element.find('.btn-close');\n        var $keyNavigationItems = this.getElement().find('.shortcuts-list, .btn-close');\n        $closeBtn.on('click', function () {\n          return _this.trigger('close');\n        }); // handle overlay click\n\n        $element.on('click', function (e) {\n          if ($element.is(e.target)) {\n            _this.trigger('close');\n          }\n        });\n        $element.on('keyup', function (e) {\n          if (e.keyCode === ESK_KEY_CODE) {\n            _this.trigger('close');\n          }\n        });\n        this.navigator = keyNavigator({\n          elements: navigableDomElement.createFromDoms($keyNavigationItems),\n          propagateTab: false\n        }) // keep cursor at close button\n        .on('tab', function () {\n          this.setCursorAt(1);\n        }).on('shift+tab', function () {\n          this.setCursorAt(1);\n        }) // prevent focus move from shortcuts modal\n        .on('blur', function () {\n          _.defer(function () {\n            if (!_this.navigator.isFocused()) {\n              _this.navigator.focus();\n            }\n          });\n        }).on('activate', function (cursor) {\n          cursor.navigable.getElement().click();\n        });\n        this.navigator.first();\n      }).on('destroy', function () {\n        this.navigator.destroy();\n        this.getElement().remove();\n      });\n      shortcutsBox.setTemplate(shortcutsTpl);\n      shortcutsBox.init(config);\n      return shortcutsBox;\n    }\n\n    return shortcutsBoxFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/jumplinks/plugin',['i18n', 'jquery', 'taoTests/runner/plugin', 'taoQtiTest/runner/helpers/isReviewPanelEnabled', 'taoQtiTest/runner/plugins/content/accessibility/jumplinks/helpers', 'taoQtiTest/runner/plugins/content/accessibility/jumplinks/jumplinks', 'taoQtiTest/runner/plugins/content/accessibility/jumplinks/shortcuts', 'util/shortcut', 'util/namespace', 'handlebars'], function (__, $$1, pluginFactory, isReviewPanelEnabled, helpers, jumplinksFactory, shortcutsFactory, shortcut, namespaceHelper, Handlebars) { 'use strict';\n\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    isReviewPanelEnabled = isReviewPanelEnabled && Object.prototype.hasOwnProperty.call(isReviewPanelEnabled, 'default') ? isReviewPanelEnabled['default'] : isReviewPanelEnabled;\n    jumplinksFactory = jumplinksFactory && Object.prototype.hasOwnProperty.call(jumplinksFactory, 'default') ? jumplinksFactory['default'] : jumplinksFactory;\n    shortcutsFactory = shortcutsFactory && Object.prototype.hasOwnProperty.call(shortcutsFactory, 'default') ? shortcutsFactory['default'] : shortcutsFactory;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n      return \"<div class=\\\"jump-links-container\\\"></div>\\n\";\n      });\n    function containerTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Creates the JumpLinks plugin.\n     * adding jumplinks accessibility feature for quick navigation\n     */\n\n    var plugin = pluginFactory({\n      name: 'jumplinks',\n\n      /**\n       * Initializes the plugin (called during runner's init)\n       */\n      init: function init() {\n        var _this = this;\n\n        var testRunner = this.getTestRunner();\n        var item = testRunner.getCurrentItem();\n        var config = {\n          isReviewPanelEnabled: isReviewPanelEnabled(testRunner),\n          questionStatus: helpers.getItemStatus(item)\n        };\n        var testRunnerOptions = testRunner.getOptions();\n        var pluginShortcuts = (testRunnerOptions.shortcuts || {})[this.getName()] || {};\n        var areaBroker = this.getAreaBroker();\n        var getJumpElement = helpers.getJumpElementFactory(areaBroker);\n        var shortcutsConfig = navigator.appVersion.indexOf(\"Mac\") !== -1 ? {\n          shortcutsGroups: [{\n            id: 'navigation-shortcuts',\n            label: __('Navigation shortcuts'),\n            shortcuts: [{\n              id: 'next',\n              shortcut: 'OPTION + Shift + N',\n              label: __('Go to the next question')\n            }, {\n              id: 'previous',\n              shortcut: 'OPTION + Shift + P',\n              label: __('Go to the previous question')\n            }, {\n              id: 'current',\n              shortcut: 'OPTION + Shift + Q',\n              label: __('Go to the current question')\n            }, {\n              id: 'top',\n              shortcut: 'OPTION + Shift + T',\n              label: __('Go to the top of the page')\n            }]\n          }]\n        } : {};\n\n        if (testRunnerOptions.allowShortcuts) {\n          pluginShortcuts.goToTop && shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.goToTop, this.getName(), true), function () {\n            $$1('[tabindex]').first().focus();\n          }, {\n            avoidInput: true,\n            prevent: true\n          });\n          pluginShortcuts.goToQuestion && shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.goToQuestion, this.getName(), true), function () {\n            getJumpElement.question.focus();\n          }, {\n            avoidInput: true,\n            prevent: true\n          });\n        }\n\n        this.jumplinks = jumplinksFactory(config).on('render', function () {\n          _this.jumplinks.on('jump', function (jumpTo) {\n            var $element = getJumpElement[jumpTo];\n            $element.focus();\n          });\n\n          _this.jumplinks.on('shortcuts', function () {\n            if (_this.shortcuts) {\n              return;\n            }\n\n            _this.shortcuts = shortcutsFactory(shortcutsConfig);\n\n            _this.shortcuts.render(_this.getAreaBroker().getControlArea());\n\n            _this.shortcuts.on('close', function () {\n              _this.shortcuts.destroy();\n\n              _this.shortcuts = null;\n            });\n          });\n        }).on('update', function update(params) {\n          this.trigger('changeReviewPanel', params.isReviewPanelEnabled);\n          this.trigger('changeQuesitionStatus', params.questionStatus);\n        }).on('changeReviewPanel', function changeReviewPanel(enabled) {\n          var elem = this.getElement();\n          var panelJumplink = elem.find('[data-jump=\"teststatus\"]').parent();\n\n          if (enabled) {\n            panelJumplink.removeClass('hidden');\n          } else {\n            panelJumplink.addClass('hidden');\n          }\n        }).on('changeQuesitionStatus', function changeQuesitionStatus(questionStatus) {\n          var elem = this.getElement();\n          var text = \"\".concat(__('Question'), \" - \").concat(questionStatus);\n          elem.find('[data-jump=\"question\"] > b').text(text);\n        });\n        testRunner.on('renderitem', function () {\n          var currentItem = testRunner.getCurrentItem();\n          var updatedConfig = {\n            isReviewPanelEnabled: !helpers.isReviewPanelHidden(testRunner) && isReviewPanelEnabled(testRunner),\n            questionStatus: helpers.getItemStatus(currentItem)\n          };\n\n          var announcedText = __('Item %s loaded', currentItem.position);\n\n          var $announce = $$1('[aria-live=polite][role=alert]').first();\n\n          if ($announce.length !== 1) {\n            $announce = $$1('<div aria-live=\"polite\" role=\"alert\" class=\"visible-hidden\"></div>');\n            $$1('main').first().append($announce);\n          }\n\n          $announce.text(announcedText);\n\n          _this.jumplinks.trigger('update', updatedConfig);\n        }).on('tool-flagitem', function () {\n          var currentItem = testRunner.getCurrentItem();\n          var questionStatus = helpers.getItemStatus(Object.assign({}, currentItem, {\n            flagged: !currentItem.flagged\n          }));\n\n          _this.jumplinks.trigger('changeQuesitionStatus', questionStatus);\n        }).on('tool-reviewpanel', function () {\n          var wasHidden = helpers.isReviewPanelHidden(testRunner);\n\n          _this.jumplinks.trigger('changeReviewPanel', wasHidden);\n        }).after('renderitem', function () {\n          getJumpElement.question.attr('tabindex', '-1').focus();\n        });\n      },\n\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        var jumplinksContainer = $$1(containerTpl());\n        $$1('.content-wrap').prepend(jumplinksContainer);\n        this.jumplinks.render(jumplinksContainer);\n      }\n    });\n\n    return plugin;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/headerNavigation',['jquery', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers'], function ($, keyNavigator, navigableDomElement, helpers) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n    /**\n     * The identifier the keyNavigator group\n     * @type {String}\n     */\n\n    var groupId = 'header-toolbar';\n    /**\n     * Key navigator strategy applying onto the header bar.\n     * @type {Object} keyNavigationStrategy\n     */\n\n    var headerNavigation = {\n      name: 'header',\n\n      /**\n       * Builds the header navigation strategy.\n       *\n       * @returns {keyNavigationStrategy}\n       */\n      init: function init() {\n        var _this = this;\n\n        var config = this.getConfig(); // we need a global selector as there is currently no way to access the delivery frame from the test runner\n\n        var $headerBar = $('header');\n        var $headerElements = $headerBar.find('a:visible');\n\n        var registerHeaderNavigator = function registerHeaderNavigator(id, group, $elements) {\n          var elements = navigableDomElement.createFromDoms($elements);\n\n          if (elements.length) {\n            var navigator = keyNavigator({\n              id: id,\n              group: group,\n              elements: elements,\n              propagateTab: false,\n              defaultPosition: 0\n            });\n            helpers.setupItemsNavigator(navigator, config);\n            helpers.setupClickableNavigator(navigator);\n\n            _this.keyNavigators.push(navigator);\n          }\n        };\n\n        this.keyNavigators = [];\n\n        if (config.flatNavigation) {\n          $headerElements.each(function (index, element) {\n            return registerHeaderNavigator(\"\".concat(groupId, \"-\").concat(index), $headerBar, $(element));\n          });\n        } else {\n          registerHeaderNavigator(groupId, $headerBar, $headerElements);\n        }\n\n        return this;\n      },\n\n      /**\n       * Gets the list of applied navigators\n       * @returns {keyNavigator[]}\n       */\n      getNavigators: function getNavigators() {\n        return this.keyNavigators;\n      },\n\n      /**\n       * Tears down the keyNavigator strategy\n       * @returns {keyNavigationStrategy}\n       */\n      destroy: function destroy() {\n        this.keyNavigators.forEach(function (navigator) {\n          return navigator.destroy();\n        });\n        this.keyNavigators = [];\n        return this;\n      }\n    };\n\n    return headerNavigation;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/toolbarNavigation',['lodash', 'jquery', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers'], function (_, $, keyNavigator, navigableDomElement, helpers) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n    /**\n     * The identifier the keyNavigator group\n     * @type {String}\n     */\n\n    var groupId = 'bottom-toolbar';\n    /**\n     * Key navigator strategy applying onto the tools bar\n     * @type {Object} keyNavigationStrategy\n     */\n\n    var toolbarNavigation = {\n      name: 'toolbar',\n\n      /**\n       * Builds the toolbar navigation strategy.\n       *\n       * @returns {keyNavigationStrategy}\n       */\n      init: function init() {\n        var _this = this;\n\n        var config = this.getConfig();\n        var $navigationBar = this.getTestRunner().getAreaBroker().getContainer().find('.bottom-action-bar');\n        var $toolbarElements = $navigationBar.find('.action:not(.btn-group):visible, .action.btn-group .li-inner:visible');\n\n        if (config.reverseBottomToolbar) {\n          $toolbarElements = $($toolbarElements.get().reverse());\n        }\n\n        var registerToolbarNavigator = function registerToolbarNavigator(id, group, $elements) {\n          var elements = navigableDomElement.createFromDoms($elements);\n\n          if (elements.length) {\n            var navigator = keyNavigator({\n              id: id,\n              group: group,\n              elements: elements,\n              propagateTab: false,\n              defaultPosition: function defaultPosition(navigableElements) {\n                var pos = 0; // search for the position of the \"Next\" button if any,\n                // otherwise take the position of the last element\n\n                if (config.autoFocus) {\n                  pos = navigableElements.length - 1;\n\n                  _.forEach(navigableElements, function (navigable, i) {\n                    var $element = navigable.getElement();\n\n                    if ($element.data('control') === 'move-forward' || $element.data('control') === 'move-end') {\n                      pos = i;\n                    }\n                  });\n                }\n\n                return pos;\n              }\n            });\n            helpers.setupItemsNavigator(navigator, config);\n            helpers.setupClickableNavigator(navigator);\n\n            _this.keyNavigators.push(navigator);\n          }\n        };\n\n        this.keyNavigators = [];\n\n        if (config.flatNavigation) {\n          $toolbarElements.each(function (index, element) {\n            return registerToolbarNavigator(\"\".concat(groupId, \"-\").concat(index), $navigationBar, $(element));\n          });\n        } else {\n          registerToolbarNavigator(groupId, $navigationBar, $toolbarElements);\n        }\n\n        return this;\n      },\n\n      /**\n       * Gets the list of applied navigators\n       * @returns {keyNavigator[]}\n       */\n      getNavigators: function getNavigators() {\n        return this.keyNavigators;\n      },\n\n      /**\n       * Tears down the keyNavigator strategy\n       * @returns {keyNavigationStrategy}\n       */\n      destroy: function destroy() {\n        this.keyNavigators.forEach(function (navigator) {\n          return navigator.destroy();\n        });\n        this.keyNavigators = [];\n        return this;\n      }\n    };\n\n    return toolbarNavigation;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/topToolbarNavigation',['jquery', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers'], function ($, keyNavigator, navigableDomElement, helpers) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n    /**\n     * The identifier the keyNavigator group\n     * @type {String}\n     */\n\n    var groupId = 'top-toolbar';\n    /**\n     * Key navigator strategy applying onto the top toolbar' bar.\n     * @type {Object} keyNavigationStrategy\n     */\n\n    var topToolbarNavigation = {\n      name: 'top-toolbar',\n\n      /**\n       * Builds the top toolbar navigation strategy.\n       *\n       * @returns {keyNavigationStrategy}\n       */\n      init: function init() {\n        var _this = this;\n\n        var config = this.getConfig();\n        var $topToolbar = this.getTestRunner().getAreaBroker().getContainer().find('.top-action-bar');\n        var $toolbarElements = $topToolbar.find('.timer-toggler');\n\n        var registerTopToolbarNavigator = function registerTopToolbarNavigator(id, group, $elements) {\n          var elements = navigableDomElement.createFromDoms($elements);\n\n          if (elements.length) {\n            var navigator = keyNavigator({\n              id: id,\n              group: group,\n              elements: elements,\n              propagateTab: false\n            });\n            helpers.setupItemsNavigator(navigator, config);\n            helpers.setupClickableNavigator(navigator);\n\n            _this.keyNavigators.push(navigator);\n          }\n        };\n\n        this.keyNavigators = [];\n        $toolbarElements.each(function (index, element) {\n          return registerTopToolbarNavigator(\"\".concat(groupId, \"-\").concat(index), $topToolbar, $(element));\n        });\n        return this;\n      },\n\n      /**\n       * Gets the list of applied navigators\n       * @returns {keyNavigator[]}\n       */\n      getNavigators: function getNavigators() {\n        return this.keyNavigators;\n      },\n\n      /**\n       * Tears down the keyNavigator strategy\n       * @returns {keyNavigationStrategy}\n       */\n      destroy: function destroy() {\n        this.keyNavigators.forEach(function (navigator) {\n          return navigator.destroy();\n        });\n        this.keyNavigators = [];\n        return this;\n      }\n    };\n\n    return topToolbarNavigation;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/navigatorNavigation',['lodash', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers'], function (_, keyNavigator, navigableDomElement, helpers) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n    /**\n     * List of CSS selectors for the navigables\n     * @type {Object}\n     */\n\n    var selectors = {\n      filters: '.qti-navigator-filters .qti-navigator-filter',\n      enabledItems: '.qti-navigator-tree .qti-navigator-item:not(.disabled) .qti-navigator-label'\n    };\n    /**\n     * For 'fizzy' navigator layout, builds the navigator navigation strategy.\n     *\n     * @returns {keyNavigationStrategy}\n     */\n\n    function initFizzy(config, $panel, $navigator, keyNavigators, managedNavigators) {\n      var itemsNavigator;\n      var $navigatorTree = $panel.find('.qti-navigator-tree');\n      var $enabledItems = $navigator.find('.qti-navigator-tree .buttonlist-item:not(.disabled) .buttonlist-btn');\n      var navigableItems = navigableDomElement.createFromDoms($enabledItems);\n      /**\n       * Get item wrapper from navigable button\n       * (`navigable`: '.buttonlist-btn'; `parent()`: '.buttonlist-item')\n       * @returns {jQuery}\n       */\n\n      var getItemFromNavigable = function getItemFromNavigable(navigable) {\n        return navigable.getElement().parent();\n      };\n\n      if (navigableItems.length) {\n        itemsNavigator = keyNavigator({\n          id: 'navigator-items',\n          elements: navigableItems,\n          group: $navigatorTree,\n          loop: true,\n          defaultPosition: function defaultPosition(navigableElements) {\n            var pos = _.findIndex(navigableElements, function (navigable) {\n              var $parent = getItemFromNavigable(navigable);\n\n              if ($parent.hasClass('buttonlist-item-active') && $parent.is(':visible')) {\n                return true;\n              }\n            });\n\n            return pos >= 0 ? pos : 0;\n          }\n        }).on('focus', function (cursor) {\n          getItemFromNavigable(cursor.navigable).addClass('key-navigation-highlight');\n        }).on('blur', function (cursor) {\n          getItemFromNavigable(cursor.navigable).removeClass('key-navigation-highlight');\n        });\n        helpers.setupItemsNavigator(itemsNavigator, {\n          keyNextItem: config.keyNextItem,\n          keyPrevItem: config.keyPrevItem\n        });\n        helpers.setupClickableNavigator(itemsNavigator);\n        keyNavigators.push(itemsNavigator);\n        managedNavigators.push(itemsNavigator);\n      }\n    }\n    /**\n     * Key navigator strategy applying onto the navigation panel.\n     * @type {Object} keyNavigationStrategy\n     */\n\n\n    var navigatorNavigation = {\n      name: 'navigator',\n\n      /**\n       * Builds the navigator navigation strategy.\n       *\n       * @returns {keyNavigationStrategy}\n       */\n      init: function init() {\n        var config = this.getConfig();\n        var $panel = this.getTestRunner().getAreaBroker().getPanelArea();\n        var $navigator = $panel.find('.qti-navigator');\n        var isFizzyLayout = $navigator.hasClass('qti-navigator-fizzy');\n        this.managedNavigators = [];\n        this.keyNavigators = [];\n\n        if ($navigator.length && !$navigator.hasClass('disabled')) {\n          if (isFizzyLayout) {\n            initFizzy(config, $panel, $navigator, this.keyNavigators, this.managedNavigators);\n          } else {\n            var $testStatusHeader = $navigator.find('.qti-navigator-info.collapsible > .qti-navigator-label');\n            var navigableTestStatus = navigableDomElement.createFromDoms($testStatusHeader);\n            $testStatusHeader.addClass('key-navigation-actionable');\n\n            if (navigableTestStatus.length) {\n              var testStatusNavigation = keyNavigator({\n                keepState: config.keepState,\n                id: 'navigator-test-status',\n                propagateTab: false,\n                elements: navigableTestStatus,\n                group: $testStatusHeader\n              });\n              helpers.setupItemsNavigator(testStatusNavigation, {\n                keyNextItem: config.keyNextTab || config.keyNextItem,\n                keyPrevItem: config.keyPrevTab || config.keyPrevItem\n              });\n              this.keyNavigators.push(testStatusNavigation);\n              this.managedNavigators.push(testStatusNavigation);\n            }\n\n            var filtersNavigator;\n            var itemsNavigator; //the tag to identify if the item listing has been browsed, to only \"smart jump\" to active item only on the first visit\n\n            var itemListingVisited = false; //the position of the filter in memory, to only \"smart jump\" to active item only on the first visit\n\n            var currentFilter;\n            var $filters = $navigator.find(selectors.filters);\n            var navigableFilters = navigableDomElement.createFromDoms($filters);\n\n            if (navigableFilters.length) {\n              filtersNavigator = keyNavigator({\n                keepState: config.keepState,\n                id: 'navigator-filters',\n                propagateTab: false,\n                elements: navigableFilters,\n                group: $navigator.find('.qti-navigator-filters')\n              });\n              helpers.setupItemsNavigator(filtersNavigator, {\n                keyNextItem: config.keyNextTab || config.keyNextItem,\n                keyPrevItem: config.keyPrevTab || config.keyPrevItem\n              });\n              helpers.setupClickableNavigator(filtersNavigator);\n\n              if (config.keepState) {\n                filtersNavigator.on('focus', function (cursor) {\n                  if (config.keepState) {\n                    var $element = cursor.navigable.getElement();\n                    var filter = $element.data('mode');\n                    $element.click();\n\n                    if (currentFilter !== filter) {\n                      itemListingVisited = false;\n                    }\n\n                    currentFilter = filter;\n                  }\n                });\n              }\n\n              if (config.keyNextContent) {\n                filtersNavigator.on(config.keyNextContent, function (elem) {\n                  if (helpers.allowedToNavigateFrom(elem) && itemsNavigator) {\n                    _.defer(function () {\n                      if (itemListingVisited) {\n                        itemsNavigator.first();\n                      } else {\n                        itemsNavigator.focus();\n                      }\n                    });\n                  }\n                });\n              }\n\n              if (config.keyPrevContent) {\n                filtersNavigator.on(config.keyPrevContent, function (elem) {\n                  if (helpers.allowedToNavigateFrom(elem) && itemsNavigator) {\n                    _.defer(function () {\n                      itemsNavigator.last();\n                    });\n                  }\n                });\n              }\n\n              this.keyNavigators.push(filtersNavigator);\n              this.managedNavigators.push(filtersNavigator);\n            }\n\n            var $navigatorTree = $panel.find('.qti-navigator-tree');\n            var $trees = $navigator.find(selectors.enabledItems);\n            var navigableTrees = navigableDomElement.createFromDoms($trees);\n            $trees.first().addClass('key-navigation-scrollable-up');\n            $trees.last().addClass('key-navigation-scrollable-down');\n\n            if (navigableTrees.length) {\n              //instantiate a key navigator but do not add it to the returned list of navigators as this is not supposed to be reached with tab key\n              itemsNavigator = keyNavigator({\n                id: 'navigator-items',\n                elements: navigableTrees,\n                group: $navigatorTree,\n                defaultPosition: function defaultPosition(navigableElements) {\n                  var pos = 0;\n\n                  if (config.flatNavigation || currentFilter !== 'flagged') {\n                    pos = _.findIndex(navigableElements, function (navigable) {\n                      var $parent = navigable.getElement().parent('.qti-navigator-item');\n\n                      if ($parent.hasClass('active') && $parent.is(':visible')) {\n                        return true;\n                      }\n                    });\n                  }\n\n                  return pos;\n                }\n              }).on('focus', function (cursor) {\n                itemListingVisited = true;\n                cursor.navigable.getElement().parent().addClass('key-navigation-highlight');\n              }).on('blur', function (cursor) {\n                cursor.navigable.getElement().parent().removeClass('key-navigation-highlight');\n              });\n              helpers.setupItemsNavigator(itemsNavigator, {\n                keyNextItem: config.keyNextContent || config.keyNextItem,\n                keyPrevItem: config.keyPrevContent || config.keyPrevItem\n              });\n              helpers.setupClickableNavigator(itemsNavigator);\n\n              if (config.keepState) {\n                itemsNavigator.on('lowerbound upperbound', function () {\n                  if (filtersNavigator) {\n                    filtersNavigator.focus();\n                  }\n                });\n              }\n\n              if (config.keyNextTab && config.keyPrevTab) {\n                itemsNavigator.on(config.keyNextTab, function (elem) {\n                  if (helpers.allowedToNavigateFrom(elem) && filtersNavigator) {\n                    filtersNavigator.focus().next();\n                  }\n                });\n                itemsNavigator.on(config.keyPrevTab, function (elem) {\n                  if (helpers.allowedToNavigateFrom(elem) && filtersNavigator) {\n                    filtersNavigator.focus().previous();\n                  }\n                });\n              } else {\n                this.keyNavigators.push(itemsNavigator);\n              }\n\n              this.managedNavigators.push(itemsNavigator);\n            }\n          }\n        }\n\n        return this;\n      },\n\n      /**\n       * Gets the list of applied navigators\n       * @returns {keyNavigator[]}\n       */\n      getNavigators: function getNavigators() {\n        return this.keyNavigators;\n      },\n\n      /**\n       * Tears down the keyNavigator strategy\n       * @returns {keyNavigationStrategy}\n       */\n      destroy: function destroy() {\n        this.managedNavigators.forEach(function (navigator) {\n          return navigator.destroy();\n        });\n        this.managedNavigators = [];\n        this.keyNavigators = [];\n        return this;\n      }\n    };\n\n    return navigatorNavigation;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/pageNavigation',['jquery', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers'], function ($, keyNavigator, navigableDomElement, helpers) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n    /**\n     * The identifier the keyNavigator group\n     * @type {String}\n     */\n\n    var groupId = 'item-content-wrapper';\n    /**\n     * Key navigator strategy applying onto the page.\n     * @type {Object} keyNavigationStrategy\n     */\n\n    var pageNavigation = {\n      name: 'page',\n\n      /**\n       * Builds the page navigation strategy.\n       *\n       * @returns {keyNavigationStrategy}\n       */\n      init: function init() {\n        var _this = this;\n\n        var config = this.getConfig();\n        this.keyNavigators = [];\n        this.getTestRunner().getAreaBroker().getContainer().find('.content-wrapper').addClass('key-navigation-scrollable').each(function (i, el) {\n          var $element = $(el);\n          var navigator = keyNavigator({\n            id: \"\".concat(groupId, \"-\").concat(_this.keyNavigators.length),\n            elements: navigableDomElement.createFromDoms($element),\n            group: $element,\n            propagateTab: false\n          });\n          helpers.setupItemsNavigator(navigator, config);\n\n          _this.keyNavigators.push(navigator);\n        });\n        return this;\n      },\n\n      /**\n       * Gets the list of applied navigators\n       * @returns {keyNavigator[]}\n       */\n      getNavigators: function getNavigators() {\n        return this.keyNavigators;\n      },\n\n      /**\n       * Tears down the keyNavigator strategy\n       * @returns {keyNavigationStrategy}\n       */\n      destroy: function destroy() {\n        this.keyNavigators.forEach(function (navigator) {\n          return navigator.destroy();\n        });\n        this.keyNavigators = [];\n        return this;\n      }\n    };\n\n    return pageNavigation;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/rubricsNavigation',['jquery', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers'], function ($, keyNavigator, navigableDomElement, helpers) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n    /**\n     * The identifier the keyNavigator group\n     * @type {String}\n     */\n\n    var groupId = 'rubric-element-navigation-group';\n    /**\n     * Key navigator strategy applying onto the rubric blocks.\n     * @type {Object} keyNavigationStrategy\n     */\n\n    var rubricsNavigation = {\n      name: 'rubrics',\n\n      /**\n       * Builds the rubric blocks navigation strategy.\n       *\n       * @returns {keyNavigationStrategy}\n       */\n      init: function init() {\n        var _this = this;\n\n        var config = this.getConfig();\n        this.keyNavigators = [];\n        this.getTestRunner().getAreaBroker().getContainer().find('.qti-rubricBlock').addClass('key-navigation-scrollable').each(function (i, el) {\n          var $element = $(el);\n          var navigator = keyNavigator({\n            id: \"\".concat(groupId, \"-\").concat(_this.keyNavigators.length),\n            elements: navigableDomElement.createFromDoms($element),\n            group: $element,\n            propagateTab: false\n          });\n          helpers.setupItemsNavigator(navigator, config);\n\n          _this.keyNavigators.push(navigator);\n        });\n        return this;\n      },\n\n      /**\n       * Gets the list of applied navigators\n       * @returns {keyNavigator[]}\n       */\n      getNavigators: function getNavigators() {\n        return this.keyNavigators;\n      },\n\n      /**\n       * Tears down the keyNavigator strategy\n       * @returns {keyNavigationStrategy}\n       */\n      destroy: function destroy() {\n        this.keyNavigators.forEach(function (navigator) {\n          return navigator.destroy();\n        });\n        this.keyNavigators = [];\n        return this;\n      }\n    };\n\n    return rubricsNavigation;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/itemNavigation',['jquery', 'ui/scroller', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers'], function ($, scrollHelper, keyNavigator, navigableDomElement, helpers) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    scrollHelper = scrollHelper && Object.prototype.hasOwnProperty.call(scrollHelper, 'default') ? scrollHelper['default'] : scrollHelper;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n    /**\n     * Add aria-labelledby attribute to choice interaction\n     *\n     * @param {Navigator} cursor\n     */\n\n    var addLabelledByAttribute = function addLabelledByAttribute(cursor) {\n      var $element = cursor.navigable.getElement();\n      var value = $element.attr('value');\n      var name = $element.attr('name');\n\n      if (name) {\n        $element.attr('aria-labelledby', \"\".concat(name.replace('response-', 'choice-'), \"-\").concat(value));\n      }\n    };\n    /**\n     * Add aria-labelledby attribute from choice interaction\n     *\n     * @param {Navigator} cursor\n     */\n\n\n    var removeLabelledByAttribute = function removeLabelledByAttribute(cursor) {\n      var $element = cursor.navigable.getElement();\n      $element.removeAttr('aria-labelledby', '');\n    };\n    /**\n     * Adds attributes on navigation focus and blur\n     *\n     * @param {Navigator} navigator\n     */\n\n\n    var manageLabelledByAttribute = function manageLabelledByAttribute(navigator) {\n      if (navigator) {\n        navigator.on('focus', addLabelledByAttribute);\n        navigator.on('blur', removeLabelledByAttribute); // applies WCAG behavior for the radio buttons\n      }\n    };\n    /**\n     * Key navigator strategy applying inside the item.\n     * Navigable item content are interaction choices and body element with the special class \"key-navigation-focusable\".\n     * @type {Object} keyNavigationStrategy\n     */\n\n\n    var itemNavigation = {\n      name: 'item',\n\n      /**\n       * Builds the item navigation strategy.\n       *\n       * @returns {keyNavigationStrategy}\n       */\n      init: function init() {\n        var _this = this;\n\n        this.keyNavigators = [];\n        var config = this.getConfig();\n        var $content = this.getTestRunner().getAreaBroker().getContentArea();\n        /**\n         * Gets the QTI choice element from the current position in the keyNavigation\n         * @param {Object} cursor - The cursor definition supplied by the keyNavigator\n         * @returns {jQuery} - The selected choice element\n         */\n\n        var getQtiChoice = function getQtiChoice(cursor) {\n          return cursor && cursor.navigable.getElement().closest('.qti-choice');\n        };\n        /**\n         * Creates and registers a keyNavigator for the supplied list of elements\n         * @param {jQuery} $elements - The list of navigable elements\n         * @param {jQuery} group - The group container\n         * @param {Boolean} [loop=false] - Allow cycling the list when a boundary is reached\n         * @param {Number|Function} [defaultPosition=0] - The default position the group should set the focus on\n         * @returns {keyNavigator} - the created navigator, if the list of element is not empty\n         */\n\n\n        var addNavigator = function addNavigator($elements, group) {\n          var loop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          var defaultPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n          var elements = navigableDomElement.createFromDoms($elements);\n\n          if (elements.length) {\n            var navigator = keyNavigator({\n              elements: elements,\n              group: group,\n              loop: loop,\n              defaultPosition: defaultPosition,\n              propagateTab: false\n            });\n\n            _this.keyNavigators.push(navigator);\n\n            return navigator;\n          }\n        };\n        /**\n         * Creates and setups a keyNavigator for the interaction inputs.\n         * @param {jQuery} $elements - The list of navigable elements\n         * @param {jQuery} group - The group container\n         * @param {Boolean} [loop=false] - Allow cycling the list when a boundary is reached\n         * @param {Number|Function} [defaultPosition=0] - The default position the group should set the focus on\n         * @returns {keyNavigator} - The supplied keyNavigator\n         */\n\n\n        var addInputsNavigator = function addInputsNavigator($elements, group, loop) {\n          var defaultPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n          var navigator = addNavigator($elements, group, loop, defaultPosition);\n\n          if (navigator) {\n            helpers.setupItemsNavigator(navigator, config);\n            helpers.setupClickableNavigator(navigator); // each choice is represented by more than the input, the style must be spread to the actual element\n\n            navigator.on('focus', function (cursor) {\n              return scrollHelper.scrollTo(getQtiChoice(cursor).addClass('key-navigation-highlight'), $content.closest('.content-wrapper'));\n            }).on('blur', function (cursor) {\n              return getQtiChoice(cursor).removeClass('key-navigation-highlight');\n            });\n          }\n\n          return navigator;\n        }; // list the navigable areas inside the item. This could be either the interactions choices or the prompts\n\n\n        var $qtiInteractions = $content.find('.key-navigation-focusable,.qti-interaction') //filter out interaction as it will be managed separately\n        .filter(function (i, node) {\n          return !$(node).parents('.qti-interaction').length;\n        }); // the item focusable body elements are considered scrollable\n\n        $content.find('.key-navigation-focusable').addClass('key-navigation-scrollable'); // each navigable area will get its own keyNavigator\n\n        $qtiInteractions.each(function (itemPos, itemElement) {\n          var $itemElement = $(itemElement); // detect the type of choices: checkbox or radio\n\n          var $choiceInput = $itemElement.find('.qti-choice input');\n          var choiceType = $choiceInput.attr('type');\n\n          if ($itemElement.hasClass('qti-interaction')) {\n            //add navigable elements from prompt\n            $itemElement.find('.key-navigation-focusable').each(function (navPos, nav) {\n              var $nav = $(nav);\n\n              if (!$nav.closest('.qti-choice').length) {\n                addNavigator($nav, $nav);\n              }\n            }); //reset interaction custom key navigation to override the behaviour with the new one\n\n            $itemElement.off('.keyNavigation'); //search for inputs that represent the interaction focusable choices\n\n            var $inputs = $itemElement.is(':input') ? $itemElement : $itemElement.find(':input');\n\n            if (config.flatNavigation && (config.flatRadioNavigation || choiceType !== 'radio')) {\n              $inputs.each(function (i, input) {\n                var navigator = addInputsNavigator($(input), $itemElement);\n                manageLabelledByAttribute(navigator);\n              });\n            } else {\n              var navigator = addInputsNavigator($inputs, $itemElement, true, function () {\n                // keep default positioning for now\n                var position = -1; // autofocus the selected radio button if any\n\n                $inputs.each(function (index, input) {\n                  if (input.checked) {\n                    position = index;\n                  }\n                });\n                return position;\n              });\n              manageLabelledByAttribute(navigator); // applies WCAG behavior for the radio buttons\n\n              if (navigator && config.wcagBehavior) {\n                navigator.on('focus', function (cursor) {\n                  var $element = cursor.navigable.getElement();\n\n                  if (!$element.is(':checked')) {\n                    $element.click();\n                  }\n                });\n              }\n            }\n          } else {\n            addNavigator($itemElement, $itemElement);\n          }\n        });\n        return this;\n      },\n\n      /**\n       * Gets the list of applied navigators\n       * @returns {keyNavigator[]}\n       */\n      getNavigators: function getNavigators() {\n        return this.keyNavigators;\n      },\n\n      /**\n       * Tears down the keyNavigator strategy\n       * @returns {keyNavigationStrategy}\n       */\n      destroy: function destroy() {\n        this.keyNavigators.forEach(function (navigator) {\n          return navigator.destroy();\n        });\n        this.keyNavigators = [];\n        return this;\n      }\n    };\n\n    return itemNavigation;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/linearItemNavigation',['jquery', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers'], function ($, keyNavigator, navigableDomElement, helpers) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n    /**\n     * Key navigator strategy applying inside the item.\n     * Navigable item content are interaction choices with the special class \"key-navigation-focusable\".\n     * @type {Object} keyNavigationStrategy\n     */\n\n    var linearItemNavigation = {\n      name: 'linearItem',\n\n      /**\n       * Builds the item navigation strategy.\n       *\n       * @returns {keyNavigationStrategy}\n       */\n      init: function init() {\n        var _this = this;\n\n        var config = this.getConfig();\n        var $content = this.getTestRunner().getAreaBroker().getContentArea();\n        var $qtiInteractions = $content.find('.key-navigation-focusable,.qti-interaction') //filter out interaction as it will be managed separately\n        .filter(function (i, node) {\n          return !$(node).parents('.qti-interaction').length;\n        });\n        var $qtiChoices = $qtiInteractions.find('.qti-choice');\n        var $lastParent = null;\n        var list = [];\n\n        var setupListNavigator = function setupListNavigator() {\n          var navigator = keyNavigator({\n            elements: list,\n            propagateTab: false\n          });\n          helpers.setupItemsNavigator(navigator, config);\n\n          _this.choicesNavigators.push(navigator);\n        }; // this strategy manages 2 navigators:\n        // - keyNavigators lists all elements separately, allowing to navigate among them as identified groups\n        // - choicesNavigators lists elements with the same parent, allowing to navigate \"horizontally\" among them\n\n\n        this.keyNavigators = [];\n        this.choicesNavigators = []; // the item focusable body elements are considered scrollable\n\n        $content.find('.key-navigation-focusable').addClass('key-navigation-scrollable');\n        $qtiChoices.each(function (i, el) {\n          var $itemElement = $(el);\n          var $parent = $itemElement.parent();\n          var choiceNavigator = keyNavigator({\n            elements: navigableDomElement.createFromDoms($itemElement),\n            group: $itemElement,\n            propagateTab: false\n          });\n          helpers.setupClickableNavigator(choiceNavigator);\n\n          if ($lastParent && !$parent.is($lastParent)) {\n            setupListNavigator();\n            list = [];\n          }\n\n          _this.keyNavigators.push(choiceNavigator);\n\n          list.push(choiceNavigator);\n          $lastParent = $parent;\n        });\n\n        if (list.length) {\n          setupListNavigator();\n          list = [];\n        }\n\n        return this;\n      },\n\n      /**\n       * Gets the list of applied navigators\n       * @returns {keyNavigator[]}\n       */\n      getNavigators: function getNavigators() {\n        return this.keyNavigators;\n      },\n\n      /**\n       * Tears down the keyNavigator strategy\n       * @returns {keyNavigationStrategy}\n       */\n      destroy: function destroy() {\n        this.keyNavigators.forEach(function (navigator) {\n          return navigator.destroy();\n        });\n        this.choicesNavigators.forEach(function (navigator) {\n          return navigator.destroy();\n        });\n        this.choicesNavigators = [];\n        this.keyNavigators = [];\n        return this;\n      }\n    };\n\n    return linearItemNavigation;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/stimulusNavigation',['jquery', 'i18n', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers'], function ($, __, keyNavigator, navigableDomElement, helpers) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n    /**\n    * The identifier the keyNavigator group\n    * @type {String}\n    */\n\n    var groupId = 'stimulus-element-navigation-group';\n    /**\n     * Key navigator strategy applying on stimulus items with scrollbar.\n     * Navigable item content are body elements with the special class \"stimulus-container\".\n     * @type {Object} keyNavigationStrategy\n     */\n\n    var stimulusNavigation = {\n      name: 'stimulus',\n\n      /**\n       * Builds the item navigation strategy.\n       *\n       * @returns {keyNavigationStrategy}\n       */\n      init: function init() {\n        var _this = this;\n\n        var config = this.getConfig();\n        var $content = this.getTestRunner().getAreaBroker().getContentArea();\n        this.keyNavigators = []; // decorate isEnabled navigableDomElement method to check for dom node height\n\n        var isEnabledDecorator = function isEnabledDecorator(element) {\n          var originalIsEnabled = element.isEnabled;\n\n          element.isEnabled = function isEnabled() {\n            if (originalIsEnabled.call(this)) {\n              var node = this.getElement().get(0);\n              return node.scrollHeight > node.clientHeight;\n            }\n\n            return false;\n          };\n\n          return element;\n        };\n\n        $content.find('.stimulus-container').addClass('key-navigation-scrollable').each(function (i, el) {\n          var $element = $(el);\n          var elements = navigableDomElement.createFromDoms($element).map(isEnabledDecorator); // assign aria attributes\n\n          $element.attr('aria-label', __('Passage'));\n          var navigator = keyNavigator({\n            id: \"\".concat(groupId, \"-\").concat(i),\n            elements: elements,\n            group: $element,\n            propagateTab: false\n          });\n          helpers.setupItemsNavigator(navigator, config);\n\n          _this.keyNavigators.push(navigator);\n        });\n        return this;\n      },\n\n      /**\n       * Gets the list of applied navigators\n       * @returns {keyNavigator[]}\n       */\n      getNavigators: function getNavigators() {\n        return this.keyNavigators;\n      },\n\n      /**\n       * Tears down the keyNavigator strategy\n       * @returns {keyNavigationStrategy}\n       */\n      destroy: function destroy() {\n        this.keyNavigators.forEach(function (navigator) {\n          return navigator.destroy();\n        });\n        this.keyNavigators = [];\n        return this;\n      }\n    };\n\n    return stimulusNavigation;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/jumpLinks',['jquery', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers'], function ($, keyNavigator, navigableDomElement, helpers) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n    /**\n     * The identifier the keyNavigator group\n     * @type {String}\n     */\n\n    var groupId = 'jump-links';\n    /**\n     * Key navigator strategy applying onto the top toolbar' bar.\n     * @type {Object} keyNavigationStrategy\n     */\n\n    var jumpLinks = {\n      name: 'jump-links',\n\n      /**\n       * Builds the top toolbar navigation strategy.\n       *\n       * @returns {keyNavigationStrategy}\n       */\n      init: function init() {\n        var _this = this;\n\n        var config = this.getConfig();\n        var $jumpLinksBox = $('.content-wrap');\n        var $links = $jumpLinksBox.find('.jump-link');\n        this.keyNavigators = [];\n\n        var registerTopToolbarNavigator = function registerTopToolbarNavigator(id, group, $elements) {\n          var elements = navigableDomElement.createFromDoms($elements);\n\n          if (elements.length) {\n            var navigator = keyNavigator({\n              id: id,\n              group: group,\n              elements: elements,\n              propagateTab: false\n            });\n            helpers.setupItemsNavigator(navigator, config);\n            helpers.setupClickableNavigator(navigator);\n\n            _this.keyNavigators.push(navigator);\n          }\n        };\n\n        $links.each(function (index, element) {\n          return registerTopToolbarNavigator(\"\".concat(groupId, \"-\").concat(index), $jumpLinksBox, $(element));\n        });\n        return this;\n      },\n\n      /**\n       * Gets the list of applied navigators\n       * @returns {keyNavigator[]}\n       */\n      getNavigators: function getNavigators() {\n        return this.keyNavigators;\n      },\n\n      /**\n       * Tears down the keyNavigator strategy\n       * @returns {keyNavigationStrategy}\n       */\n      destroy: function destroy() {\n        this.keyNavigators.forEach(function (navigator) {\n          return navigator.destroy();\n        });\n        this.keyNavigators = [];\n        return this;\n      }\n    };\n\n    return jumpLinks;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/index',['exports', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/headerNavigation', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/toolbarNavigation', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/topToolbarNavigation', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/navigatorNavigation', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/pageNavigation', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/rubricsNavigation', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/itemNavigation', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/linearItemNavigation', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/stimulusNavigation', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/jumpLinks'], function (exports, headerNavigation, toolbarNavigation, topToolbarNavigation, navigatorNavigation, pageNavigation, rubricsNavigation, itemNavigation, linearItemNavigation, stimulusNavigation, jumpLinks) { 'use strict';\n\n\theaderNavigation = headerNavigation && Object.prototype.hasOwnProperty.call(headerNavigation, 'default') ? headerNavigation['default'] : headerNavigation;\n\ttoolbarNavigation = toolbarNavigation && Object.prototype.hasOwnProperty.call(toolbarNavigation, 'default') ? toolbarNavigation['default'] : toolbarNavigation;\n\ttopToolbarNavigation = topToolbarNavigation && Object.prototype.hasOwnProperty.call(topToolbarNavigation, 'default') ? topToolbarNavigation['default'] : topToolbarNavigation;\n\tnavigatorNavigation = navigatorNavigation && Object.prototype.hasOwnProperty.call(navigatorNavigation, 'default') ? navigatorNavigation['default'] : navigatorNavigation;\n\tpageNavigation = pageNavigation && Object.prototype.hasOwnProperty.call(pageNavigation, 'default') ? pageNavigation['default'] : pageNavigation;\n\trubricsNavigation = rubricsNavigation && Object.prototype.hasOwnProperty.call(rubricsNavigation, 'default') ? rubricsNavigation['default'] : rubricsNavigation;\n\titemNavigation = itemNavigation && Object.prototype.hasOwnProperty.call(itemNavigation, 'default') ? itemNavigation['default'] : itemNavigation;\n\tlinearItemNavigation = linearItemNavigation && Object.prototype.hasOwnProperty.call(linearItemNavigation, 'default') ? linearItemNavigation['default'] : linearItemNavigation;\n\tstimulusNavigation = stimulusNavigation && Object.prototype.hasOwnProperty.call(stimulusNavigation, 'default') ? stimulusNavigation['default'] : stimulusNavigation;\n\tjumpLinks = jumpLinks && Object.prototype.hasOwnProperty.call(jumpLinks, 'default') ? jumpLinks['default'] : jumpLinks;\n\n\n\n\texports.headerNavigationStrategy = headerNavigation;\n\texports.toolbarNavigationStrategy = toolbarNavigation;\n\texports.topToolbarNavigationStrategy = topToolbarNavigation;\n\texports.navigatorNavigationStrategy = navigatorNavigation;\n\texports.pageNavigationStrategy = pageNavigation;\n\texports.rubricsNavigationStrategy = rubricsNavigation;\n\texports.itemNavigationStrategy = itemNavigation;\n\texports.linearItemNavigationStrategy = linearItemNavigation;\n\texports.stimulusNavigationStrategy = stimulusNavigation;\n\texports.jumpLinksNavigationStrategy = jumpLinks;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategiesManager',['core/providerRegistry', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/index'], function (providerRegistry, strategies) { 'use strict';\n\n    providerRegistry = providerRegistry && Object.prototype.hasOwnProperty.call(providerRegistry, 'default') ? providerRegistry['default'] : providerRegistry;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n    /**\n     * Defines the strategies API\n     * @typedef {Object} keyNavigationStrategy\n     * @property {Function} init\n     * @property {Function} destroy\n     * @property {Function} getNavigators\n     * @property {Function} getName\n     * @property {Function} getConfig\n     * @property {Function} getTestRunner\n     */\n\n    /**\n     * Defines the config structure for the navigation strategies\n     * @typedef {Object} keyNavigationStrategyConfig\n     * @property {Boolean} autoFocus - auto select the main action when available in a group\n     * @property {Boolean} wcagBehavior - apply WCAG recommended behavior for radio buttons and similar elements\n     * @property {Boolean} keepState - for strategies able to keep the state, allow to keep the position of the focused\n     * element when moving away from the group and restore it when the group retrieves the focus\n     * @property {Boolean} propagateTab - propagate the Tab key to the upper level\n     * @property {Boolean} flatNavigation - flatten the navigation between groups, allowing to forward the focus to the\n     * following group when a group boundary is reached. If disabled, the only way to move between groups is to use the\n     * related key combination\n     * @property {String} keyNextItem - the keyboard shortcut to move to the next item (inside the scope)\n     * @property {String} keyPrevItem - the keyboard shortcut to move to the previous item (inside the scope)\n     * @property {String} keyNextGroup - the keyboard shortcut to move to the next group (outside the scope)\n     * @property {String} keyPrevGroup - the keyboard shortcut to move to the previous group (outside the scope)\n     * @property {String} keyNextTab - the keyboard shortcut to move to the next tab of the bar\n     * @property {String} keyPrevTab - the keyboard shortcut to move to the previous tab of the bar\n     * @property {String} keyNextContent - the keyboard shortcut to move to the next content element\n     * @property {String} keyPrevContent - the keyboard shortcut to move to the previous content element\n     */\n\n    /**\n     * Builds a key navigator strategies manager.\n     *\n     * @param {String} name - the name of the strategy to build\n     * @param {testRunner} testRunner - the test runner instance to control\n     * @param {keyNavigationStrategyConfig} config - the config to apply\n     * @returns {keyNavigationStrategy}\n     */\n\n    function strategyFactory(name, testRunner, config) {\n      var strategy = strategyFactory.getProvider(name);\n      /**\n       * @type {Object} keyNavigationStrategy\n       */\n\n      return {\n        /**\n         * Setup the keyNavigator strategy\n         * @returns {keyNavigationStrategy}\n         */\n        init: function init() {\n          strategy.init.call(this);\n          return this;\n        },\n\n        /**\n         * Gets the name of the applied strategy\n         * @returns {String}\n         */\n        getName: function getName() {\n          return name;\n        },\n\n        /**\n         * Gets the config of the strategy\n         * @returns {keyNavigationStrategyConfig}\n         */\n        getConfig: function getConfig() {\n          return config;\n        },\n\n        /**\n         * Gets the test runner\n         * @returns {testRunner}\n         */\n        getTestRunner: function getTestRunner() {\n          return testRunner;\n        },\n\n        /**\n         * Gets the list of applied navigators\n         * @returns {keyNavigator[]}\n         */\n        getNavigators: function getNavigators() {\n          if ('function' === typeof strategy.getNavigators) {\n            return strategy.getNavigators.call(this);\n          }\n\n          return [];\n        },\n\n        /**\n         * Tears down the keyNavigator strategy\n         * @returns {keyNavigationStrategy}\n         */\n        destroy: function destroy() {\n          if ('function' === typeof strategy.destroy) {\n            strategy.destroy.call(this);\n          }\n\n          return this;\n        }\n      };\n    } // bootstrap the manager and register the strategies\n\n    providerRegistry(strategyFactory);\n    Object.values(strategies).forEach(function (strategy) {\n      return strategyFactory.registerProvider(strategy.name, strategy);\n    });\n\n    return strategyFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers',['exports', 'jquery', 'lodash', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategiesManager'], function (exports, $, _, strategyFactory) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    strategyFactory = strategyFactory && Object.prototype.hasOwnProperty.call(strategyFactory, 'default') ? strategyFactory['default'] : strategyFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2020 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * When either an element or its parents have this class - navigation from it would be disabled.\n     *\n     * @type {String}\n     */\n\n    var ignoredClass = 'no-key-navigation';\n    /**\n     * Checks whether element is navigable from\n     *\n     * @param {HTMLElement|keyNavigator} from\n     * @returns {boolean}\n     */\n\n    function allowedToNavigateFrom(from) {\n      var element = from;\n\n      if (element && 'function' === typeof element.getCursor) {\n        var _element$getCursor = element.getCursor(),\n            navigable = _element$getCursor.navigable;\n\n        element = navigable;\n      }\n\n      if (element && 'function' === typeof element.getElement) {\n        element = element.getElement();\n      }\n\n      var $element = $(element);\n\n      if ($element.hasClass(ignoredClass) || $element.parents(\".\".concat(ignoredClass)).length > 0) {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Applies an items' navigation scheme on a keyNavigator.\n     * @param {keyNavigator} navigator\n     * @param {keyNavigationStrategyConfig} config - the config to apply\n     * @returns {keyNavigator}\n     */\n\n    function setupItemsNavigator(navigator, config) {\n      return navigator.on(config.keyNextItem, function navigateToNextItem(elem) {\n        if (allowedToNavigateFrom(elem)) {\n          this.next();\n        }\n      }).on(config.keyPrevItem, function navigateToPrevItem(elem) {\n        if (allowedToNavigateFrom(elem)) {\n          this.previous();\n        }\n      });\n    }\n    /**\n     * Applies an items' navigation scheme on a keyNavigator.\n     * @param {keyNavigator} navigator\n     * @returns {keyNavigator}\n     */\n\n    function setupClickableNavigator(navigator) {\n      return navigator.on('activate', function activateItem(cursor) {\n        var $elt = cursor.navigable.getElement(); // jQuery <= 1.9.0\n        // the checkbox values are set after the click event if triggered with jQuery\n\n        if ($elt.is(':checkbox')) {\n          $elt.each(function () {\n            this.click();\n          });\n        } else {\n          $elt.click().mousedown();\n        }\n      });\n    }\n    /**\n     * Build the strategies related to a key navigation mode\n     * @param {keyNavigationMode} navigationMode\n     * @param {testRunner} testRunner\n     * @returns {keyNavigationStrategy[]}\n     */\n\n    function getStrategies(navigationMode, testRunner) {\n      return navigationMode.strategies.map(function (area) {\n        return strategyFactory(area, testRunner, navigationMode.config).init();\n      });\n    }\n    /**\n     * Gets the key navigators from the provided strategies\n     * @param {keyNavigationStrategy[]} strategies\n     * @returns {keyNavigator[]}\n     */\n\n    function getNavigators(strategies) {\n      return _.flatten(strategies.map(function (strategy) {\n        return strategy.getNavigators();\n      }));\n    }\n\n    exports.allowedToNavigateFrom = allowedToNavigateFrom;\n    exports.getNavigators = getNavigators;\n    exports.getStrategies = getStrategies;\n    exports.setupClickableNavigator = setupClickableNavigator;\n    exports.setupItemsNavigator = setupItemsNavigator;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/modes/defaultMode',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Default key navigation mode\n     */\n    var defaultMode = {\n      name: 'default',\n\n      /**\n       * Builds the key navigation config for the \"default\" mode\n       * @param {keyNavigationStrategyConfig} config - additional config to set\n       * @returns {keyNavigationMode}\n       */\n      init: function init() {\n        var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return {\n          strategies: ['rubrics', 'stimulus', 'item', 'toolbar', 'header', 'top-toolbar', 'navigator', 'page'],\n          config: Object.assign({\n            autoFocus: true,\n            wcagBehavior: false,\n            keepState: true,\n            propagateTab: false,\n            flatNavigation: false,\n            keyNextGroup: 'tab',\n            keyPrevGroup: 'shift+tab',\n            keyNextItem: 'right down',\n            keyPrevItem: 'left up',\n            keyNextTab: 'right',\n            keyPrevTab: 'left',\n            keyNextContent: 'down',\n            keyPrevContent: 'up'\n          }, config)\n        };\n      }\n    };\n\n    return defaultMode;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/modes/linearMode',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Linear key navigation mode\n     */\n    var linearMode = {\n      name: 'linear',\n\n      /**\n       * Builds the key navigation config for the \"linear\" mode\n       * @param {keyNavigationStrategyConfig} config - additional config to set\n       * @returns {keyNavigationMode}\n       */\n      init: function init() {\n        var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return {\n          strategies: ['rubrics', 'stimulus', 'linearItem', 'toolbar', 'header', 'top-toolbar', 'navigator', 'page'],\n          config: Object.assign({\n            autoFocus: true,\n            wcagBehavior: false,\n            keepState: true,\n            propagateTab: false,\n            flatNavigation: false,\n            keyNextGroup: 'tab',\n            keyPrevGroup: 'shift+tab',\n            keyNextItem: 'right down',\n            keyPrevItem: 'left up',\n            keyNextTab: 'right',\n            keyPrevTab: 'left',\n            keyNextContent: 'down',\n            keyPrevContent: 'up'\n          }, config)\n        };\n      }\n    };\n\n    return linearMode;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/modes/nativeMode',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Native key navigation mode\n     */\n    var nativeMode = {\n      name: 'native',\n\n      /**\n       * Builds the key navigation config for the \"native\" mode\n       * @param {keyNavigationStrategyConfig} config - additional config to set\n       * @returns {keyNavigationMode}\n       */\n      init: function init() {\n        var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return {\n          // todo: add access to the page and the rubric blocks\n          strategies: ['jump-links', 'header', 'top-toolbar', 'navigator', 'page', 'rubrics', 'stimulus', 'item', 'toolbar'],\n          config: Object.assign({\n            autoFocus: false,\n            wcagBehavior: false,\n            keepState: false,\n            propagateTab: true,\n            flatNavigation: true,\n            keyNextGroup: 'tab',\n            keyPrevGroup: 'shift+tab',\n            keyNextItem: 'right down',\n            keyPrevItem: 'left up',\n            keyNextTab: '',\n            keyPrevTab: '',\n            keyNextContent: '',\n            keyPrevContent: ''\n          }, config)\n        };\n      }\n    };\n\n    return nativeMode;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/modes/index',['exports', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/modes/defaultMode', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/modes/linearMode', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/modes/nativeMode'], function (exports, defaultMode, linearMode, nativeMode) { 'use strict';\n\n\tdefaultMode = defaultMode && Object.prototype.hasOwnProperty.call(defaultMode, 'default') ? defaultMode['default'] : defaultMode;\n\tlinearMode = linearMode && Object.prototype.hasOwnProperty.call(linearMode, 'default') ? linearMode['default'] : linearMode;\n\tnativeMode = nativeMode && Object.prototype.hasOwnProperty.call(nativeMode, 'default') ? nativeMode['default'] : nativeMode;\n\n\n\n\texports.defaultModeProvider = defaultMode;\n\texports.linearModeProvider = linearMode;\n\texports.nativeModeProvider = nativeMode;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/modesManager',['core/providerRegistry', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/modes/index'], function (providerRegistry, modes) { 'use strict';\n\n    providerRegistry = providerRegistry && Object.prototype.hasOwnProperty.call(providerRegistry, 'default') ? providerRegistry['default'] : providerRegistry;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n    /**\n     * Defines the mode config\n     * @typedef {Object} keyNavigationMode\n     * @property {String[]} strategies\n     * @property {keyNavigationStrategyConfig} config\n     */\n\n    /**\n     * Builds a key navigator modes manager.\n     *\n     * @param {String} mode - the name of the mode to get\n     * @param {keyNavigationStrategyConfig} config - additional config to set\n     * @returns {keyNavigationMode}\n     */\n\n    function modeFactory(mode) {\n      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var instance = modeFactory.getProvider(mode);\n      return instance.init(config);\n    } // bootstrap the manager and register the strategies\n\n    providerRegistry(modeFactory);\n    Object.values(modes).forEach(function (mode) {\n      return modeFactory.registerProvider(mode.name, mode);\n    });\n\n    return modeFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/keyNavigation',['ui/keyNavigation/navigator', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/modesManager', 'util/shortcut'], function (keyNavigator, helpers, modeFactory, shortcut) { 'use strict';\n\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    modeFactory = modeFactory && Object.prototype.hasOwnProperty.call(modeFactory, 'default') ? modeFactory['default'] : modeFactory;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2020 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * The event namespace used to register removable listeners\n     * @type {String}\n     */\n\n    var eventNS = '.keyNavigation';\n    /**\n     * Builds a key navigator that can apply onto a test runner\n     * @param {testRunner} testRunner - the test runner instance to control\n     * @param {Object} config - the config to apply\n     * @param {String} config.contentNavigatorType - the keyboard navigation mode\n     * @returns {testRunnerKeyNavigator}\n     */\n\n    function keyNavigationFactory(testRunner) {\n      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var contentNavigatorType = config.contentNavigatorType;\n      var groupNavigator = null;\n      var strategies = [];\n      /**\n       * @typedef {Object} testRunnerKeyNavigator\n       */\n\n      return {\n        /**\n         * Setup the keyNavigator\n         * @returns {testRunnerKeyNavigator}\n         */\n        init: function init() {\n          var navigationMode = modeFactory(contentNavigatorType, config);\n          var navigationConfig = navigationMode.config;\n          strategies = helpers.getStrategies(navigationMode, testRunner);\n          var navigators = helpers.getNavigators(strategies); //blur current focused element, to reinitialize keyboard navigation\n\n          if (document.activeElement) {\n            document.activeElement.blur();\n          }\n\n          groupNavigator = keyNavigator({\n            id: 'test-runner',\n            loop: true,\n            elements: navigators,\n            propagateTab: navigationConfig.propagateTab\n          });\n          helpers.setupItemsNavigator(groupNavigator, {\n            keyNextItem: navigationConfig.keyNextGroup,\n            keyPrevItem: navigationConfig.keyPrevGroup\n          });\n          shortcut.remove(eventNS).add(\"tab\".concat(eventNS, \" shift+tab\").concat(eventNS), function (e) {\n            if (!helpers.allowedToNavigateFrom(e.target)) {\n              return false;\n            }\n\n            if (!groupNavigator.isFocused()) {\n              groupNavigator.focus();\n            }\n          });\n          return this;\n        },\n\n        /**\n         * Gets the attached testRunner\n         * @returns {testRunner}\n         */\n        getTestRunner: function getTestRunner() {\n          return testRunner;\n        },\n\n        /**\n         * Switches the navigation mode\n         * @param {String} newMode\n         * @returns {testRunnerKeyNavigator}\n         */\n        setMode: function setMode(newMode) {\n          contentNavigatorType = newMode;\n          return this;\n        },\n\n        /**\n         * Gets the active navigation mode\n         * @returns {String}\n         */\n        getMode: function getMode() {\n          return contentNavigatorType;\n        },\n\n        /**\n         * Returns keyNavigation active state\n         * @returns {Boolean}\n         */\n        isActive: function isActive() {\n          return groupNavigator !== null;\n        },\n\n        /**\n         * Tears down the keyNavigator\n         * @returns {testRunnerKeyNavigator}\n         */\n        destroy: function destroy() {\n          shortcut.remove(eventNS);\n          strategies.forEach(function (strategy) {\n            return strategy.destroy();\n          });\n\n          if (groupNavigator) {\n            groupNavigator.destroy();\n          }\n\n          groupNavigator = null;\n          strategies = [];\n          return this;\n        }\n      };\n    }\n\n    return keyNavigationFactory;\n\n});\n\n","\ndefine('css!taoQtiTest/runner/plugins/content/accessibility/css/key-navigation',[],function(){});\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/plugin',['lodash', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/keyNavigation', 'taoTests/runner/plugin', 'css!taoQtiTest/runner/plugins/content/accessibility/css/key-navigation.css'], function (_, keyNavigatorFactory, pluginFactory, keyNavigation_css) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    keyNavigatorFactory = keyNavigatorFactory && Object.prototype.hasOwnProperty.call(keyNavigatorFactory, 'default') ? keyNavigatorFactory['default'] : keyNavigatorFactory;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2020 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * If we have now config from backend side - we set this default dataset\n     *\n     * @typedef {object}\n     * @properties {string} contentNavigatorType - ('default' | 'linear') - type of content navigation\n     */\n\n    var defaultPluginConfig = {\n      contentNavigatorType: 'default'\n    };\n    /**\n     * Returns the configured plugin\n     */\n\n    var plugin = pluginFactory({\n      name: 'keyNavigation',\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var testRunner = this.getTestRunner();\n\n        var pluginConfig = _.defaults(this.getConfig(), defaultPluginConfig);\n\n        var keyNavigator = keyNavigatorFactory(testRunner, pluginConfig);\n        /**\n         *  Update plugin state based on changes\n         */\n\n        testRunner.after('renderitem', function () {\n          // make sure that keyNavigator is destroyed\n          // to preevent multiple instances to be active at the same time\n          if (keyNavigator.isActive()) {\n            keyNavigator.destroy();\n          }\n\n          keyNavigator.init();\n        }).on('unloaditem', function () {\n          keyNavigator.destroy();\n        })\n        /**\n         * @param {string} type - type of content tab navigation,\n         * can be: 'default', 'linear', 'native'\n         */\n        .on('setcontenttabtype', function (type) {\n          keyNavigator.setMode(type);\n          pluginConfig.contentNavigatorType = type;\n        });\n      }\n    });\n\n    return plugin;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/mainLandmark/header',['jquery', 'i18n', 'taoTests/runner/plugin', 'handlebars'], function ($$1, __, pluginFactory, Handlebars) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n      return \"<span data-control=\\\"qti-test-item-title\\\"></span>\\n<span data-control=\\\"qti-test-item-state\\\"></span>\\n\";\n      });\n    function headerTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n     */\n\n    function getState(item) {\n      var state = __('Unseen');\n\n      if (item.flagged) {\n        state = __('Flagged');\n      } else if (item.answered) {\n        state = __('Answered');\n      } else if (item.viewed) {\n        state = __('Viewed');\n      }\n\n      return state;\n    }\n\n    var header = pluginFactory({\n      name: 'mainLandmark',\n      init: function init() {\n        var _this = this;\n\n        var testRunner = this.getTestRunner();\n\n        var updateTitle = function updateTitle(item) {\n          _this.$title.text(\"\".concat(item.label)).show();\n        };\n\n        var updateState = function updateState(item) {\n          _this.$state.text(\"\".concat(getState(item))).show();\n        };\n\n        testRunner.after('renderitem', function () {\n          var item = testRunner.getCurrentItem();\n          updateTitle(item);\n          updateState(item);\n        }).on('tool-flagitem', function () {\n          var item = testRunner.getCurrentItem();\n          item = Object.assign({}, item, {\n            flagged: !item.flagged\n          });\n          updateState(item);\n        });\n      },\n      render: function render() {\n        var $container = this.getAreaBroker().getArea('mainLandmark');\n        this.$element = $$1(headerTpl());\n        $container.append(this.$element);\n        this.$title = $container.find(\"[data-control=\\\"qti-test-item-title\\\"]\");\n        this.$state = $container.find(\"[data-control=\\\"qti-test-item-state\\\"]\");\n      }\n    });\n\n    return header;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/dialog/dialog',['jquery', 'lodash', 'taoTests/runner/plugin', 'ui/dialog/alert', 'ui/dialog/confirm', 'util/shortcut/registry', 'util/shortcut', 'util/namespace'], function ($, _, pluginFactory, dialogAlert, dialogConfirm, shortcutRegistry, globalShortcut, namespaceHelper) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    dialogAlert = dialogAlert && Object.prototype.hasOwnProperty.call(dialogAlert, 'default') ? dialogAlert['default'] : dialogAlert;\n    dialogConfirm = dialogConfirm && Object.prototype.hasOwnProperty.call(dialogConfirm, 'default') ? dialogConfirm['default'] : dialogConfirm;\n    shortcutRegistry = shortcutRegistry && Object.prototype.hasOwnProperty.call(shortcutRegistry, 'default') ? shortcutRegistry['default'] : shortcutRegistry;\n    globalShortcut = globalShortcut && Object.prototype.hasOwnProperty.call(globalShortcut, 'default') ? globalShortcut['default'] : globalShortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n\n    var pluginName = 'dialog';\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n\n    var actionPrefix = \"tool-\".concat(pluginName, \"-\");\n    /**\n     * Some default options for the plugin\n     * @type {Object}\n     */\n\n    var defaultOptions = {\n      alert: {\n        focus: 'ok'\n      },\n      confirm: {\n        focus: 'ok'\n      }\n    };\n    /**\n     * Returns the configured plugin\n     */\n\n    var dialog = pluginFactory({\n      name: pluginName,\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var testRunner = this.getTestRunner();\n        var testOptions = testRunner.getOptions();\n        var pluginConfig = Object.assign({}, defaultOptions, this.getConfig());\n        var pluginShortcuts = (testOptions.shortcuts || {})[pluginName] || {};\n        var alerts = [];\n        var confirms = [];\n        var opened = [];\n        var dialogShortcut = shortcutRegistry($('body'), {\n          propagate: false,\n          prevent: true\n        });\n        /**\n         * Closes a dialog with accept\n         * @param {dialog} dialog - The instance of the dialog\n         */\n\n        function closeAccept(dialog) {\n          // TODO: improve the dialog implementation in order to provide a better API\n          dialog.trigger('okbtn.modal').hide();\n        }\n        /**\n         * Closes a dialog with rejection\n         * @param {dialog} dialog - The instance of the dialog\n         */\n\n\n        function closeReject(dialog) {\n          dialog.hide();\n        }\n        /**\n         * Closes the last opened dialog\n         * @param {Boolean} accept Whether the dialog should be accepted or not\n         * @param {String} [shortcut] The shortcut that caused the action\n         */\n\n\n        function closeLast(accept, shortcut) {\n          var handle = opened.length && opened[opened.length - 1];\n\n          if (handle) {\n            handle.shortcut = shortcut;\n\n            if (accept) {\n              closeAccept(handle.dialog);\n            } else {\n              closeReject(handle.dialog);\n            }\n          }\n        }\n        /**\n         * Add dialog on top of the provided stack\n         * @param {String} namespace - The event namespace that scope the dialog\n         * @param {Array} stack - The dialogs stack on which push the new instance\n         * @param {Function} dialog - The constructor of the dialog\n         * @param {String} message - The message to display\n         * @param {Function} accept - The callback for accept\n         * @param {Function} reject - The callback for reject\n         * @param {Object} options - Dialog options\n         */\n\n\n        function addHandle(namespace, stack, dialog, message, accept, reject, options) {\n          var handle = {\n            context: namespace,\n            dialog: dialog(message, doAccept, doReject, options)\n          };\n\n          function doAccept(e, reason) {\n            if (_.isFunction(accept)) {\n              accept(handle.shortcut || reason);\n            }\n          }\n\n          function doReject(e, reason) {\n            if (_.isFunction(reject)) {\n              reject(handle.shortcut || reason);\n            }\n          } // prevents all registered shortcuts to be triggered\n          // and brings back the dialog shortcuts\n\n\n          globalShortcut.disable();\n          dialogShortcut.enable();\n          stack.push(handle);\n          opened.push(handle);\n          handle.dialog.focus(options.focus);\n          handle.dialog.on('closed.modal', function () {\n            removeHandle(stack, handle.dialog);\n            removeHandle(opened, handle.dialog); // if all dialogs have been closed allows all registered shortcuts to be triggered\n            // also disables the dialog shortcuts\n\n            if (!opened.length) {\n              globalShortcut.enable();\n              dialogShortcut.disable();\n            }\n          });\n        }\n        /**\n         * Remove a dialog from the provided stack\n         * @param {Array} stack - The dialogs stack from which remove the dialog instance\n         * @param {dialog} dialog - The instance of the dialog\n         */\n\n\n        function removeHandle(stack, dialog) {\n          if (dialog) {\n            _.remove(stack, function (handle) {\n              if (handle && dialog === handle.dialog) {\n                return true;\n              }\n            });\n          }\n        }\n        /**\n         * Closes all dialogs within the provided stack\n         * @param {String} namespace - The event namespace that scope the dialogs to close\n         * @param {Boolean} accept - Whether (`true`) or not (`false`) to close the dialogs with accept\n         * @param {Array} stack - The dialogs stack in which close the dialogs\n         */\n\n\n        function closeDialogs(namespace, accept, stack) {\n          if (stack) {\n            _.forEach(stack, function (handle) {\n              if (handle && (namespace === '@' || namespace === handle.context)) {\n                if (accept) {\n                  closeAccept(handle.dialog);\n                } else {\n                  closeReject(handle.dialog);\n                }\n              }\n            });\n          } else {\n            closeDialogs(namespace, accept, alerts);\n            closeDialogs(namespace, accept, confirms);\n          }\n        } // starts with shortcuts disabled, prevents the TAB key to be used to move outside the dialog box\n\n\n        dialogShortcut.disable().set('Tab Shift+Tab'); // handle the plugin's shortcuts\n\n        if (testOptions.allowShortcuts) {\n          _.forEach(pluginShortcuts, function (command, key) {\n            dialogShortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), function (e, shortcut) {\n              // just fire the action using the event loop\n              testRunner.trigger(actionPrefix + key, shortcut);\n            });\n          });\n        } //change plugin state\n\n\n        testRunner.before('alert.*', function (e, msg, accept, options) {\n          addHandle(e.namespace, alerts, dialogAlert, msg, accept, accept, _.merge({}, pluginConfig.alert, options));\n        }).before('confirm.*', function (e, msg, accept, reject, options) {\n          addHandle(e.namespace, confirms, dialogConfirm, msg, accept, reject, _.merge({}, pluginConfig.confirm, options));\n        }).before('closedialog.*', function (e, accept) {\n          closeDialogs(e.namespace, accept);\n        }).on(\"\".concat(actionPrefix, \"accept\"), function (shortcut) {\n          closeLast(true, shortcut);\n        }).on(\"\".concat(actionPrefix, \"reject\"), function (shortcut) {\n          closeLast(false, shortcut);\n        }).on('destroy', function () {\n          closeDialogs('.@');\n          dialogShortcut.clear();\n          dialogShortcut = null;\n        });\n      }\n    });\n\n    return dialog;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/dialog/exitMessages',['lodash', 'taoTests/runner/plugin'], function (_, pluginFactory) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Creates the testState plugin.\n     * Displays exit message, then leaves the runner once the user has acknowledged\n     */\n\n    var exitMessages = pluginFactory({\n      name: 'exitMessages',\n\n      /**\n       * Initializes the plugin (called during runner's init)\n       */\n      init: function init() {// this function is mandatory\n      },\n\n      /**\n       * Installs the plugin (called when the runner bind the plugin)\n       */\n      install: function install() {\n        var testRunner = this.getTestRunner(); // intercepts the `leave` event,\n        // then if a message needs to be displayed displays it and waits the user acknowledges it\n\n        testRunner.before('leave', function leave(e, data) {\n          var dataIsObject = _.isObject(data);\n\n          if (dataIsObject && data.skipExitMessage) {\n            return;\n          }\n\n          if (dataIsObject && data.message) {\n            return new Promise(function (resolve) {\n              var context = testRunner.getTestContext(); // the leave can occurs when the runner is in inconsistent state (i.e. error)\n              // prevent side error with item disabling\n\n              if (context && context.itemIdentifier) {\n                testRunner.disableItem(context.itemIdentifier);\n              } // wait for the message acknowledge before leaving the runner\n\n\n              testRunner.trigger('disablefeedbackalerts').trigger('alert.leave', data.message, function () {\n                testRunner.trigger('enablefeedbackalerts');\n                resolve();\n              });\n            });\n          }\n        });\n      }\n    });\n\n    return exitMessages;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/dialog/itemAlertMessage',['jquery', 'ui/hider', 'taoTests/runner/plugin'], function ($, hider, pluginFactory) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019  (original work) Open Assessment Technologies SA;\n     *\n     * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n     */\n    /**\n     * Returns the configured plugin\n     */\n\n    var itemAlertMessage = pluginFactory({\n      name: 'itemAlertMessage',\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        this.$element = $(this.getContent().dom);\n        this.$element // for GUI actions\n        .on('closed.modal', function () {\n          $(this).modal('destroy');\n        }).on('destroyed.modal', function () {\n          self.$element = null;\n          self.trigger('resume', self);\n        });\n      },\n\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        var testRunner = this.getTestRunner();\n        var itemRunner = testRunner.itemRunner;\n        var $modalsContainer = this.getContent().$container;\n\n        if (!$modalsContainer) {\n          $modalsContainer = $('#modalFeedbacks', itemRunner._item.container);\n        }\n\n        $modalsContainer.append(this.$element);\n        this.$element.modal({\n          startClosed: false,\n          top: 200\n        });\n      },\n\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        if (this.$element && this.$element.length) {\n          this.$element.modal('close');\n        }\n      }\n    });\n\n    return itemAlertMessage;\n\n});\n\n","define('taoQtiTest/runner/helpers/navigation',['lodash', 'taoQtiTest/runner/helpers/map'], function (_, mapHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * @typedef {Object} navigationHelper\n     */\n\n    var navigationHelper = {\n      /**\n       * Check whether the test taker is leaving a section\n       *\n       * @param {Object} testContext - the actual test context\n       * @param {String} testContext.itemIdentifier - the id of the current item\n       * @param {String} testContext.sectionId - the id of the current section\n       * @param {Object} testMap - the actual test map\n       * @param {String} direction - the move direction (next, previous or jump)\n       * @param {String} scope - the move scope (item, section, testPart)\n       * @param {Number} [position] - the position in case of jump\n       * @returns {Boolean} true if the action leads to a section leave\n       * @throws {TypeError} if the context or the map are incorrect\n       */\n      isLeavingSection: function isLeavingSection(testContext, testMap, direction, scope, position) {\n        var section;\n        var sectionStats;\n        var nbItems;\n        var item;\n\n        if (_.isPlainObject(testContext) && _.isPlainObject(testMap) && !_.isEmpty(testContext.sectionId) && !_.isEmpty(testContext.itemIdentifier)) {\n          section = mapHelper.getSection(testMap, testContext.sectionId);\n          sectionStats = mapHelper.getSectionStats(testMap, testContext.sectionId);\n          nbItems = sectionStats && sectionStats.total;\n          item = mapHelper.getItem(testMap, testContext.itemIdentifier);\n          return scope === 'section' || scope === 'testPart' || direction === 'next' && item.positionInSection + 1 === nbItems || direction === 'previous' && item.positionInSection === 0 || direction === 'jump' && position > 0 && (position < section.position || position >= section.position + nbItems);\n        }\n\n        throw new TypeError('Invalid test context and test map');\n      },\n\n      /**\n       * Check whether the test taker is leaving a test part\n       *\n       * @param {Object} testContext - the actual test context\n       * @param {String} testContext.itemIdentifier - the id of the current item\n       * @param {String} testContext.sectionId - the id of the current section\n       * @param {String} testContext.testPartId - the id of the current testPart\n       * @param {Object} testMap - the actual test map\n       * @param {String} direction - the move direction (next, previous or jump)\n       * @param {String} scope - the move scope (item, section, testPart)\n       * @param {Number} [position] - the position in case of jump\n       * @returns {Boolean} true if the action leads to a section leave\n       * @throws {TypeError} if the context or the map are incorrect\n       */\n      isLeavingTestPart: function isLeavingTestPart(testContext, testMap, direction, scope, position) {\n        var testPart;\n        var testPartStats;\n        var nbItems;\n        var item;\n        var section;\n        var sectionStats;\n\n        if (_.isPlainObject(testContext) && _.isPlainObject(testMap) && !_.isEmpty(testContext.testPartId) && !_.isEmpty(testContext.sectionId) && !_.isEmpty(testContext.itemIdentifier)) {\n          testPart = mapHelper.getPart(testMap, testContext.testPartId);\n          testPartStats = mapHelper.getPartStats(testMap, testContext.testPartId);\n          nbItems = testPartStats && testPartStats.total;\n          item = mapHelper.getItem(testMap, testContext.itemIdentifier);\n\n          if (scope === 'section') {\n            section = mapHelper.getSection(testMap, testContext.sectionId);\n            sectionStats = mapHelper.getSectionStats(testMap, testContext.sectionId);\n          }\n\n          return scope === 'testPart' || direction === 'next' && scope === 'item' && item.positionInPart + 1 === nbItems || direction === 'next' && scope === 'section' && section.position + sectionStats.total >= nbItems || direction === 'previous' && scope === 'item' && item.positionInPart === 0 || direction === 'previous' && scope === 'section' && section.position === testPart.position || direction === 'jump' && position > 0 && (position < testPart.position || position >= testPart.position + nbItems);\n        }\n\n        throw new TypeError('Invalid test context and test map');\n      },\n\n      /**\n       * Check if the given  item is the last of the test\n       * @param {Object} testMap - the test map\n       * @param {String} itemIdentifier - the identifier of the item\n       * @returns {Boolean} true if the item is the last one\n       */\n      isLast: function isLast(testMap, itemIdentifier) {\n        return this.isLastOf(testMap, itemIdentifier, 'test');\n      },\n\n      /**\n       * Check if the given  item is the first of a test\n       * @param {Object} testMap - the test map\n       * @param {String} itemIdentifier - the identifier of the item\n       * @returns {Boolean} true if the item is the first one\n       */\n      isFirst: function isFirst(testMap, itemIdentifier) {\n        return this.isFirstOf(testMap, itemIdentifier, 'test');\n      },\n\n      /**\n       * Check if the given  item is the last of a the given scope\n       * @param {Object} testMap - the test map\n       * @param {String} itemIdentifier - the identifier of the item\n       * @param {String} [scope = 'test'] - the target scope\n       * @returns {Boolean} true if the item is the last one\n       */\n      isLastOf: function isLastOf(testMap, itemIdentifier, scope) {\n        var item;\n        var stats;\n\n        if (!_.isPlainObject(testMap)) {\n          throw new TypeError('Invalid test map');\n        }\n\n        if (_.isEmpty(itemIdentifier)) {\n          throw new TypeError('Invalid item identifier');\n        }\n\n        scope = scope || 'test';\n        item = mapHelper.getItem(testMap, itemIdentifier);\n        stats = mapHelper.getScopeStats(testMap, item.position, scope);\n\n        if (stats && _.isNumber(stats.total)) {\n          if (scope === 'test') {\n            return item.position + 1 === stats.total;\n          }\n\n          if (scope === 'section' || scope === 'assessmentSection' || scope === 'testSection') {\n            return item.positionInSection + 1 === stats.total;\n          }\n\n          if (scope === 'part' || scope === 'testPart') {\n            return item.positionInPart + 1 === stats.total;\n          }\n        }\n\n        return false;\n      },\n\n      /**\n       * Check if the given  item is the first of a the given scope\n       * @param {Object} testMap - the test map\n       * @param {String} itemIdentifier - the identifier of the item\n       * @param {String} [scope = 'test'] - the target scope\n       * @returns {Boolean} true if the item is the first one\n       */\n      isFirstOf: function isFirstOf(testMap, itemIdentifier, scope) {\n        var item;\n\n        if (!_.isPlainObject(testMap)) {\n          throw new TypeError('Invalid test map');\n        }\n\n        if (_.isEmpty(itemIdentifier)) {\n          throw new TypeError('Invalid item identifier');\n        }\n\n        scope = scope || 'test';\n        item = mapHelper.getItem(testMap, itemIdentifier);\n\n        if (scope === 'test') {\n          return item.position === 0;\n        }\n\n        if (scope === 'section' || scope === 'assessmentSection' || scope === 'testSection') {\n          return item.positionInSection === 0;\n        }\n\n        if (scope === 'part' || scope === 'testPart') {\n          return item.positionInPart === 0;\n        }\n\n        return false;\n      },\n\n      /**\n       * Gets the map descriptors of the sibling items\n       * @param {Object} testMap\n       * @param {Number|String} itemPosition - (could be also the item id)\n       * @param {String} [direction='both'] - previous/next/both\n       * @param {Number} [size=3] - will be 2xsize if direction is both\n       * @returns {Object[]} the collections of items\n       */\n      getSiblingItems: function getSiblingItems(testMap, itemPosition, direction, size) {\n        var itemId = mapHelper.getItemIdentifier(testMap, itemPosition);\n        var previous = null;\n        var siblings = [];\n        var directions;\n\n        var itemChain = _.reduce(testMap && testMap.jumps, function (map, jump) {\n          var ref = jump.identifier;\n\n          if (previous) {\n            map[previous].next = ref;\n          }\n\n          map[ref] = {\n            identifier: ref,\n            previous: previous,\n            next: null\n          };\n          previous = ref;\n          return map;\n        }, {});\n\n        size = _.isFinite(size) ? parseInt(size, 10) : 3;\n\n        if (!direction || direction === 'both') {\n          directions = ['previous', 'next'];\n        } else {\n          directions = [direction];\n        }\n\n        _.forEach(directions, function walkDirection(link) {\n          var id = itemId;\n\n          _.times(size, function getNeighbor() {\n            id = itemChain[id] && itemChain[id][link];\n\n            if (id) {\n              siblings.push(mapHelper.getItem(testMap, id));\n            } else {\n              return false;\n            }\n          });\n        });\n\n        return siblings;\n      },\n\n      /**\n       * Gets the map descriptor of the next item\n       * @param {Object} testMap\n       * @param {Number|String} itemPosition - (could be also the item id)\n       * @returns {Object}\n       */\n      getNextItem: function getNextItem(testMap, itemPosition) {\n        var siblings = navigationHelper.getSiblingItems(testMap, itemPosition, 'next', 1);\n\n        if (siblings.length) {\n          return siblings[0];\n        }\n\n        return null;\n      },\n\n      /**\n       * Gets the map descriptor of the previous item\n       * @param {Object} testMap\n       * @param {Number|String} itemPosition - (could be also the item id)\n       * @returns {Object}\n       */\n      getPreviousItem: function getPreviousItem(testMap, itemPosition) {\n        var siblings = navigationHelper.getSiblingItems(testMap, itemPosition, 'previous', 1);\n\n        if (siblings.length) {\n          return siblings[0];\n        }\n\n        return null;\n      },\n\n      /**\n       * Checks if an action will move forward.\n       * @param {String} action - the name of the action that will be performed\n       * @param {Object} [params] - some optional parameters that apply to the action\n       * @returns {Boolean}\n       */\n      isMovingToNextItem: function isMovingToNextItem(action, params) {\n        params = params || {};\n        return action === 'timeout' || action === 'skip' || action === 'move' && params.direction === 'next' && params.scope === 'item';\n      },\n\n      /**\n       * Checks if an action will move backward.\n       * @param {String} action - the name of the action that will be performed\n       * @param {Object} [params] - some optional parameters that apply to the action\n       * @returns {Boolean}\n       */\n      isMovingToPreviousItem: function isMovingToPreviousItem(action, params) {\n        params = params || {};\n        return action === 'move' && params.direction === 'previous' && params.scope === 'item';\n      },\n\n      /**\n       * Checks if an action will jump on another item.\n       * @param {String} action - the name of the action that will be performed\n       * @param {Object} [params] - some optional parameters that apply to the action\n       * @returns {Boolean}\n       */\n      isJumpingToItem: function isJumpingToItem(action, params) {\n        params = params || {};\n        return action === 'move' && params.direction === 'jump' && params.scope === 'item';\n      }\n    };\n\n    return navigationHelper;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/dialog/itemInlineMessage',['jquery', 'i18n', 'ui/hider', 'taoTests/runner/plugin', 'handlebars', 'taoQtiTest/runner/helpers/navigation'], function ($$1, __, hider, pluginFactory, Handlebars, navigationHelper) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    navigationHelper = navigationHelper && Object.prototype.hasOwnProperty.call(navigationHelper, 'default') ? navigationHelper['default'] : navigationHelper;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \" \";\n      if (helper = helpers.className) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.className); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n        aria-\"\n        + escapeExpression(((stack1 = (data == null || data === false ? data : data.key)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"=\\\"\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\"\\n    \";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span class=\\\"icon icon-\";\n      if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"></span>\";\n      return buffer;\n      }\n    function program6(depth0,data) {\n      \n      \n      return \" no-label\";\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span class=\\\"text\\\">\";\n      if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\";\n      return buffer;\n      }\n\n      buffer += \"<li\\n    data-control=\\\"\";\n      if (helper = helpers.control) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.control); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    class=\\\"small btn-info action\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.className), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n    title=\\\"\";\n      if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    role=\\\"button\\\"\\n    \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.aria), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\" onclick=\\\"return false\\\" aria-hidden=\\\"true\\\" >\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.icon), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </a>\\n</li>\\n\";\n      return buffer;\n      });\n    function buttonTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016  (original work) Open Assessment Technologies SA;\n     *\n     * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n     */\n    /**\n     * The display of the next button\n     */\n\n    var buttonData = {\n      next: {\n        control: 'move-forward',\n        title: __('Submit and go to the next item'),\n        icon: 'forward',\n        text: __('OK')\n      },\n      end: {\n        control: 'move-end',\n        title: __('Submit and go to the end of the test'),\n        icon: 'fast-forward',\n        text: __('OK & End test')\n      }\n    };\n    /**\n     * Returns the configured plugin\n     */\n\n    var itemInlineMessage = pluginFactory({\n      name: 'itemInlineMessage',\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        /**\n         * Create the button based on the current context\n         * @returns {*|jQuery|HTMLElement} the button\n         */\n\n        var createOkButton = function createElement() {\n          var testContext = testRunner.getTestContext();\n          var testMap = testRunner.getTestMap();\n          var dataType = navigationHelper.isLast(testMap, testContext.itemIdentifier) ? 'end' : 'next';\n          var $btn = $$1(buttonTpl(buttonData[dataType]));\n          $btn.addClass('modalFeedback-button'); //plugin behavior\n\n          $btn.on('click', function (e) {\n            e.preventDefault();\n            self.disable();\n\n            if ($$1(this).data('control') === 'move-end') {\n              self.trigger('end');\n            }\n\n            $btn.remove();\n            self.$element.remove();\n            self.trigger('resume', self);\n          });\n          return $btn;\n        };\n\n        this.$button = createOkButton();\n        this.$element = $$1(this.getContent().dom);\n      },\n\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        var $navigationContainer = this.getAreaBroker().getNavigationArea();\n        var testRunner = this.getTestRunner();\n        var itemRunner = testRunner.itemRunner;\n        var $inlineContainer = this.getContent().$container;\n\n        if (!$inlineContainer && itemRunner._item.container) {\n          $inlineContainer = $$1('.qti-itemBody', itemRunner._item.container);\n        }\n\n        $inlineContainer.append(this.$element); // hide all navigation buttons, create new instead of\n\n        if (!$$1('.modalFeedback-button', $navigationContainer).length) {\n          $navigationContainer.append(this.$button);\n        }\n      },\n\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.$button.removeProp('disabled').removeClass('disabled');\n      },\n      disable: function disable() {\n        this.$button.prop('disabled', true).addClass('disabled');\n      },\n\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        this.$button.click();\n      }\n    });\n\n    return itemInlineMessage;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/feedback/feedback',['i18n', 'taoTests/runner/plugin', 'ui/feedback'], function (__, pluginFactory, feedback$1) { 'use strict';\n\n  __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n  pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n  feedback$1 = feedback$1 && Object.prototype.hasOwnProperty.call(feedback$1, 'default') ? feedback$1['default'] : feedback$1;\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n  }\n\n  /**\n   * Returns the configured plugin\n   */\n\n  var feedback = pluginFactory({\n    name: 'feedback',\n\n    /**\n     * Initialize the plugin (called during runner's init)\n     */\n    init: function init() {\n      var self = this; //keep a ref of the feedbacks\n\n      var currentFeedback;\n      var testRunner = this.getTestRunner();\n      /**\n       * Close the current feedback\n       */\n\n      var closeCurrent = function closeCurrent() {\n        if (currentFeedback) {\n          currentFeedback.close();\n        }\n      };\n\n      this.setState('enabled', true); //change plugin state\n\n      testRunner.on('error', function (err) {\n        var message = err;\n        var type = 'error';\n\n        if (self.getState('enabled')) {\n          if ('object' === _typeof(err)) {\n            message = err.message;\n            type = err.type;\n          }\n\n          if (!message) {\n            switch (type) {\n              case 'TestState':\n                message = __('The test has been closed/suspended!');\n                break;\n\n              case 'FileNotFound':\n                message = __('File not found!');\n                break;\n\n              default:\n                message = __('An error occurred!');\n            }\n          }\n\n          currentFeedback = feedback$1().error(message);\n        }\n      }).on('danger', function (message) {\n        if (self.getState('enabled')) {\n          currentFeedback = feedback$1().danger(message);\n        }\n      }).on('warning', function (message) {\n        if (self.getState('enabled')) {\n          currentFeedback = feedback$1().warning(message);\n        }\n      }).on('info', function (message) {\n        if (self.getState('enabled')) {\n          currentFeedback = feedback$1().info(message);\n        }\n      }).on('alert.* confirm.* unloaditem', closeCurrent).on('disablefeedbackalerts', function () {\n        closeCurrent();\n        self.setState('enabled', false);\n      }).on('enablefeedbackalerts', function () {\n        self.setState('enabled', true);\n      });\n    }\n  });\n\n  return feedback;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/itemScrolling/itemScrolling',['jquery', 'util/typeCaster', 'taoTests/runner/plugin'], function ($, typeCaster, pluginFactory) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    typeCaster = typeCaster && Object.prototype.hasOwnProperty.call(typeCaster, 'default') ? typeCaster['default'] : typeCaster;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA;\n     */\n    /**\n     * Creates the loading bar plugin.\n     * Displays a loading bar when a blocking task is running\n     */\n\n    var itemScrolling = pluginFactory({\n      name: 'itemScrolling',\n\n      /**\n       * Initializes the plugin (called during runner's init)\n       */\n      init: function init() {\n        var testRunner = this.getTestRunner();\n        var $contentArea = testRunner.getAreaBroker().getContentArea();\n        var gridRowBottomMargin = 12,\n            qtiItemPadding = 30 * 2;\n        testRunner.on('renderitem', function () {\n          adaptItemHeight();\n          $(window).off('resize.adaptItemHeight');\n          $(window).on('resize.adaptItemHeight', adaptItemHeight);\n        });\n\n        function adaptItemHeight() {\n          var $itemContainer = $contentArea.find('[data-scrolling=\"true\"]');\n          var contentHeight = getItemRunnerHeight() - getExtraGridRowHeight() - getSpaceAboveQtiContent() - gridRowBottomMargin - qtiItemPadding;\n          $itemContainer.each(function () {\n            var $item = $(this);\n            var isScrollable = typeCaster.strToBool($item.attr('data-scrolling') || 'false');\n            var selectedHeight = parseFloat($item.attr('data-scrolling-height')) || 100;\n            var containerParent = $item.parent().closest('[data-scrolling=\"true\"]');\n\n            if ($item.length && isScrollable) {\n              $item.data('scrollable', true);\n              $item.css({\n                'overflow-y': 'scroll'\n              });\n\n              if (containerParent.length > 0) {\n                $item.css('max-height', \"\".concat(containerParent.height() * (selectedHeight * 0.01), \"px\"));\n              } else {\n                $item.css('max-height', \"\".concat(contentHeight * (selectedHeight * 0.01), \"px\"));\n              }\n            }\n          });\n        } // depending on the context (item preview, new/old test runner...) available height is computed differently\n\n\n        function getItemRunnerHeight() {\n          var $testRunnerSections = $('.test-runner-sections'); // exists only in the new test runner\n\n          if ($testRunnerSections.length) {\n            return $testRunnerSections.get(0).getBoundingClientRect().height;\n          } // otherwise, we assume that we are in an iframe with all space available (= item preview, old test runner)\n\n\n          return $(window).height();\n        } // extra grid row are there in case of a vertical layout (item on top/bottom of the question)\n\n\n        function getExtraGridRowHeight() {\n          var $gridRows = $('.qti-itemBody > .grid-row'),\n              extraHeight = 0;\n          $gridRows.each(function () {\n            var $gridRow = $(this),\n                $itemContainer = $gridRow.find('[data-scrolling=\"true\"]');\n\n            if (!$itemContainer.length) {\n              extraHeight += $gridRow.outerHeight(true);\n            }\n          });\n          return extraHeight;\n        } // most of the time this will be rubrick's block height in the new test runner\n\n\n        function getSpaceAboveQtiContent() {\n          var $testRunnerSections = $('.test-runner-sections'),\n              $qtiContent = $('#qti-content');\n\n          if ($testRunnerSections.length && $qtiContent.length) {\n            return $qtiContent.get(0).getBoundingClientRect().top - $testRunnerSections.get(0).getBoundingClientRect().top;\n          }\n\n          return 0;\n        }\n      }\n    });\n\n    return itemScrolling;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/loading/loading',['layout/loading-bar', 'taoTests/runner/plugin'], function (loadingBar, pluginFactory) { 'use strict';\n\n    loadingBar = loadingBar && Object.prototype.hasOwnProperty.call(loadingBar, 'default') ? loadingBar['default'] : loadingBar;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Creates the loading bar plugin.\n     * Displays a loading bar when a blocking task is running\n     */\n\n    var loading = pluginFactory({\n      name: 'loading',\n\n      /**\n       * Initializes the plugin (called during runner's init)\n       */\n      init: function init() {\n        var testRunner = this.getTestRunner();\n        testRunner.on('unloaditem', function () {\n          loadingBar.start();\n        }).on('renderitem', function () {\n          loadingBar.stop();\n        });\n      }\n    });\n\n    return loading;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/modalFeedback/modalFeedback',['jquery', 'lodash', 'module', 'taoTests/runner/plugin', 'taoQtiTest/runner/plugins/content/dialog/itemInlineMessage', 'taoQtiTest/runner/plugins/content/dialog/itemAlertMessage', 'ui/autoscroll'], function ($, _, module, pluginFactory, inlineMessage, alertMessage, autoscroll) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    inlineMessage = inlineMessage && Object.prototype.hasOwnProperty.call(inlineMessage, 'default') ? inlineMessage['default'] : inlineMessage;\n    alertMessage = alertMessage && Object.prototype.hasOwnProperty.call(alertMessage, 'default') ? alertMessage['default'] : alertMessage;\n    autoscroll = autoscroll && Object.prototype.hasOwnProperty.call(autoscroll, 'default') ? autoscroll['default'] : autoscroll;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016  (original work) Open Assessment Technologies SA;\n     *\n     * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n     */\n    /**\n     * Modal or inline type of the messages\n     */\n\n    var inlineMode;\n    /**\n     * Form of the feedback\n     * by default dialog (modal) form\n     */\n\n    var messagePlugin;\n    /**\n     * All feedback messages\n     */\n\n    var renderedFeedbacks;\n    /**\n     * modalFeedback was resolved and all components were destroyed\n     */\n\n    var isDestroyed;\n    /**\n     * Method which should be halted after modalFeedbacks confirmation action\n     */\n\n    var nextStep;\n\n    function destroyFeedback(feedback) {\n      var removed = false;\n\n      _.remove(renderedFeedbacks, function (storedFeedback) {\n        var found = storedFeedback === feedback;\n\n        if (found) {\n          removed = true;\n        }\n\n        return found;\n      });\n\n      if (removed) {\n        feedback.destroy();\n\n        if (!renderedFeedbacks.length) {\n          nextStep();\n        }\n      }\n    }\n\n    function defineMode(inline) {\n      inlineMode = inline;\n      messagePlugin = inlineMode ? inlineMessage : alertMessage;\n    }\n    /**\n     * Returns the configured plugin\n     */\n\n\n    var modalFeedback = pluginFactory({\n      name: 'QtiModalFeedback',\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        nextStep = function nextStep() {};\n\n        defineMode(!!module.config().inlineModalFeedback);\n      },\n\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n\n        var createMessages = function createMessages(renderingQueue, inline) {\n          var bInlineMode = inlineMode;\n          isDestroyed = false;\n          renderedFeedbacks = [];\n\n          if (_.isBoolean(inline)) {\n            defineMode(inline);\n          }\n\n          if (renderingQueue.length) {\n            _.forEach(renderingQueue, function (renderingToken) {\n              var feedback = messagePlugin(testRunner, testRunner.getAreaBroker());\n              feedback.init({\n                dom: renderingToken.feedback.render({\n                  inline: inlineMode\n                }),\n                // for alerts will be used #modalMessages container\n                $container: inlineMode ? renderingToken.$container : null\n              });\n              feedback.render();\n              renderedFeedbacks.push(feedback);\n            }); // auto scroll to the first feedback, only for the \"inline\" mode\n\n\n            if (inlineMode && renderedFeedbacks) {\n              autoscroll($('.qti-modalFeedback', testRunner.getAreaBroker().getContentArea()).first(), testRunner.getAreaBroker().getContentArea().parents('.content-wrapper'));\n            }\n          } else {\n            nextStep();\n          } // restore global feedback mode\n\n\n          defineMode(bInlineMode);\n        };\n\n        if (inlineMode) {\n          testRunner.off('plugin-resume.itemInlineMessage').on('plugin-resume.itemInlineMessage', function () {\n            self.destroy();\n          });\n        } else {\n          testRunner.off('plugin-resume.itemAlertMessage').on('plugin-resume.itemAlertMessage', function (feedback) {\n            destroyFeedback(feedback);\n          });\n        }\n\n        testRunner.on('modalFeedbacks', function (renderingQueue, done, inline) {\n          nextStep = done;\n          createMessages(renderingQueue, inline);\n        });\n      },\n\n      /**\n       * Called during the runner's destroy phase\n       * allow to run that function only once\n       */\n      destroy: function destroy() {\n        var tFeedbacks, i;\n\n        if (!isDestroyed) {\n          isDestroyed = true;\n\n          if (!renderedFeedbacks) {\n            nextStep();\n          } else {\n            tFeedbacks = renderedFeedbacks.slice(0);\n\n            for (i in tFeedbacks) {\n              destroyFeedback(tFeedbacks[i]);\n            }\n          }\n        }\n      }\n    });\n\n    return modalFeedback;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/overlay/overlay',['jquery', 'taoTests/runner/plugin'], function ($, pluginFactory) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Returns the configured plugin\n     */\n\n    var overlay = pluginFactory({\n      name: 'overlay',\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        this.$element = $('<div />');\n        this.$element.on('click mousedown mouseup touchstart touchend keyup keydow keypress scroll drop', function (e) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n        });\n\n        var shield = function shield() {\n          self.enable();\n        };\n\n        var unshield = function unshield() {\n          self.disable();\n        }; //change plugin state\n\n\n        testRunner.on('disableitem', shield).on('enableitem unloaditem modalFeedbacks', unshield);\n      },\n\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        var $contentArea = this.getTestRunner().getAreaBroker().getContentArea();\n        $contentArea.after(this.$element);\n      },\n\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        this.$element.remove();\n      },\n\n      /**\n       * Enable the overlay\n       */\n      enable: function enable() {\n        var overlayConfig = this.getConfig();\n        this.$element.addClass('overlay');\n\n        if (overlayConfig.full) {\n          this.$element.addClass('overlay-full');\n        }\n      },\n\n      /**\n       * Disable the overlay\n       */\n      disable: function disable() {\n        this.$element.removeClass('overlay overlay-full');\n      },\n\n      /**\n       * Show the overlay\n       */\n      show: function show() {\n        this.enable();\n      },\n\n      /**\n       * Hide the overlay\n       */\n      hide: function hide() {\n        this.disable();\n      }\n    });\n\n    return overlay;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/responsiveness/collapser',['lodash', 'jquery', 'taoTests/runner/plugin'], function (_, $, pluginFactory) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Event namespace\n     * @type {String}\n     */\n\n    var ns = '.collapser';\n    /**\n     * Name of the CSS class used to collapse the buttons\n     * @type {String}\n     */\n\n    var noLabelCls = 'tool-label-collapsed';\n    /**\n     * Name of the CSS class used to collapse the buttons and allow to expand on mouse over\n     * @type {String}\n     */\n\n    var noLabelHoverCls = 'tool-label-collapsed-hover';\n    /**\n     * Name of the  CSS class used to hide the label of the button independently of responsiveness\n     * @type {string}\n     */\n\n    var labelHiddenCls = 'no-tool-label';\n    /**\n     * Name of the  CSS class for separators\n     * @type {string}\n     */\n\n    var separatorCls = 'separator';\n    /**\n     * Default plugin options\n     * @type {Object}\n     */\n\n    var defaults = {\n      collapseTools: true,\n      // collapse the tools buttons\n      collapseNavigation: false,\n      // collapse the navigation buttons\n      collapseInOrder: false,\n      // collapse any button in the given order\n      hover: false,\n      // expand when the mouse is over a button,\n\n      /**\n       * Allow to set manually which buttons should collapse and in which order.\n       * This can be set by triggering the \"collapser-set-order\" event on the testRunner.\n       * Given as an array of jQuery selectors: first index will be the first to be collapsed, and so on.\n       * If no selector is given for a button, then this one will never collapse.\n       * ex:\n       * var collapseOrder = [\n       *      '[data-control=\"highlight-clear\"],[data-control=\"highlight-trigger\"]',  // those will collapse first...\n       *      '[data-control=\"hide-review\"]',                                         // this one second...\n       *      '[data-control=\"set-item-flag\"]',                                       // third...\n       *      ...                                                                     // ...\n       * ];\n       * @type {String[]}\n       */\n      collapseOrder: []\n    };\n    var $window = $(window);\n    /**\n     * Creates the responsiveness collapser plugin.\n     * Reduce the size of the action bar tools when the available space is below the needed one.\n     */\n\n    var collapser = pluginFactory({\n      name: 'collapser',\n\n      /**\n       * Installs the plugin (called when the runner bind the plugin)\n       */\n      init: function init() {\n        var testRunner = this.getTestRunner();\n        var config = Object.assign({}, defaults, this.getConfig());\n        var collapseCls = config.hover ? noLabelHoverCls : noLabelCls;\n        var areaBroker = testRunner.getAreaBroker();\n        var $actionsBar = areaBroker.getArea('actionsBar'),\n            $toolbox = areaBroker.getToolboxArea(),\n            $navigation = areaBroker.getNavigationArea();\n        var allCollapsibles, availableWidth, previousAvailableWidth;\n        /**\n         * Get a reference of all collapsibles\n         */\n\n        function buildCollapsiblesList() {\n          // use the given order to build the collapsibles list or generate on in natural order\n          if (config.collapseInOrder && config.collapseOrder.length) {\n            allCollapsibles = getCollapsiblesFromConfig();\n          } // get values from DOM, grouped by prefix\n          else if (config.collapseInOrder) {\n            allCollapsibles = getSortedCollapsiblesFromDom();\n          } // get all in one chunk\n          else {\n            allCollapsibles = getUnsortedCollapsiblesFromDom();\n          }\n        }\n        /**\n         * @param {jQuery} $element\n         * @returns {number} Size difference, in pixels, between collapsed and expanded state of $element\n         */\n\n\n        function getExtraWidth($element) {\n          var expandedWidth, collapsedWidth;\n          $element.removeClass(collapseCls);\n          expandedWidth = $element.outerWidth(true);\n          $element.addClass(collapseCls);\n          collapsedWidth = $element.outerWidth(true);\n          $element.removeClass(collapseCls);\n          return expandedWidth - collapsedWidth;\n        }\n        /**\n         * Expand or collapse elements\n         */\n\n\n        function toggleCollapsibles() {\n          availableWidth = getAvailableWidth();\n          availableWidth < previousAvailableWidth ? collapseInOrder() : expandInOrder();\n          previousAvailableWidth = availableWidth;\n        }\n\n        function collapseInOrder() {\n          var collapsiblesCopy = _.clone(allCollapsibles),\n              toCollapse;\n\n          while (collapseNeeded() && collapsiblesCopy.length) {\n            toCollapse = collapsiblesCopy.shift();\n            toCollapse.$elements.addClass(collapseCls);\n          }\n        }\n\n        function collapseNeeded() {\n          return getToolbarWidth() > getAvailableWidth();\n        }\n\n        function expandInOrder() {\n          _.forEachRight(allCollapsibles, function (toExpand) {\n            if (toExpand.$elements.hasClass(collapseCls)) {\n              if (expandPossible(toExpand.extraWidth)) {\n                toExpand.$elements.removeClass(collapseCls);\n              } else {\n                return false;\n              }\n            }\n          });\n        }\n\n        function expandPossible(extraWidth) {\n          return getToolbarWidth() + extraWidth < getAvailableWidth();\n        }\n\n        function getAvailableWidth() {\n          // Scrollbars are commonly between ~12px and ~18px in width. Subtracting 20px from the available width\n          // makes sure that scrollbars are always taken in account. The worst case scenario is that the buttons\n          // start to collapse, although they would still have had 20px available.\n          return $actionsBar.width() - 20;\n        }\n\n        function getToolbarWidth() {\n          return $toolbox.outerWidth(true) + $navigation.outerWidth(true);\n        }\n        /**\n         * Parse DOM for controls that can be collapsed\n         * @returns {*|jQuery|HTMLElement}\n         */\n\n\n        function getControlsFromDom() {\n          var $controls = $(),\n              selector = '>ul>[data-control]';\n\n          if (config.collapseTools) {\n            $controls = $controls.add($toolbox.find(selector).not(\".\".concat(labelHiddenCls)).not(\".\".concat(separatorCls)));\n          }\n\n          if (config.collapseNavigation) {\n            $controls = $controls.add($navigation.find(selector).not(\".\".concat(labelHiddenCls)).not(\".\".concat(separatorCls)));\n          }\n\n          return $controls;\n        }\n        /**\n         * Get allCollapsibles based on configuration\n         *\n         * @returns {Array}\n         */\n\n\n        function getCollapsiblesFromConfig() {\n          return _.compact(config.collapseOrder.map(function (selector) {\n            // some buttons are collapsed by configuration, some other are only separators: we should leave them alone\n            var $elements = $(selector).not(\".\".concat(labelHiddenCls)).not(\".\".concat(separatorCls));\n            var extraWidth = 0;\n\n            if ($elements.length) {\n              $elements.each(function () {\n                extraWidth += getExtraWidth($(this));\n              });\n              return {\n                $elements: $elements,\n                extraWidth: extraWidth\n              };\n            }\n\n            return false;\n          }));\n        }\n        /**\n         * Get allCollapsibles based on DOM\n         * Build the collapse order from the left to the right, related elements are grouped.\n         *\n         * @returns {Array}\n         */\n\n\n        function getSortedCollapsiblesFromDom() {\n          var $controlElements = getControlsFromDom(),\n              _allCollapsibles = [],\n              order = {}; // group items by prefix\n          // eg. zoomIn and zoomOut -> zoom\n\n          $controlElements.each(function () {\n            var ctrl = this.dataset.control,\n                // re makes group `foo` from `foo-bar`, `fooBar` and `foo_bar`\n            // if we do not have a prefix use the control name as key to ensure uniqueness\n            key = ctrl.substring(0, ctrl.search(/[A-Z-_]/)) || ctrl;\n            order[key] = order[key] || $();\n            order[key] = order[key].add($(this));\n          }); // move items to allCollapsibles\n\n          _.forOwn(order, function ($elements) {\n            var extraWidth = 0;\n            $elements.each(function () {\n              extraWidth += getExtraWidth($(this));\n            });\n\n            _allCollapsibles.push({\n              $elements: $elements,\n              extraWidth: extraWidth\n            });\n          });\n\n          return _.compact(_allCollapsibles);\n        }\n        /**\n         * Get allCollapsibles based on DOM, all buttons will be collapsed at once\n         *\n         * @returns {Array}\n         */\n\n\n        function getUnsortedCollapsiblesFromDom() {\n          var $elements = getControlsFromDom(),\n              _allCollapsibles = [],\n              extraWidth = 0;\n          $elements.each(function () {\n            extraWidth += getExtraWidth($(this));\n          });\n\n          _allCollapsibles.push({\n            $elements: $elements,\n            extraWidth: extraWidth\n          });\n\n          return _.compact(_allCollapsibles);\n        }\n\n        $window.on(\"resize\".concat(ns), _.throttle(function () {\n          testRunner.trigger('collapseTools');\n        }, 40));\n        testRunner.after('renderitem loaditem', function () {\n          previousAvailableWidth = Infinity;\n          buildCollapsiblesList();\n          testRunner.trigger('collapseTools');\n        }).on(\"collapseTools\".concat(ns), function () {\n          toggleCollapsibles();\n        });\n      },\n      destroy: function destroy() {\n        $window.off(ns);\n      }\n    });\n\n    return collapser;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/rubricBlock/rubricBlock',['jquery', 'ui/hider', 'taoTests/runner/plugin', 'handlebars'], function ($$1, hider, pluginFactory, Handlebars) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n      return \"<div id=\\\"qti-rubrics\\\"></div>\\n\";\n      });\n    function containerTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Ensure the <a> links opens to blank pages\n     * @param {jQueryElement} $container - lookup scope\n     */\n\n    var blankifyLinks = function blankifyLinks($container) {\n      $$1('a', $container).attr('target', '_blank');\n    };\n    /**\n     * Apply mathjax\n     */\n\n\n    var mathify = function mathify($container) {\n      return new Promise(function (resolve) {\n        if ($$1('math', $container).length > 0) {\n          //load mathjax only if necessary\n          require(['mathJax'], function (MathJax) {\n            if (MathJax) {\n              MathJax.Hub.Queue(['Typeset', MathJax.Hub], $container[0]);\n              MathJax.Hub.Queue(resolve);\n            } else {\n              resolve();\n            }\n          }, resolve);\n        } else {\n          resolve();\n        }\n      });\n    };\n    /**\n     * Returns the configured plugin\n     */\n\n\n    var rubricBlock = pluginFactory({\n      name: 'rubricBlock',\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        this.$element = $$1(containerTpl());\n        this.hide(); //change plugin state\n\n        testRunner.on('ready', function () {\n          self.hide();\n        }).on('loaditem', function () {\n          var context = testRunner.getTestContext();\n\n          if (context.rubrics) {\n            self.$element.html(context.rubrics);\n            blankifyLinks(self.$element);\n            mathify(self.$element).then(function () {\n              // notify that the rubric blocks are loaded\n              testRunner.trigger('rubricblock');\n            });\n          }\n        }).on('renderitem', function () {\n          self.show();\n        }).on('unloaditem', function () {\n          self.hide();\n          self.$element.empty();\n        });\n      },\n\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        //attach the element before the content area\n        var $container = this.getAreaBroker().getContentArea();\n        $container.before(this.$element);\n      },\n\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        this.$element.remove();\n      },\n\n      /**\n       * Enable the container\n       */\n      enable: function enable() {\n        this.$element.removeProp('disabled').removeClass('disabled');\n      },\n\n      /**\n       * Disable the container\n       */\n      disable: function disable() {\n        this.$element.prop('disabled', true).addClass('disabled');\n      },\n\n      /**\n       * Show the container\n       */\n      show: function show() {\n        hider.show(this.$element);\n      },\n\n      /**\n       * Hide the container\n       */\n      hide: function hide() {\n        hider.hide(this.$element);\n      }\n    });\n\n    return rubricBlock;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/connectivity/connectivity',['jquery', 'lodash', 'i18n', 'core/polling', 'ui/waitingDialog/waitingDialog', 'taoTests/runner/plugin', 'handlebars', 'util/namespace'], function ($$1, _, __, pollingFactory, waitingDialog, pluginFactory, Handlebars, namespaceHelper) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pollingFactory = pollingFactory && Object.prototype.hasOwnProperty.call(pollingFactory, 'default') ? pollingFactory['default'] : pollingFactory;\n    waitingDialog = waitingDialog && Object.prototype.hasOwnProperty.call(waitingDialog, 'default') ? waitingDialog['default'] : waitingDialog;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\n    function program1(depth0,data) {\n      \n      \n      return \" with-message\";\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", helper, options;\n      buffer += \"<span class=\\\"message-connect\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Online\", options) : helperMissing.call(depth0, \"__\", \"Online\", options)))\n        + \"</span>\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", helper, options;\n      buffer += \"<span class=\\\"message-disconnected\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Offline\", options) : helperMissing.call(depth0, \"__\", \"Offline\", options)))\n        + \"</span>\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"connectivity-box \";\n      if (helper = helpers.state) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.state); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.message), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.message), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"<span data-control=\\\"connectivity-connected\\\" class=\\\"qti-controls icon-connect\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Connected to server\", options) : helperMissing.call(depth0, \"__\", \"Connected to server\", options)))\n        + \"\\\"></span>\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.message), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"<span data-control=\\\"connectivity-disconnected\\\" class=\\\"qti-controls icon-disconnect\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Disconnected from server\", options) : helperMissing.call(depth0, \"__\", \"Disconnected from server\", options)))\n        + \"\\\"></span>\\n</div>\\n\";\n      return buffer;\n      });\n    function connectivityTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2021 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * The plugin default configuration\n     * @type {Object}\n     * @property {Number} checkInterval - when offline, interval to check if we're back online\n     * @property {Boolean} indicator - do we display the indicator in the test UI\n     * @property {Boolean} message - do we display the message in the test UI\n     */\n\n    var defaultConfig = {\n      checkInterval: 30 * 1000,\n      indicator: true,\n      message: false\n    };\n    /**\n     * Creates the connectivity plugin.\n     * Detects connectivity issues\n     */\n\n    var connectivity = pluginFactory({\n      name: 'connectivity',\n\n      /**\n       * Initializes the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        var proxy = testRunner.getProxy();\n        var config = Object.assign({}, defaultConfig, this.getConfig()); //Displays a connectivity indicator\n\n        if (config && config.indicator) {\n          //create the indicator\n          this.$element = $$1(connectivityTpl({\n            state: proxy.isOnline() ? 'connected' : 'disconnected',\n            message: config.message\n          }));\n          testRunner.on('disconnect', function () {\n            self.$element.removeClass('connected').addClass('disconnected');\n          }).on('reconnect', function () {\n            self.$element.removeClass('disconnected').addClass('connected');\n          });\n        } //update the interval, with the new value\n\n\n        if (this.polling && _.isNumber(config.checkInterval)) {\n          this.polling.setInterval(config.checkInterval);\n        }\n      },\n\n      /**\n       * Installs the plugin (called when the runner bind the plugin)\n       * We do it before init to catch even offline during the init sequence\n       */\n      install: function install() {\n        var self = this;\n        var waiting = false;\n        var testRunner = this.getTestRunner();\n        var proxy = testRunner.getProxy();\n        /**\n         * Display the waiting dialog, while waiting the connection to be back\n         * @param {String} [messsage] - additional message for the dialog\n         * @returns {Promise} resolves once the wait is over and the user click on 'proceed'\n         */\n\n        this.displayWaitingDialog = function displayWaitingDialog() {\n          var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n          var dialog;\n          return new Promise(function (resolve) {\n            if (!waiting) {\n              waiting = true; //if a pause event occurs while waiting,\n              //we also wait the connection to be back\n\n              testRunner.before('pause.waiting', function () {\n                return new Promise(function (pauseResolve) {\n                  proxy.off('reconnect.pausing').after('reconnect.pausing', pauseResolve);\n                });\n              }); //creates the waiting modal dialog\n\n              dialog = waitingDialog({\n                message: __('You are encountering a prolonged connectivity loss. ') + message,\n                waitContent: __('Please wait while we try to restore the connection.'),\n                proceedContent: __('The connection seems to be back, please proceed')\n              }).on('proceed', function () {\n                resolve();\n              }).on('render', function () {\n                proxy.off('reconnect.waiting').after('reconnect.waiting', function () {\n                  testRunner.off('pause.waiting');\n                  waiting = false;\n                  dialog.endWait();\n                });\n              });\n            }\n          });\n        }; //Last chance to check the connection,\n        //by regular polling on the \"up\" signal\n\n\n        this.polling = pollingFactory({\n          action: function action() {\n            testRunner.getProxy().telemetry(testRunner.getTestContext().itemIdentifier, 'up').catch(_.noop);\n          },\n          interval: defaultConfig.checkInterval,\n          autoStart: false\n        }); //the Proxy is the only one to know something about connectivity\n\n        proxy.on('disconnect', function disconnect(source) {\n          if (!testRunner.getState('disconnected')) {\n            testRunner.setState('disconnected', true);\n            testRunner.trigger('disconnect', source);\n            self.polling.start();\n          }\n        }).on('reconnect', function reconnect() {\n          if (testRunner.getState('disconnected')) {\n            testRunner.setState('disconnected', false);\n            testRunner.trigger('reconnect');\n            self.polling.stop();\n          }\n        }); //intercept tries to leave while offline\n        //this could be caused by pauses for example.\n        //If caused by an action like exitTest it will be handled\n        //by navigation errors (see below)\n\n        testRunner.before('leave', function (e, data) {\n          if (proxy.isOffline()) {\n            self.displayWaitingDialog(data.message).then(function () {\n              testRunner.trigger('leave', data);\n            }).catch(function (generalErr) {\n              testRunner.trigger('error', generalErr);\n            });\n            return false;\n          }\n        }); //intercept offline navigation errors\n\n        testRunner.before('error.connectivity', function (e, err) {\n          // detect and prevent connectivity errors\n          if (proxy.isConnectivityError(err)) {\n            return false;\n          }\n\n          if (proxy.isOffline()) {\n            self.displayWaitingDialog().then(function () {\n              if (err.type === 'nav') {\n                testRunner.loadItem(testRunner.getTestContext().itemIdentifier);\n              }\n\n              if (err.type === 'finish') {\n                testRunner.finish();\n              }\n\n              if (err.type === 'pause') {\n                testRunner.trigger('pause', {\n                  reasons: err.data && err.data.reasons,\n                  message: err.data && err.data.comment\n                });\n              }\n            }).catch(function (generalErr) {\n              testRunner.trigger('error', generalErr);\n            });\n            return false;\n          }\n        });\n        testRunner.before('loaditem.connectivity', function (e, itemRef, item) {\n          var testContext = testRunner.getTestContext();\n          var flags = item.flags;\n\n          if (!flags) {\n            return true;\n          }\n\n          if (flags.hasFeedbacks) {\n            testContext.hasFeedbacks = true;\n          }\n\n          if ((flags.containsNonPreloadedAssets || flags.hasPci) && proxy.isOffline()) {\n            self.displayWaitingDialog().then(function () {\n              testRunner.loadItem(itemRef);\n            });\n            return false;\n          }\n        });\n        testRunner.before(namespaceHelper.namespaceAll('move skip timeout', 'connectivity'), function (e) {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          var testContext = testRunner.getTestContext();\n          var currentItem = testRunner.getCurrentItem();\n\n          if (proxy.isOffline() && (currentItem.hasFeedbacks || testContext.hasFeedbacks)) {\n            testRunner.trigger('disableitem');\n            self.displayWaitingDialog().then(function () {\n              var _testRunner$trigger;\n\n              (_testRunner$trigger = testRunner.trigger('enableitem')).trigger.apply(_testRunner$trigger, [e.name].concat(args));\n            });\n            return false;\n          }\n        });\n      },\n      destroy: function destroy() {\n        this.getTestRunner().off('.connectivity');\n      },\n\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        var $container = this.getAreaBroker().getControlArea();\n\n        if (this.$element) {\n          $container.append(this.$element);\n        }\n      }\n    });\n\n    return connectivity;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/connectivity/pauseOnError',['i18n', 'taoTests/runner/plugin', 'handlebars'], function (__, pluginFactory, Handlebars) { 'use strict';\n\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n      buffer += \"<b>\";\n      if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</b><br><br>\\n\";\n      if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      return buffer;\n      });\n    function dialogTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n     */\n    var name = 'pauseOnError';\n    var dialogMessage = {\n      title: __('Something unexpected happened.'),\n      message: __('Please try reloading the page or pause the test. If you pause, you will be able to resume the test from this page.')\n    };\n    var dialogConfig = {\n      focus: 'cancel',\n      buttons: {\n        labels: {\n          ok: __('Pause the test'),\n          cancel: __('Reload the page')\n        }\n      }\n    };\n    var pauseContext = {\n      reasons: {\n        category: 'technical',\n        subCategory: 'error'\n      },\n      originalMessage: 'Due to an unexpected issue the test has been suspended.'\n    };\n    var pauseOnError = pluginFactory({\n      name: name,\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var testRunner = this.getTestRunner();\n\n        var returnToHome = function returnToHome() {\n          return testRunner.trigger('pause', pauseContext);\n        };\n\n        var reloadPage = function reloadPage() {\n          return testRunner.trigger('reloadpage');\n        };\n\n        var processError = function processError(error) {\n          testRunner.on('reloadpage', function () {\n            return window.location.reload();\n          }).trigger('disablenav disabletools hidenav').trigger(\"confirm.\".concat(name), dialogTpl(dialogMessage), returnToHome, reloadPage, dialogConfig);\n\n          if (error.code === 500) {\n            error.originalCode = error.code;\n            delete error.code;\n            testRunner.trigger(\"disablefeedbackalerts\");\n            testRunner.after('error.pauseOnError', function () {\n              testRunner.off('error.pauseOnError');\n              testRunner.trigger(\"enablefeedbackalerts\");\n            });\n          }\n        };\n\n        testRunner.before('error', function (e, error) {\n          return processError(error);\n        });\n      }\n    });\n\n    return pauseOnError;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/duration/duration',['lodash', 'taoTests/runner/plugin', 'core/logger'], function (_, pluginFactory, loggerFactory) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n     */\n    var logger = loggerFactory('taoQtiTest/runner/plugins/controls/duration/duration');\n    /**\n     * Creates the timer plugin\n     */\n\n    var duration = pluginFactory({\n      name: 'duration',\n\n      /**\n       * Install step, add behavior before the lifecycle.\n       */\n      install: function install() {\n        // define the \"duration\" store as \"volatile\" (removed on browser change).\n        this.getTestRunner().getTestStore().setVolatile(this.getName());\n      },\n\n      /**\n       * Initializes the plugin (called during runner's init)\n       *\n       * @returns {Promise}\n       */\n      init: function init() {\n        var testRunner = this.getTestRunner();\n        var currentUpdatePromise = Promise.resolve();\n\n        var getItemAttempt = function getItemAttempt() {\n          var context = testRunner.getTestContext();\n          return \"\".concat(context.itemIdentifier, \"#\").concat(context.attempt);\n        };\n\n        var getPositiveNumber = function getPositiveNumber(value) {\n          if (!_.isNumber(value) || value < 0) {\n            return 0;\n          }\n\n          return value;\n        }; //where the duration of attempts are stored\n\n\n        return testRunner.getPluginStore(this.getName()).then(function (durationStore) {\n          /**\n           * Gets the duration of a particular item from the store\n           *\n           * @param {String} attemptId - the attempt id to get the duration for\n           * @returns {Promise}\n           */\n          var getItemDuration = function getItemDuration(attemptId) {\n            if (!/^(.*)+#+\\d+$/.test(attemptId)) {\n              return Promise.reject(new Error('Is it really an attempt id, like \"itemid#attempt\"'));\n            }\n\n            return durationStore.getItem(attemptId);\n          };\n          /**\n           * Updates the duration of a particular item\n           *\n           * @param {Number} elapsed - time elapsed since previous tick\n           * @returns {Promise}\n           */\n\n\n          var updateDuration = function updateDuration(elapsed) {\n            var itemAttemptId = getItemAttempt();\n            currentUpdatePromise = currentUpdatePromise.then(function () {\n              return getItemDuration(itemAttemptId);\n            }).then(function (duration) {\n              return durationStore.setItem(itemAttemptId, getPositiveNumber(duration) + getPositiveNumber(elapsed) / 1000);\n            }).catch(function (err) {\n              logger.warn(\"Error updating item duration! \".concat(err && err.message));\n            });\n            return currentUpdatePromise;\n          };\n          /**\n           * Adds the current duration to the next action request.\n           * The duration will be sent to the server with the next request,\n           * usually submitItem() or callItemAction()\n           *\n           * @returns {Promise}\n           */\n\n\n          var addDurationToCallActionParams = function addDurationToCallActionParams() {\n            var itemAttemptId = getItemAttempt();\n            return currentUpdatePromise.then(function () {\n              return getItemDuration(itemAttemptId);\n            }).then(function (duration) {\n              return testRunner.getProxy().addCallActionParams({\n                itemDuration: getPositiveNumber(duration)\n              });\n            }).catch(function (err) {\n              logger.warn(\"Error retrieving item duration! \".concat(err && err.message));\n            });\n          }; //change plugin state\n\n\n          testRunner.on('tick', updateDuration).before('move skip exit timeout pause', addDurationToCallActionParams)\n          /**\n           * @event duration.get\n           * @param {String} attemptId - the attempt id to get the duration for\n           * @param {getDuration} getDuration - a receiver callback\n           */\n          .on('plugin-get.duration', function (attemptId, getDuration) {\n            if (_.isFunction(getDuration)) {\n              getDuration(getItemDuration(attemptId));\n            }\n          });\n        });\n      }\n    });\n\n    return duration;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/progressbar/progress',['lodash', 'i18n', 'core/format', 'taoQtiTest/runner/helpers/map'], function (_, __, format, mapHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    format = format && Object.prototype.hasOwnProperty.call(format, 'default') ? format['default'] : format;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * @typedef {Object} progressDetails\n     * @property {Number} position - the position in the current element\n     * @property {Number} reached - the number of reached elements (at least one item viewed)\n     * @property {Number} viewed - the number of viewed elements (all items viewed)\n     * @property {Number} completed - the number of completed elements (all questions answered)\n     * @property {Number} total - the total number of elements\n     */\n\n    /**\n     * @typedef {itemStats} progressData\n     * @property {Number} position - the position in the scope\n     * @property {Number} overallCompleted - the number of completed items in the test\n     * @property {Number} overall - the total number of items in the test\n     * @property {progressDetails} sections - the details of testSections in the scope\n     * @property {progressDetails} parts - the details of testParts in the scope\n     * @property {progressDetails} answerableSections - the details of testSections that contain questions in the scope\n     * @property {progressDetails} answerableParts - the details of testParts that contain questions in the scope\n     * @property {progressDetails} matchedCategories - the details of items that match the expected categories in the scope\n     */\n\n    /**\n     * @typedef {Object} progressIndicator\n     * @property {Number} position - the position in the scope\n     * @property {Number} total - the length of the scope\n     * @property {Number} ratio - the progress ratio of the indicator\n     * @property {String} label - the text to display for the indicator\n     */\n\n    /**\n     * @typedef {Object} progressConfig\n     * @property {String} scope - the scope of the progression\n     * @property {String} indicator - the type of progression\n     * @property {Bool} showTotal - display 'item x of y' (true) | 'item x'\n     * @property {Array} categories - categories to count by them\n     */\n\n    /**\n     * Default progress config\n     * @type {Object}\n     */\n\n    var defaultConfig = {\n      scope: 'test',\n      indicator: 'percentage',\n      showTotal: true,\n      categories: []\n    };\n    /**\n     * List of labels by types\n     * @type {Object}\n     */\n\n    var labels = {\n      item: {\n        long: __('Item %d of %d'),\n        short: __('Item %d')\n      },\n      section: {\n        long: __('Section %d of %d'),\n        short: __('Section %d')\n      }\n    };\n    /**\n     * Simple map of progress stats computers\n     * @type {Object}\n     */\n\n    var scopes = {\n      /**\n       * Gets stats for the whole test\n       * @param {Object} testMap - the actual test map\n       * @param {Object} testContext - the actual test context\n       * @param {progressConfig} config - a config object\n       * @param {String} config.scope - the scope of the progression\n       * @param {Array} config.categories - categories to count by them\n       * @returns {progressData}\n       */\n      test: function test(testMap, testContext, config) {\n        var stats = getProgressStats(testMap, testContext, config, 'test');\n        var item = mapHelper.getItemAt(testMap, testContext.itemPosition);\n        stats.position = item.position + 1;\n        return stats;\n      },\n\n      /**\n       * Gets stats for the current test part\n       * @param {Object} testMap - the actual test map\n       * @param {Object} testContext - the actual test context\n       * @param {progressConfig} config - a config object\n       * @param {String} config.scope - the scope of the progression\n       * @param {Array} config.categories - categories to count by them\n       * @returns {progressData}\n       */\n      testPart: function testPart(testMap, testContext, config) {\n        var stats = getProgressStats(testMap, testContext, config, 'testPart');\n        var item = mapHelper.getItemAt(testMap, testContext.itemPosition);\n        stats.position = item.positionInPart + 1;\n        return stats;\n      },\n\n      /**\n       * Gets stats for the current test section\n       * @param {Object} testMap - the actual test map\n       * @param {Object} testContext - the actual test context\n       * @param {progressConfig} config - a config object\n       * @param {String} config.scope - the scope of the progression\n       * @param {Array} config.categories - categories to count by them\n       * @returns {progressData}\n       */\n      testSection: function testSection(testMap, testContext, config) {\n        var stats = getProgressStats(testMap, testContext, config, 'testSection');\n        var item = mapHelper.getItemAt(testMap, testContext.itemPosition);\n        stats.position = item.positionInSection + 1;\n        return stats;\n      }\n    };\n    /**\n     * Simple map of progress indicator computers\n     * @type {Object}\n     */\n\n    var indicators = {\n      /**\n       * Indicator that shows the percentage of completed items\n       * @param {progressData} stats\n       * @returns {progressIndicator}\n       */\n      percentage: function percentage(stats) {\n        return getRatioProgression(stats.answered, stats.questions);\n      },\n\n      /**\n       * Indicator that shows the position of current item\n       * @param {progressData} stats\n       * @param {progressConfig} config\n       * @param {String} config.scope - the scope of the progression\n       * @param {Array} config.categories - categories to count by them\n       * @returns {progressIndicator}\n       */\n      position: function position(stats, config) {\n        return getPositionProgression(stats.position, stats.total, 'item', config);\n      },\n\n      /**\n       * Indicator that shows the number of viewed questions\n       * @param {progressData} stats\n       * @param {progressConfig} config\n       * @param {String} config.scope - the scope of the progression\n       * @param {Array} config.categories - categories to count by them\n       * @returns {progressIndicator}\n       */\n      questions: function questions(stats, config) {\n        return getPositionProgression(stats.questionsViewed, stats.questions, 'item', config);\n      },\n\n      /**\n       * Indicator that shows the number of reached answerable sections\n       * @param {progressData} stats\n       * @param {progressConfig} config\n       * @param {String} config.scope - the scope of the progression\n       * @param {Array} config.categories - categories to count by them\n       * @returns {progressIndicator}\n       */\n      sections: function sections(stats, config) {\n        return getPositionProgression(stats.answerableSections.reached, stats.answerableSections.total, 'section', config);\n      },\n\n      /**\n       * Indicator that shows the number of viewed items which have categories from the configuration\n       * (show all if categories are not set)\n       * @param {progressData} stats\n       * @param {progressConfig} config\n       * @param {String} config.scope - the scope of the progression\n       * @param {Array} config.categories - categories to count by them\n       */\n      categories: function categories(stats, config) {\n        return getPositionProgression(stats.matchedCategories.position, stats.matchedCategories.total, 'item', config);\n      }\n    };\n    /**\n     * Fix the test map if the current test part is linear, as the current item should not be answered.\n     * @param {Object} testMap - the actual test map\n     * @param {Object} testContext - the actual test context\n     * @returns {Object} The fixed test map\n     */\n\n    function getFixedMap(testMap, testContext) {\n      var currentTestPart = mapHelper.getPart(testMap, testContext.testPartId);\n      var currentItem = mapHelper.getItemAt(testMap, testContext.itemPosition);\n\n      if (currentItem.answered && currentTestPart.isLinear) {\n        var fixedTestMap = _.cloneDeep(testMap);\n\n        var fixedCurrentItem = mapHelper.getItemAt(fixedTestMap, testContext.itemPosition);\n        fixedCurrentItem.answered = false;\n        return fixedTestMap;\n      }\n\n      return testMap;\n    }\n    /**\n     * Gets an empty stats record\n     * @returns {progressDetails}\n     */\n\n\n    function getEmptyStats() {\n      return {\n        position: 0,\n        reached: 0,\n        viewed: 0,\n        completed: 0,\n        total: 0\n      };\n    }\n    /**\n     * Updates the progress stats from the given element\n     * @param {progressDetails} stats - The stats details to update\n     * @param {Object} element - The element from which take the details\n     * @param {Number} position - The current item position\n     */\n\n\n    function updateStats(stats, element, position) {\n      if (element.position <= position) {\n        stats.position++;\n      }\n\n      if (element.stats.viewed) {\n        stats.reached++;\n\n        if (element.stats.viewed === element.stats.total) {\n          stats.viewed++;\n        }\n      }\n\n      if (element.stats.answered) {\n        if (element.stats.answered === element.stats.questions) {\n          stats.completed++;\n        }\n      }\n\n      stats.total++;\n    }\n    /**\n     * Updates the progress stats from the given element\n     * @param {progressDetails} stats - The stats details to update\n     * @param {Object} element - The element from which take the details\n     * @param {Number} position - The current item position\n     */\n\n\n    function updateItemStats(stats, element, position) {\n      if (element.position <= position) {\n        stats.position++;\n      }\n\n      if (element.viewed) {\n        stats.reached++;\n        stats.viewed++;\n      }\n\n      if (element.answered) {\n        stats.completed++;\n      }\n\n      stats.total++;\n    }\n    /**\n     * Convert list of the categories to the hashtable to improve performance\n     * @param categories\n     * @returns {*}\n     */\n\n\n    function getCategoriesToMatch(categories) {\n      var matchSize = categories && categories.length;\n      return matchSize && _.reduce(categories, function (map, category) {\n        map[category] = true;\n        return map;\n      }, {});\n    }\n    /**\n     * Completes the progression stats\n     * @param {Object} testMap - the actual test map\n     * @param {Object} testContext - the actual test context\n     * @param {progressConfig} config\n     * @param {String} config.scope - the scope of the progression\n     * @param {Array} config.categories - categories to count by them\n     * @param {String} [scope] - The name of the scope. Can be: test, part, section (default: test)\n     * @returns {progressData}\n     */\n\n\n    function getProgressStats(testMap, testContext, config, scope) {\n      var fixedMap = getFixedMap(testMap, testContext);\n      var scopedMap = mapHelper.getScopeMap(fixedMap, testContext.itemPosition, scope);\n\n      var stats = _.clone(scopedMap.stats);\n\n      var categoriesToMatch;\n      var matchSize;\n\n      if (config.indicator === 'categories') {\n        categoriesToMatch = getCategoriesToMatch(config.categories);\n        matchSize = config.categories && config.categories.length;\n        stats.matchedCategories = getEmptyStats();\n      }\n\n      stats.parts = getEmptyStats();\n      stats.sections = getEmptyStats();\n      stats.answerableParts = getEmptyStats();\n      stats.answerableSections = getEmptyStats();\n\n      _.forEach(scopedMap.parts, function (part) {\n        updateStats(stats.parts, part, testContext.itemPosition);\n\n        if (part.stats.questions > 0) {\n          updateStats(stats.answerableParts, part, testContext.itemPosition);\n        }\n\n        _.forEach(part.sections, function (section) {\n          updateStats(stats.sections, section, testContext.itemPosition);\n\n          if (section.stats.questions > 0) {\n            updateStats(stats.answerableSections, section, testContext.itemPosition);\n          }\n\n          if (config.indicator === 'categories') {\n            _.forEach(section.items, function (item) {\n              if (matchCategories(item.categories, categoriesToMatch, matchSize)) {\n                updateItemStats(stats.matchedCategories, item, testContext.itemPosition);\n              }\n            });\n          }\n        });\n      });\n\n      return stats;\n    }\n    /**\n     *\n     * @param {Array} categories - List of categories to check\n     * @param {Object} expectedCategories - Hashtable of expected categories\n     * @param {Number} minWanted - Minimal number of expected categories that should match\n     * @returns {Boolean}\n     */\n\n\n    function matchCategories(categories, expectedCategories, minWanted) {\n      var matched = 0;\n\n      if (expectedCategories) {\n        _.forEach(categories, function (category) {\n          if (expectedCategories[category]) {\n            matched++;\n\n            if (matched >= minWanted) {\n              return false;\n            }\n          }\n        });\n      }\n\n      return matched === minWanted;\n    }\n    /**\n     * Gets the progression ratio\n     * @param {Number} position\n     * @param {Number} total\n     * @returns {Number}\n     */\n\n\n    function getRatio(position, total) {\n      if (position && total > 0) {\n        return Math.floor(position / total * 100);\n      }\n\n      return 0;\n    }\n    /**\n     * Gets the label of the progress bar for an item\n     * @param {Number} position - the current position\n     * @param {Number} total - the total number of items\n     * @param {String} type - the type of element that is represented\n     * @param {progressConfig} config - a config object\n     * @param {String} config.scope - the scope of the progression\n     * @param {Array} config.categories - categories to count by them\n     * @returns {String}\n     */\n\n\n    function getProgressionLabel(position, total, type, config) {\n      var patterns = labels[type] || labels.item;\n      var pattern = config.showTotal ? patterns.long : patterns.short;\n      return format(pattern, position || '0', total || '0');\n    }\n    /**\n     * Gets the progression based on position\n     * @param {Number} position - the current position\n     * @param {Number} total - the total number of items\n     * @param {String} type - the type of element that is represented\n     * @param {progressConfig} config - a config object\n     * @param {String} config.scope - the scope of the progression\n     * @param {Array} config.categories - categories to count by them\n     * @returns {progressIndicator}\n     */\n\n\n    function getPositionProgression(position, total, type, config) {\n      return {\n        position: position || 0,\n        total: total || 0,\n        ratio: getRatio(position, total),\n        label: getProgressionLabel(position, total, type, config)\n      };\n    }\n    /**\n     * Gets the progression based on a ratio\n     * @param {Number} position - the current position\n     * @param {Number} total - the total number of items\n     * @returns {progressIndicator}\n     */\n\n\n    function getRatioProgression(position, total) {\n      var ratio = getRatio(position, total);\n      return {\n        position: position || 0,\n        total: total || 0,\n        ratio: ratio,\n        label: \"\".concat(ratio, \"%\")\n      };\n    }\n\n    var progress = {\n      /**\n       * Checks that categories matched\n       * @param categories\n       * @param expectedCategories\n       * @returns {Boolean}\n       */\n      isMatchedCategories: function validCategories(categories, expectedCategories) {\n        var categoriesToMatch = getCategoriesToMatch(expectedCategories);\n        var matchSize = expectedCategories && expectedCategories.length;\n        return matchCategories(categories, categoriesToMatch, matchSize);\n      },\n\n      /**\n       * Computes the progress stats for the specified scope\n       * @param {Object} testMap - the actual test map\n       * @param {Object} testContext - the actual test context\n       * @param {progressConfig} config - a config object\n       * @param {String} config.scope - the scope of the progression\n       * @param {Array} config.categories - categories to count by them\n       * @returns {progressData}\n       */\n      computeStats: function computeStats(testMap, testContext, config) {\n        var testPart = mapHelper.getPart(testMap, testContext.testPartId);\n        var statsComputer = config.scope && scopes[config.scope] || scopes.test;\n        var stats = statsComputer(testMap, testContext, config || defaultConfig);\n        stats.overall = testMap.stats.total;\n\n        if (testPart && testPart.isLinear) {\n          stats.overallCompleted = testMap.stats.answered - 1;\n        } else {\n          stats.overallCompleted = testMap.stats.answered;\n        }\n\n        return stats;\n      },\n\n      /**\n       * Computes the specified progress indicator\n       * @param {progressData} stats - the progress stats\n       * @param {String} type - the [type=\"percentage\"] of indicator to compute (could be: percentage, position, questions, sections)\n       * @param {progressConfig} [config] - a config object\n       * @param {Boolean} [config.showTotal] - display 'item x of y' (true) | 'item x'\n       * @returns {progressIndicator}\n       */\n      computeIndicator: function computeIndicator(stats, type, config) {\n        var indicatorComputer = type && indicators[type] || indicators.percentage;\n        return indicatorComputer(stats || {}, config || defaultConfig);\n      },\n\n      /**\n       *\n       * @param {Object} testMap - the actual test map\n       * @param {Object} testContext - the actual test context\n       * @param {progressConfig} config - a config object\n       * @param {String} config.indicator - the type of progression\n       * @param {String} config.scope - the scope of the progression\n       * @param {Array} config.categories - categories to count by them\n       * @param {Boolean} [config.showTotal=true] - display 'item x of y' (true) | 'item x'\n       */\n      computeProgress: function computeProgress(testMap, testContext, config) {\n        var progressData;\n        config = _.defaults(config || {}, defaultConfig);\n        progressData = this.computeStats(testMap, testContext, config);\n        return this.computeIndicator(progressData, config.indicator, config);\n      }\n    };\n\n    return progress;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/progressbar/renderer/percentage',['ui/component', 'handlebars', 'ui/progressbar'], function (component, Handlebars, progressbar) { 'use strict';\n\n    component = component && Object.prototype.hasOwnProperty.call(component, 'default') ? component['default'] : component;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n      return \"<div class=\\\"progress-box\\\">\\n    <div data-control=\\\"progress-bar\\\" class=\\\"qti-controls progressbar info\\\"></div>\\n    <div data-control=\\\"progress-label\\\" class=\\\"qti-controls\\\"></div>\\n</div>\\n\";\n      });\n    function percentageTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Default config values\n     * @type {Object}\n     */\n\n    var defaults = {\n      showLabel: true\n    };\n    /**\n     * Builds percentage indicator renderer\n     * @param {Object} [config] - a config object\n     * @param {Boolean} [config.showLabel=true] - show/hide the progress label\n     * @param {Object} [progressData] - the initial dataset\n     */\n\n    function percentageIndicatorRenderer(config, progressData) {\n      var rendererApi = {\n        /**\n         * Update the progress bar according to the provided indicator data\n         * @param {progressIndicator} data\n         */\n        update: function update(data) {\n          progressData = data;\n\n          if (this.is('rendered') && this.controls) {\n            this.controls.$label.text(progressData.label);\n            this.controls.$bar.progressbar('value', progressData.ratio);\n          }\n          /**\n           * Executes extra tasks on update\n           * @event percentageIndicatorRenderer#update\n           * @param {progressIndicator} data\n           */\n\n\n          this.trigger('update', data);\n        }\n      };\n      return component(rendererApi, defaults).setTemplate(percentageTpl).on('render', function () {\n        // get access to the controls\n        this.controls = {\n          $label: this.getElement().find('[data-control=\"progress-label\"]'),\n          $bar: this.getElement().find('[data-control=\"progress-bar\"]')\n        }; // apply option\n\n        if (!this.config.showLabel) {\n          this.controls.$label.hide();\n        } // and initialize the progress bar component\n\n\n        this.controls.$bar.progressbar(); // set the right progression according to init data\n\n        if (progressData) {\n          this.update(progressData);\n        } // forward the hidden state if it has been set before render\n\n\n        if (this.is('hidden')) {\n          this.hide();\n        }\n      }).on('destroy', function () {\n        this.controls = null;\n      }).init(config);\n    }\n\n    return percentageIndicatorRenderer;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/progressbar/renderer/position',['lodash', 'ui/component', 'handlebars'], function (_, component, Handlebars) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    component = component && Object.prototype.hasOwnProperty.call(component, 'default') ? component['default'] : component;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n      return \"<div class=\\\"progress-box\\\">\\n    <div data-control=\\\"progress-bar\\\" class=\\\"qti-controls progressbar\\\">\\n        <div class=\\\"progressbar-points\\\"></div>\\n    </div>\\n    <div data-control=\\\"progress-label\\\" class=\\\"qti-controls\\\"></div>\\n</div>\\n\";\n      });\n    function positionTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\";\n      buffer += \"\\n<span class=\\\"progressbar-point\\\" data-index=\\\"\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\"></span>\\n\";\n      return buffer;\n      }\n\n      stack1 = helpers.each.call(depth0, depth0, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function pointTpl(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Default config values\n     * @type {Object}\n     */\n\n    var defaults = {\n      showLabel: true\n    };\n    /**\n     * Builds percentage indicator renderer\n     * @param {Object} [config] - a config object\n     * @param {Boolean} [config.showLabel=true] - show/hide the progress label\n     * @param {Object} [progressData] - the initial dataset\n     */\n\n    function positionIndicatorRenderer(config, progressData) {\n      var count = 0;\n      var rendererApi = {\n        /**\n         * Update the progress bar according to the provided indicator data\n         * @param {progressIndicator} data\n         */\n        update: function update(data) {\n          progressData = data;\n\n          if (this.is('rendered') && this.controls) {\n            if (count !== progressData.total) {\n              // the number of points have changed, regenerate the full bar\n              count = progressData.total;\n              this.controls.$bar.empty().append(pointTpl(_.range(count)));\n            }\n\n            this.controls.$label.text(progressData.label);\n            this.controls.$bar // remove progression from all points\n            .children().removeClass('reached current') // set progression to each reached point\n            .slice(0, progressData.position).addClass('reached') // set current position\n            .slice(-1).addClass('current');\n          }\n          /**\n           * Executes extra tasks on update\n           * @event positionIndicatorRenderer#update\n           * @param {progressIndicator} data\n           */\n\n\n          this.trigger('update', data);\n        }\n      };\n      return component(rendererApi, defaults).setTemplate(positionTpl).on('render', function () {\n        // get access to the controls\n        this.controls = {\n          $label: this.getElement().find('[data-control=\"progress-label\"]'),\n          $bar: this.getElement().find('[data-control=\"progress-bar\"] .progressbar-points')\n        }; // apply option\n\n        if (!this.config.showLabel) {\n          this.controls.$label.hide();\n        } // set the right progression according to init data\n\n\n        if (progressData) {\n          this.update(progressData);\n        } // forward the hidden state if it has been set before render\n\n\n        if (this.is('hidden')) {\n          this.hide();\n        }\n      }).on('destroy', function () {\n        this.controls = null;\n      }).init(config);\n    }\n\n    return positionIndicatorRenderer;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/progressbar/progressbar',['taoTests/runner/plugin', 'taoQtiTest/runner/helpers/map', 'taoQtiTest/runner/plugins/controls/progressbar/progress', 'taoQtiTest/runner/plugins/controls/progressbar/renderer/percentage', 'taoQtiTest/runner/plugins/controls/progressbar/renderer/position'], function (pluginFactory, mapHelper, progressHelper, percentageRendererFactory, positionRendererFactory) { 'use strict';\n\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    progressHelper = progressHelper && Object.prototype.hasOwnProperty.call(progressHelper, 'default') ? progressHelper['default'] : progressHelper;\n    percentageRendererFactory = percentageRendererFactory && Object.prototype.hasOwnProperty.call(percentageRendererFactory, 'default') ? percentageRendererFactory['default'] : percentageRendererFactory;\n    positionRendererFactory = positionRendererFactory && Object.prototype.hasOwnProperty.call(positionRendererFactory, 'default') ? positionRendererFactory['default'] : positionRendererFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2018 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * List of available progress indicator renderers\n     * @type {Object}\n     */\n\n    var renderers = {\n      percentage: percentageRendererFactory,\n      position: positionRendererFactory\n    };\n    /**\n     * Returns the configured plugin\n     */\n\n    var progressbar = pluginFactory({\n      name: 'progressBar',\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var testRunner = this.getTestRunner();\n        var testRunnerConfig = testRunner.getOptions();\n        var config = Object.assign({}, testRunnerConfig.progressIndicator || {}, this.getConfig());\n        var self = this;\n        var rendererFactory = renderers[config.renderer] || renderers.percentage;\n        var progressConfig = {\n          indicator: config.type || 'percentage',\n          scope: config.scope || 'test',\n          showLabel: config.showLabel,\n          showTotal: config.showTotal,\n          categories: config.categories\n        };\n\n        var hiddenByQuestions = function hiddenByQuestions(item) {\n          return item && item.informational && progressConfig.indicator === 'questions';\n        };\n\n        var hiddenByCategories = function hiddenByCategories(item) {\n          return item && progressConfig.indicator === 'categories' && !progressHelper.isMatchedCategories(item.categories, progressConfig.categories);\n        };\n        /**\n         * Check if progress bar should be hidden\n         */\n\n\n        var isProgressbarHidden = function isProgressbarHidden(item) {\n          return hiddenByQuestions(item) || hiddenByCategories(item);\n        };\n        /**\n         * Update the progress bar\n         */\n\n\n        var update = function update() {\n          var testContext = testRunner.getTestContext();\n          var testMap = testRunner.getTestMap();\n          var item = mapHelper.getItemAt(testMap, testContext.itemPosition);\n\n          if (isProgressbarHidden(item)) {\n            self.renderer.hide();\n          } else {\n            self.renderer.show();\n            self.renderer.update(progressHelper.computeProgress(testMap, testContext, progressConfig));\n          }\n        }; //create the progressbar\n\n\n        this.renderer = rendererFactory(progressConfig); //let update the progression\n\n        update();\n        testRunner.on('ready loaditem', update);\n      },\n\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        var $container = this.getAreaBroker().getControlArea();\n        this.renderer.render($container);\n      },\n\n      /**\n       * Called during the runner's render phase\n       */\n      destroy: function destroy() {\n        if (this.renderer) {\n          this.renderer.destroy();\n        }\n\n        this.renderer = null;\n      },\n\n      /**\n       * Show the progress bar\n       */\n      show: function show() {\n        if (this.renderer) {\n          this.renderer.show();\n        }\n      },\n\n      /**\n       * Hide the progress bar\n       */\n      hide: function hide() {\n        if (this.renderer) {\n          this.renderer.hide();\n        }\n      }\n    });\n\n    return progressbar;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/testState/testState',['lodash', 'taoTests/runner/plugin'], function (_, pluginFactory) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Creates the testState plugin.\n     * Handle particular states of the assessment test\n     */\n\n    var testState = pluginFactory({\n      name: 'testState',\n\n      /**\n       * Installs the plugin (called when the runner bind the plugin)\n       */\n      install: function install() {\n        var testRunner = this.getTestRunner(); // middleware invoked on every requests\n\n        testRunner.getProxy().use(function qtiFilter(req, res, next) {\n          var data = res && res.data; // test has been closed/suspended => redirect to the index page after message acknowledge\n\n          if (data && data.type && data.type === 'TestState' && !testRunner.getState('closedOrSuspended')) {\n            // spread the world about the reason of the leave\n            testRunner.setState('closedOrSuspended', true);\n\n            if (!testRunner.getState('ready')) {\n              // if we open an inconsistent test just leave\n              // should happen if we refresh an auto paused test\n              testRunner.trigger('destroy');\n            } else if (_.isEmpty(data.messages) || !_.find(data.messages, {\n              channel: 'teststate'\n            })) {\n              testRunner.trigger('leave', data);\n            } // break the chain to avoid uncaught exception in promise...\n            // this will lead to unresolved promise, but the browser will be redirected soon!\n\n\n            return;\n          }\n\n          next();\n        });\n      },\n\n      /**\n       * Initializes the plugin (called during runner's init)\n       */\n      init: function init() {\n        var testRunner = this.getTestRunner();\n        var isLeaving = false; // immediate handling of proctor's actions\n\n        testRunner.getProxy().channel('teststate', function (data) {\n          if (!isLeaving && data && ('close' === data.type || 'pause' === data.type) && !testRunner.getState('closedOrSuspended')) {\n            isLeaving = true;\n\n            if ('pause' === data.type) {\n              testRunner.trigger('pause', data);\n            } else {\n              testRunner.setState('closedOrSuspended', true);\n              testRunner.trigger('leave', data);\n            }\n          }\n        });\n      }\n    });\n\n    return testState;\n\n});\n\n","define('taoQtiTest/runner/helpers/getTimerMessage',['i18n'], function (__) { 'use strict';\n\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n\n    /**\n     * Returns timer information string\n     * @returns {Boolean}\n     */\n\n    function getTimerMessage(hours, minutes, seconds, unansweredQuestions, scope) {\n      var timerMessage;\n      var timeArr = [hours, minutes, seconds];\n      var timeArgArr = [];\n      [__('hours'), __('minutes'), __('seconds')].forEach(function (unit, idx) {\n        if (timeArr[idx] > 0) {\n          timeArgArr.push(\"\".concat(timeArr[idx], \" \").concat(unit));\n        }\n      });\n      var answeredMessage;\n\n      if (!unansweredQuestions || scope === 'item') {\n        answeredMessage = __('the current question');\n      } else {\n        var questionsMessage = __('questions');\n\n        if (unansweredQuestions === 1) {\n          questionsMessage = __('question');\n        }\n\n        answeredMessage = __('remaining %s %s', unansweredQuestions, questionsMessage);\n      }\n\n      if (timeArgArr.length === 0) {\n        timerMessage = __('%s to answer %s', 'no time left', answeredMessage);\n      } else {\n        timerMessage = __('%s to answer %s', timeArgArr.join(', '), answeredMessage);\n      }\n\n      return timerMessage;\n    }\n\n    return getTimerMessage;\n\n});\n\n","\ndefine('css!taoQtiTest/runner/plugins/controls/timer/component/css/countdown',[],function(){});\n","define('taoQtiTest/runner/plugins/controls/timer/component/countdown',['jquery', 'lodash', 'core/encoder/time', 'ui/component', 'handlebars', 'taoQtiTest/runner/helpers/getTimerMessage', 'ui/tooltip', 'css!taoQtiTest/runner/plugins/controls/timer/component/css/countdown.css', 'moment'], function ($$1, _, timeEncoder, component, Handlebars, getTimerMessage, tooltip, countdown_css, moment) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    timeEncoder = timeEncoder && Object.prototype.hasOwnProperty.call(timeEncoder, 'default') ? timeEncoder['default'] : timeEncoder;\n    component = component && Object.prototype.hasOwnProperty.call(component, 'default') ? component['default'] : component;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    getTimerMessage = getTimerMessage && Object.prototype.hasOwnProperty.call(getTimerMessage, 'default') ? getTimerMessage['default'] : getTimerMessage;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n    moment = moment && Object.prototype.hasOwnProperty.call(moment, 'default') ? moment['default'] : moment;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n      buffer += \"<div class=\\\"countdown\\\" data-control=\\\"\";\n      if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-type=\\\"\";\n      if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-scope=\\\"\";\n      if (helper = helpers.scope) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.scope); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" title=\\\"\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" disabled>\\n    <span aria-label=\\\"\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" class=\\\"label truncate\\\">\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n    <span class=\\\"time\\\" aria-hidden=\\\"true\\\"></span>\\n    <div class=\\\"time--screenreader visible-hidden\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function countdownTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n     */\n\n    var precision = 1000;\n    /**\n     * Default config values, see below.\n     */\n\n    var defaults = {\n      showBeforeStart: true,\n      displayWarning: true\n    };\n    /**\n     * time to display warnings\n     */\n\n    var warningTimeout = {\n      info: 2000,\n      success: 2000,\n      warning: 4000,\n      danger: 4000,\n      error: 8000\n    };\n    /**\n     * Creates, initialize and render a countdown component.\n     *\n     * @param {jQueryElement|HTMLElement} $container - where to append the countdown\n     * @param {Object} config\n     * @param {String} config.id - the timer unique identifier\n     * @param {String} config.label - the text to display above the timer\n     * @param {String} config.type - the type of countdown (to categorize them)\n     * @param {String} [config.scope] - scope of a timer\n     * @param {Number} [config.unansweredQuestions] - number of unanswered options\n     * @param {Number} [config.remainingTime] - the current value of the countdown, in milliseconds\n     * @param {Boolean} [config.showBeforeStart = true] - do we show the time before starting\n     * @param {Boolean} [config.displayWarning = true] - do we display the warnings or trigger only the event\n     * @param {Object[]} [config.warnings] - define warnings thresholds\n     * @param {Number} [config.warnings.threshold] - when the warning is shown, in milliseconds\n     * @param {String} [config.warnings.message] - the warning message\n     * @param {String} [config.warnings.level = warn] - the feedback level in (success, info, warn, danger and error)\n     * @returns {countdown} the component, initialized and rendered\n     */\n\n    function countdownFactory($container, config) {\n      var $time;\n      var $timeScreenreader;\n      /**\n       * @typedef {Object} countdown\n       */\n\n      var countdown = component({\n        /**\n         * Update the countdown\n         * @param {Number} remainingTime - the time remaining (milliseconds)\n         * @param {Number} unansweredQuestions\n         * @returns {countdown} chains\n         * @fires countdown#change - when the value has changed\n         * @fires countdown#warn - when a threshold is reached\n         */\n        update: function udpate(remainingTime, unansweredQuestions) {\n          var self = this;\n          var encodedTime;\n          var warningId;\n          var warningMessage;\n\n          if (!this.is('completed')) {\n            if (remainingTime <= 0) {\n              this.remainingTime = 0;\n            } else {\n              this.remainingTime = parseInt(remainingTime, 10);\n            }\n\n            if (this.is('rendered') && this.is('running')) {\n              encodedTime = timeEncoder.encode(this.remainingTime / precision);\n\n              if (encodedTime !== this.encodedTime) {\n                this.encodedTime = encodedTime;\n                var time = moment.duration(this.remainingTime / precision, 'seconds');\n                var hours = time.get('hours');\n                var minutes = time.get('minutes');\n                var seconds = time.get('seconds');\n                $time.text(this.encodedTime);\n                $timeScreenreader.text(getTimerMessage(hours, minutes, seconds, unansweredQuestions, this.config.scope));\n              }\n\n              if (this.warnings) {\n                //the warnings have already be sorted\n                warningId = _.findLastKey(this.warnings, function (warning) {\n                  return warning && !warning.shown && warning.threshold > 0 && warning.threshold >= self.remainingTime;\n                });\n\n                if (warningId) {\n                  this.warnings[warningId].shown = true;\n\n                  if (_.isFunction(this.warnings[warningId].message)) {\n                    warningMessage = this.warnings[warningId].message(this.remainingTime);\n                  } else {\n                    warningMessage = this.warnings[warningId].message;\n                  }\n                  /**\n                   * Warn user the timer reach a threshold\n                   * @event countdown#warn\n                   * @param {String} message\n                   * @param {String} level\n                   */\n\n\n                  this.trigger('warn', warningMessage, this.warnings[warningId].level);\n                }\n              }\n\n              if (this.warningsForScreenreader) {\n                //the warnings have already be sorted\n                var screenreaderWarningId = _.findLastKey(this.warningsForScreenreader, function (warning) {\n                  return warning && !warning.shown && warning.threshold > 0 && warning.threshold >= self.remainingTime;\n                });\n\n                if (screenreaderWarningId) {\n                  this.warningsForScreenreader[screenreaderWarningId].shown = true;\n                  /**\n                   * Warn user the timer reach a threshold\n                   * @event countdown#warnscreenreader\n                   * @param {Function} message\n                   * @param {Number} remainingTime\n                   * @param {String} scope\n                   */\n\n                  this.trigger('warnscreenreader', this.warningsForScreenreader[screenreaderWarningId].message, self.remainingTime, this.warningsForScreenreader[screenreaderWarningId].scope);\n                }\n              }\n              /**\n               * The current value has changed\n               * @event countdown#change\n               * @param {Number} remainingTime - the updated time\n               * @param {String} displayed - the displayed value\n               */\n\n\n              this.trigger('change', this.remainingTime, encodedTime);\n            }\n\n            if (this.remainingTime === 0) {\n              this.complete();\n            }\n          }\n\n          return this;\n        },\n\n        /**\n         * Starts the countdown\n         * @returns {countdown} chains\n         * @fires countdown#start\n         */\n        start: function start() {\n          if (this.is('rendered') && !this.is('running') && !this.is('completed')) {\n            this.enable();\n            this.setState('running', true);\n            /**\n             * The count has started\n             * @event countdown#start\n             */\n\n            this.trigger('start');\n          }\n\n          return this;\n        },\n\n        /**\n         * Stops the countdown (can be restarted then)\n         * @returns {countdown} chains\n         * @fires countdown#stop\n         */\n        stop: function stop() {\n          if (this.is('rendered') && this.is('running')) {\n            this.setState('running', false);\n            /**\n             * The count is stopped\n             * @event countdown#stop\n             */\n\n            this.trigger('stop');\n          }\n\n          return this;\n        },\n\n        /**\n         * Calls to complete the countdown,\n         * it can't be resumed after.\n         *\n         * @returns {countdown} chains\n         *\n         * @fires countdown#complete\n         * @fires countdown#end\n         */\n        complete: function complete() {\n          if (this.is('rendered') && this.is('running') && !this.is('completed')) {\n            this.stop();\n            this.setState('completed', true);\n            /**\n             * The countdown has ended, is completed\n             * @event countdown#complete\n             * @event countdown#end (alias)\n             */\n\n            this.trigger('complete end');\n          }\n\n          return this;\n        }\n      }, defaults).on('init', function () {\n        this.remainingTime = this.config.remainingTime;\n        this.unansweredQuestions = this.config.unansweredQuestions;\n\n        if (this.config.warnings) {\n          this.warnings = _.sortBy(this.config.warnings, 'threshold');\n        }\n\n        if (this.config.warningsForScreenreader) {\n          this.warningsForScreenreader = _.sortBy(this.config.warningsForScreenreader, 'threshold');\n        } //auto renders\n\n\n        this.render($container);\n      }).on('render', function () {\n        $time = $$1('.time', this.getElement());\n        $timeScreenreader = $$1('.time--screenreader', this.getElement());\n\n        if (this.config.showBeforeStart === true) {\n          $time.text(timeEncoder.encode(this.remainingTime / precision));\n        }\n      }).on('warn', function (message, level) {\n        var countdownTooltip;\n        level = level || 'warning';\n\n        if (this.is('rendered') && this.is('running') && _.isString(message) && !_.isEmpty(message)) {\n          $time.removeClass('txt-success txt-info txt-warning txt-danger txt-error').addClass(\"txt-\".concat(level));\n\n          if (this.config.displayWarning === true) {\n            countdownTooltip = tooltip.create(this.getElement(), message, {\n              trigger: 'manual',\n              theme: level,\n              placement: 'bottom'\n            });\n            countdownTooltip.show();\n            setTimeout(function () {\n              countdownTooltip.hide();\n              countdownTooltip.dispose();\n            }, warningTimeout[level] || 2000);\n          }\n        }\n      });\n      countdown.setTemplate(countdownTpl);\n\n      _.defer(function () {\n        countdown.init(config);\n      });\n\n      return countdown;\n    }\n\n    return countdownFactory;\n\n});\n\n","\ndefine('css!taoQtiTest/runner/plugins/controls/timer/component/css/timerbox',[],function(){});\n","define('taoQtiTest/runner/plugins/controls/timer/component/timerbox',['jquery', 'lodash', 'i18n', 'ui/component', 'ui/hider', 'taoQtiTest/runner/plugins/controls/timer/component/countdown', 'handlebars', 'css!taoQtiTest/runner/plugins/controls/timer/component/css/timerbox.css'], function ($$1, _, __, component, hider, countdownFactory, Handlebars, timerbox_css) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    component = component && Object.prototype.hasOwnProperty.call(component, 'default') ? component['default'] : component;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    countdownFactory = countdownFactory && Object.prototype.hasOwnProperty.call(countdownFactory, 'default') ? countdownFactory['default'] : countdownFactory;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this, functionType=\"function\";\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", helper, options;\n      buffer += \"\\n    <a href=\\\"#\\\" class=\\\"timer-toggler hidden\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Hide timers\", options) : helperMissing.call(depth0, \"__\", \"Hide timers\", options)))\n        + \"\\\" role=\\\"button\\\"><span class=\\\"icon-clock\\\"></span></a>\\n    \";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"timer-box\\\">\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.zenMode)),stack1 == null || stack1 === false ? stack1 : stack1.enabled), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"timer-wrapper\\\" aria-hidden=\\\"\";\n      if (helper = helpers.ariaHidden) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.ariaHidden); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\\n\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function timerboxTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Default config values, see below.\n     */\n\n    var defaults = {\n      zenMode: {\n        enabled: true,\n        startHidden: false\n      }\n    };\n    /**\n     * Creates and initialize the timerbox component.\n     * Please not the component IS NOT rendered.\n     * You'll have to render it by yourself.\n     *\n     * @param {Object} config\n     * @param {Boolean} [config.zenMode = true] - zen mode adds a button to hide the countdowns to stay zen\n     * @param {Object[]} [config.timers] - the timers to start with\n     * @param {Boolean} [config.displayWarning = true] - let the countdown display their warning (contextual)\n     * @returns {timerbox} the component, initialized and rendered\n     */\n\n    function timerboxFactory(config) {\n      var $zenModeToggler;\n      var $countdownContainer;\n      /**\n       * @typedef {Object} timerbox\n       */\n\n      var timerbox = component({\n        /***\n         * Update the displayed timers.\n         * Compare the current and the given, it will add,remove and update timers.\n         *\n         * @param {Object[]} timers - the new timers\n         * @returns {Promise<Array>} resolves when all timers are up to date (with the result of all the update operations)\n         *\n         * @fires timerbox#update the update is done\n         */\n        update: function update(timers) {\n          var self = this;\n          var updating = []; //remove timers\n\n          var timerIdsToRemove = _.difference(_.keys(this.timers), _.keys(timers));\n\n          if (timerIdsToRemove.length) {\n            _.forEach(timerIdsToRemove, function (timerId) {\n              updating.push(self.removeTimer(timerId));\n            });\n          } //add/update\n\n\n          _.forEach(timers, function (timer, id) {\n            if (typeof self.timers[id] === 'undefined') {\n              updating.push(self.addTimer(id, timer));\n            } else {\n              updating.push(self.updateTimer(id, timer));\n            }\n          });\n\n          return Promise.all(updating).then(function (results) {\n            //show the toggler only if there's timers\n            if (_.size(self.timers) > 0) {\n              hider.show($zenModeToggler);\n            } else {\n              hider.hide($zenModeToggler);\n            }\n            /**\n             * The timer box update is done\n             * @event timerbox#update\n             * @param {Object[]} timers - ALL update results (includes removals)\n             */\n\n\n            self.trigger('update', results);\n            return results;\n          });\n        },\n\n        /**\n         * Get the current timers\n         * @return {Object[]} the timers\n         */\n        getTimers: function getTimers() {\n          return this.timers;\n        },\n\n        /**\n         * Adds a new timer to the box\n         * @param {String} id - the timer unique identifier\n         * @param {Object} timer - the new timer\n         * @return {Promise<Object|Boolean>} resolves with the timer once added or false\n         *\n         * @fires timerbox#timerchange something changes in a timer\n         * @fires timerbox#timeradd a new timer is in the box\n         * @fires timerbox#timerstart a timer get started\n         * @fires timerbox#timerstop a timer get stopped\n         * @fires timerbox#timerend a timer get completed\n         * @fires timerbox#change spread from the countdown\n         */\n        addTimer: function addTimer(id, timer) {\n          var self = this;\n\n          if (this.is('rendered') && typeof this.timers[id] === 'undefined') {\n            return new Promise(function (resolve) {\n              var countdown = countdownFactory($countdownContainer, _.defaults(timer, {\n                displayWarning: self.config.displayWarning\n              })).on('render', function () {\n                //keep track of the new timer\n                //and the countdown component\n                self.timers[id] = _.clone(timer);\n                self.timers[id].countdown = this;\n                /**\n                 * The timers have changed (add, update, remove)\n                 * @event timerbox#timerchange\n                 * @param {String} action - add, update, remove\n                 * @param {Object} timer\n                 */\n\n                self.trigger('timerchange', 'add', self.timers[id]);\n                /**\n                 * A new timer is added\n                 * @event timerbox#timeradd\n                 * @param {Object} timer\n                 */\n\n                self.trigger('timeradd', self.timers[id]);\n                resolve(self.timers[id]);\n              }).on('start', function () {\n                /**\n                 * A timer starts\n                 * @event timerbox#timerstart\n                 * @param {Object} timer\n                 */\n                self.trigger('timerstart', self.timers[id]);\n              }).on('stop', function () {\n                /**\n                 * A timer stops\n                 * @event timerbox#timerstop\n                 * @param {Object} timer\n                 */\n                self.trigger('timerstop', self.timers[id]);\n              }).on('end', function () {\n                /**\n                 * A timer ends\n                 * @event timerbox#timerend\n                 * @param {Object} timer\n                 */\n                self.trigger('timerend', self.timers[id]);\n              }).on('change', function (value) {\n                if (self.timers[id]) {\n                  self.trigger('timertick', this.remainingTime, self.timers[id].scope, self.timers[id].unansweredQuestions); // propogate current timer data\n                  //keep the current timer data in sync\n\n                  self.timers[id].remainingTime = value;\n                }\n              });\n              countdown.spread(self, ['error', 'change', 'warn', 'warnscreenreader']);\n            });\n          }\n\n          return Promise.resolve(false);\n        },\n\n        /**\n         * Updates an existing timer\n         * @param {String} id - the timer unique identifier\n         * @param {Object} timer - the new timer\n         * @return {Promise<Object|Boolean>} resolves with the timer once updated or false\n         *\n         * @fires timerbox#timerchange something changes in a timer\n         * @fires timerbox#timerupdate an existing timer is updated\n         */\n        updateTimer: function updateTimer(id, timer) {\n          if (this.is('rendered') && typeof this.timers[id] !== 'undefined') {\n            this.timers[id].remainingTime = timer.remainingTime;\n            this.timers[id].unansweredQuestions = timer.unansweredQuestions;\n            this.timers[id].extraTime = timer.extraTime;\n\n            if (_.isNumber(timer.remainingWithoutExtraTime)) {\n              this.timers[id].remainingWithoutExtraTime = timer.remainingWithoutExtraTime;\n            }\n\n            if (this.timers[id].countdown) {\n              this.timers[id].countdown.update(timer.remainingTime, timer.unansweredQuestions);\n            }\n\n            this.trigger('timerchange', 'update', this.timers[id]);\n            /**\n             * A timer has been updated with external values\n             * @event timerbox#timerupdate\n             * @param {Object} timer\n             */\n\n            this.trigger('timerupdate', this.timers[id]);\n            return Promise.resolve(this.timers[id]);\n          }\n\n          return Promise.resolve(false);\n        },\n\n        /**\n         * Remove a timer\n         * @param {String} id - the timer unique identifier\n         * @return {Promise<Object|Boolean>} resolves with the timer once removed or false\n         *\n         * @fires timerbox#timerchange something changes in a timer\n         * @fires timerbox#timerremove a timer is removed\n         */\n        removeTimer: function removeTimer(id) {\n          var self = this;\n\n          if (this.is('rendered') && typeof this.timers[id] !== 'undefined') {\n            return new Promise(function (resolve) {\n              /**\n               * Artifact function, remove the timer from the component index\n               */\n              var deindex = function deindex() {\n                //keep a clone, without the component, for the event\n                var removed = _.omit(self.timers[id], 'countdown'); //remove the timer from the list\n\n\n                self.timers = _.omit(self.timers, id);\n                self.trigger('timerchange', 'remove', removed);\n                /**\n                 * A timer has been updated with external values\n                 * @event timerbox#timerupdate\n                 * @param {Object} timer\n                 */\n\n                self.trigger('timerremove', removed);\n                resolve(removed);\n              };\n\n              if (self.timers[id].countdown) {\n                self.timers[id].countdown.on('destroy', deindex).destroy();\n              } else {\n                deindex();\n              }\n            });\n          }\n\n          return Promise.resolve();\n        },\n\n        /**\n         * Starts all the timers contained in the box\n         * @returns {timerbox} chains\n         */\n        start: function start() {\n          _.forEach(this.timers, function (timer) {\n            if (timer.countdown) {\n              timer.countdown.start();\n            }\n          });\n\n          return this;\n        },\n\n        /**\n         * Stops all the timers contained in the box\n         * @returns {timerbox} chains\n         */\n        stop: function stop() {\n          _.forEach(this.timers, function (timer) {\n            if (timer.countdown) {\n              timer.countdown.stop();\n            }\n          });\n\n          return this;\n        },\n\n        /**\n         * Show/hide the timers aka \"zen mode\"\n         * @returns {timerbox} chains\n         * @fires timerbox#zenchange\n         */\n        toggleZenMode: function toggleZenMode() {\n          if (this.is('rendered') && this.config.zenMode.enabled) {\n            if (this.is('zen')) {\n              this.setState('zen', false);\n              $zenModeToggler.attr('title', __('Hide timers'));\n            } else {\n              this.setState('zen', true);\n              $zenModeToggler.attr('title', __('Show timers'));\n            }\n            /**\n             * @event timerbox#zenchange\n             * @param {Boolean} isZen\n             */\n\n\n            this.trigger('zenchange', this.is('zen'));\n          }\n\n          return this;\n        }\n      }, defaults).on('init', function () {\n        //index the current timers\n        this.timers = {};\n      }).on('render', function () {\n        var self = this;\n        var $element = this.getElement(); //where we append the countdowns components\n\n        $countdownContainer = $$1('.timer-wrapper', $element); //set up the zen mode toggler\n\n        if (this.config.zenMode.enabled) {\n          $zenModeToggler = $$1('.timer-toggler', $element);\n          self.setState('zen', !!self.config.zenMode.startHidden);\n          $zenModeToggler.on('click', function (e) {\n            e.preventDefault();\n            self.toggleZenMode();\n          });\n        } //if timers are provided with the config, we perform the 1st update\n\n\n        if (this.config.timers) {\n          this.update(this.config.timers);\n        }\n      });\n      timerbox.setTemplate(timerboxTpl);\n\n      _.defer(function () {\n        timerbox.init(config);\n      });\n\n      return timerbox;\n    }\n\n    return timerboxFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/timer/strategy/enforcedStay',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Timer strategy that enforce the test taker to stay in\n     * front of the item until the timer completes,\n     * by disabling the navigation elements.\n     *\n     * Applies on item scope, min timers if the testPart is linear\n     *\n     * @author Bertrand Chevrier <bertrand@taotesting.com>\n     */\n\n    /**\n     * Creates the strategy if it applies to the given timer\n     * @param {runner} testRunner\n     * @param {Object} timer\n     * @returns {strategy|Boolean} the strategy if applies or false\n     */\n    function enforcedStayStrategy(testRunner, timer) {\n      var testPart = testRunner.getCurrentPart();\n\n      if (timer && timer.type === 'min' && timer.scope === 'item' && testPart && testPart.isLinear) {\n        return {\n          name: 'enforcedStay',\n\n          /**\n           * setUp entry point : disable the navigation\n           */\n          setUp: function setUp() {\n            testRunner.on('enablenav.enforcestay', function () {\n              testRunner.trigger('disablenav');\n            });\n            testRunner.trigger('disablenav');\n          },\n\n          /**\n           * complete entry point : enables back the navigation\n           */\n          complete: function complete() {\n            this.tearDown();\n            testRunner.trigger('enablenav');\n          },\n\n          /**\n           * tearDown entry point : remove the listeners\n           */\n          tearDown: function tearDown() {\n            testRunner.off('enablenav.enforcestay');\n          }\n        };\n      }\n\n      return false;\n    }\n\n    return enforcedStayStrategy;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/timer/strategy/extraTime',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n     */\n    var precision = 1000;\n    var lastConsumedExtraTime = 0;\n    /**\n     * Creates the strategy if it applies to the given timer\n     * @param {runner} testRunner\n     * @param {Object} timer\n     * @returns {strategy|Boolean} the strategy if applies or false\n     */\n\n    function extraTimeStrategy(testRunner, timer) {\n      /**\n       * Apply the extra time to the timer 'once' and\n       * listen for test movment to add the consumed extrat time as parameter\n       * Since the extra time is global, if multiple timers use the extra time part,\n       * we take the biggest consumed extra time.\n       */\n      var applyExtraTime = function applyExtraTime() {\n        if (_.isNumber(timer.extraTime) && timer.extraTime > 0 && !timer.extraTimeSetup) {\n          timer.extraTimeSetup = true;\n          testRunner.before('move.extra skip.extra exit.extra timeout.extra', function () {\n            var consumedExtraTime = 0;\n            var testContext = testRunner.getTestContext();\n\n            if (timer.remainingTime < timer.extraTime) {\n              consumedExtraTime = Math.max(timer.extraTime - timer.remainingTime, 0) / precision;\n              lastConsumedExtraTime = Math.max(consumedExtraTime, lastConsumedExtraTime, testContext.extraTime.consumed);\n              testRunner.getProxy().addCallActionParams({\n                consumedExtraTime: lastConsumedExtraTime\n              });\n            }\n          }).after('move.extra skip.extra exit.extra timeout.extra', function () {\n            lastConsumedExtraTime = 0;\n          });\n        }\n      };\n\n      if (timer && timer.type === 'max') {\n        return {\n          name: 'extraTime',\n\n          /**\n           * setUp entry point : adds the extratime to the timer\n           */\n          setUp: function setUp() {\n            applyExtraTime();\n          },\n\n          /**\n           * setUp entry point : adds the extratime to the timer\n           */\n          start: function start() {\n            //apply at start also in case the extra time is added in between\n            applyExtraTime();\n          },\n\n          /**\n           * tearDown entry point : remove the listeners\n           */\n          tearDown: function tearDown() {\n            testRunner.off('move.extra skip.extra exit.extra timeout.extra');\n          }\n        };\n      }\n\n      return false;\n    }\n\n    return extraTimeStrategy;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/timer/strategy/guidedNavigation',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Timer strategy that enforce the test taker to stay in\n     * front of the item until the timer completes,\n     * by hidding the navigation elements.\n     * Once the timer completes, the test moves to the next item.\n     *\n     * Applies on item scope, locked timers only, linear test part and\n     * the test configuration \"guidedNavigation\"\n     *\n     * @author Bertrand Chevrier <bertrand@taotesting.com>\n     */\n\n    /**\n     * Creates the strategy if it applies to the given timer\n     * @param {runner} testRunner\n     * @param {Object} timer\n     * @returns {strategy|Boolean} the strategy if applies or false\n     */\n    function guidedNavigationStrategy(testRunner, timer) {\n      var testRunnerOptions = testRunner.getOptions();\n      var testPart = testRunner.getCurrentPart();\n\n      if (timer && timer.type === 'locked' && timer.scope === 'item' && testRunnerOptions.guidedNavigation === true && testPart && testPart.isLinear) {\n        return {\n          name: 'guidedNavigation',\n\n          /**\n           * setUp entry point : hides the navigation\n           */\n          setUp: function setUp() {\n            testRunner.trigger('hidenav');\n          },\n\n          /**\n           * complete entry point : enables back the navigation\n           */\n          complete: function complete() {\n            testRunner.trigger('disableitem disablenav shownav');\n            setTimeout(function () {\n              testRunner.trigger('move', 'next', 'item');\n            }, 500);\n          }\n        };\n      }\n\n      return false;\n    }\n\n    return guidedNavigationStrategy;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/timer/strategy/timeout',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Timeout strategy, the given scope is timedout when the timer completes.\n     *\n     * Applies on all max timers\n     *\n     * @author Bertrand Chevrier <bertrand@taotesting.com>\n     */\n\n    /**\n     * Creates the strategy if it applies to the given timer\n     * @param {runner} testRunner\n     * @param {Object} timer\n     * @returns {strategy|Boolean} the strategy if applies or false\n     */\n    function timeoutStrategy(testRunner, timer) {\n      if (timer && timer.type === 'max') {\n        return {\n          name: 'timeout',\n\n          /**\n           * complete entry point : timeout\n           */\n          complete: function complete() {\n            if (timer.qtiClassName && timer.source) {\n              return testRunner.timeout(timer.qtiClassName, timer.source, timer);\n            }\n          }\n        };\n      }\n\n      return false;\n    }\n\n    return timeoutStrategy;\n\n});\n\n","define('taoQtiTest/runner/helpers/currentItem',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * List of QTI model cardinalities\n     * @type {Object}\n     */\n\n    var responseCardinalities = {\n      single: 'base',\n      multiple: 'list',\n      ordered: 'list',\n      record: 'record'\n    };\n    /**\n     * List of QTI interaction minConstraint properties\n     * @type {Object}\n     */\n\n    var interactionMinConstraintProperties = {\n      matchInteraction: 'minAssociations',\n      choiceInteraction: 'minChoices',\n      orderInteraction: 'minChoices',\n      associateInteraction: 'minAssociations',\n      hottextInteraction: 'minChoices',\n      hotspotInteraction: 'minChoices',\n      graphicOrderInteraction: 'minChoices',\n      graphicAssociateInteraction: 'minAssociations',\n      selectPointInteraction: 'minChoices'\n    };\n    /**\n     * @typedef {currentItemHelper}\n     */\n\n    var currentItemHelper = {\n      /**\n       * Gets the responses declarations of the current item.\n       * @param {Object} runner - testRunner instance\n       * @returns {Object}\n       */\n      getDeclarations: function getDeclarations(runner) {\n        var itemRunner = runner.itemRunner;\n        return itemRunner._item && itemRunner._item.responses;\n      },\n\n      /**\n       * Gets a response declaration by the identifier of the response\n       * @param {Object} runner - testRunner instance\n       * @param {String} identifier - The identifier of the response\n       * @returns {Object|null}\n       */\n      getResponseDeclaration: function getResponseDeclaration(runner, identifier) {\n        var found = null;\n\n        _.forEach(currentItemHelper.getDeclarations(runner), function (declaration) {\n          var attributes = declaration.attributes || {};\n\n          if (attributes.identifier === identifier) {\n            found = declaration;\n            return false;\n          }\n        });\n\n        return found;\n      },\n\n      /**\n       * Convert a value to a response object\n       * @param {Array|String} value\n       * @param {String} baseType\n       * @param {String} cardinality\n       * @returns {Object}\n       */\n      toResponse: function toResponse(value, baseType, cardinality) {\n        var mappedCardinality = responseCardinalities[cardinality];\n        var response = {};\n\n        if (_.isString(value)) {\n          value = [value];\n        }\n\n        var transform = function transform(v) {\n          return v;\n        };\n\n        if (baseType === 'boolean') {\n          transform = function transform(v) {\n            return v === true || v === 'true';\n          };\n        } else if (baseType === 'directedPair' || baseType === 'pair') {\n          transform = function transform(v) {\n            if (_.isString(v)) {\n              return v.split(' ');\n            }\n\n            return v;\n          };\n        }\n\n        value = _.map(value || [], transform);\n\n        if (mappedCardinality) {\n          if (mappedCardinality === 'base') {\n            if (value.length === 0) {\n              //return empty response:\n              response.base = null;\n            } else {\n              response.base = {};\n              response.base[baseType] = value[0];\n            }\n          } else {\n            response[mappedCardinality] = {};\n            response[mappedCardinality][baseType] = value;\n          }\n        }\n\n        return response;\n      },\n\n      /**\n       * Checks if the provided value can be considered as null\n       * @param {Object} value\n       * @param {String} baseType\n       * @param {String} cardinality\n       * @returns {boolean}\n       */\n      isQtiValueNull: function isQtiValueNull(value, baseType, cardinality) {\n        var mappedCardinality = responseCardinalities[cardinality];\n\n        if (_.isObject(value) && value[mappedCardinality] === null) {\n          value = null;\n        }\n\n        if (_.isObject(value) && value[mappedCardinality] && 'undefined' !== typeof value[mappedCardinality][baseType]) {\n          value = value[mappedCardinality][baseType];\n        }\n\n        return null === value || 'string' === baseType && _.isEmpty(value) || cardinality !== 'single' && _.isEmpty(value);\n      },\n\n      /**\n       * Tells if an item question has been answered or not\n       * @param {Object} response\n       * @param {String} baseType\n       * @param {String} cardinality\n       * @param {Object} [defaultValue]\n       * @param {Object} constraintValue\n       * @returns {*}\n       */\n      isQuestionAnswered: function isQuestionAnswered(response, baseType, cardinality, defaultValue, constraintValue) {\n        var answered, currentCardinality, responses;\n        var fullyAnswered = true;\n        defaultValue = defaultValue || null;\n        constraintValue = constraintValue || 0;\n\n        if (currentItemHelper.isQtiValueNull(response, baseType, cardinality)) {\n          answered = false;\n        } else {\n          answered = !_.isEqual(response, currentItemHelper.toResponse(defaultValue, baseType, cardinality));\n\n          if (constraintValue !== 0) {\n            currentCardinality = responseCardinalities[cardinality];\n            responses = response[currentCardinality][baseType] || [];\n            fullyAnswered = responses && responses.length >= constraintValue;\n          }\n\n          answered = answered && fullyAnswered;\n        }\n\n        return answered;\n      },\n      guessInteractionConstraintValues: function guessInteractionConstraintValues(runner) {\n        var itemRunner = runner.itemRunner;\n        var itemBody = itemRunner._item && itemRunner._item.bdy || {};\n        var interactions = itemBody.elements || {};\n        var constraintValues = {};\n\n        _.forEach(interactions, function (interaction) {\n          var attributes = interaction.attributes || {};\n          var qtiClass = interaction.__proto__.qtiClass;\n          var constraintProperty;\n\n          if (Object.prototype.hasOwnProperty.call(interactionMinConstraintProperties, qtiClass)) {\n            constraintProperty = interactionMinConstraintProperties[qtiClass];\n            constraintValues[attributes.responseIdentifier] = attributes[constraintProperty];\n          }\n        });\n\n        return constraintValues;\n      },\n\n      /**\n       * Tells is the current item has been answered or not\n       * The item is considered answered when at least one response has been set to not empty {base : null}\n       * @param {Object} runner - testRunner instance\n       * @param {Boolean} [partially=true] - if false all questions must have been answered\n       * @returns {Boolean}\n       */\n      isAnswered: function isAnswered(runner, partially) {\n        var itemRunner = runner.itemRunner;\n        var responses = itemRunner && itemRunner.getResponses();\n        var count = 0;\n        var empty = 0;\n        var declarations, constraintValues;\n\n        if (itemRunner) {\n          declarations = currentItemHelper.getDeclarations(runner);\n          constraintValues = currentItemHelper.guessInteractionConstraintValues(runner);\n\n          _.forEach(declarations, function (declaration) {\n            var attributes = declaration.attributes || {};\n            var response = responses[attributes.identifier];\n            var baseType = attributes.baseType;\n            var cardinality = attributes.cardinality;\n            count++;\n\n            if (!currentItemHelper.isQuestionAnswered(response, baseType, cardinality, declaration.defaultValue, constraintValues[attributes.identifier])) {\n              empty++;\n            }\n          });\n        }\n\n        if (partially === false) {\n          return count > 0 && empty === 0;\n        }\n\n        return count > 0 && empty < count;\n      },\n\n      /**\n       * Gets list of shared stimuli hrefs in the current item\n       *\n       * @param {Object} runner - testRunner instance\n       * @returns {Array}\n       */\n      getStimuliHrefs: function getStimuliHrefs(runner) {\n        var itemRunner = runner.itemRunner;\n        var itemBody = itemRunner._item && itemRunner._item.bdy || {};\n        var interactions = itemBody.elements || {};\n        return _(interactions).values().filter(function (element) {\n          return element.qtiClass === 'include';\n        }).pluck('attributes').pluck('href').value();\n      },\n\n      /**\n       * Find the list of text stimulus ids in the current item\n       * Depends on the DOM already being loaded\n       * @param {Object} runner - testRunner instance\n       * @returns {Array}\n       */\n      getTextStimuliHrefs: function getTextStimuliHrefs(runner) {\n        var stimuli = this.getStimuliHrefs(runner);\n        var textStimuli;\n\n        if (stimuli.length > 0) {\n          // Filter the ones containing text:\n          textStimuli = stimuli.filter(function (stimulusHref) {\n            var domNode = document.querySelector(\".qti-include[data-href=\\\"\".concat(stimulusHref, \"\\\"]\"));\n            return _(domNode.childNodes).some(function (child) {\n              return child.nodeType === child.TEXT_NODE;\n            });\n          });\n          return textStimuli;\n        }\n\n        return [];\n      }\n    };\n\n    return currentItemHelper;\n\n});\n\n","define('taoQtiTest/runner/helpers/stats',['lodash', 'taoQtiTest/runner/helpers/map', 'taoQtiTest/runner/helpers/currentItem'], function (_, mapHelper, currentItemHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    currentItemHelper = currentItemHelper && Object.prototype.hasOwnProperty.call(currentItemHelper, 'default') ? currentItemHelper['default'] : currentItemHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    var stats = {\n      /**\n       * Return scope stats that takes into account any test taker interaction made since the item has been loaded\n       * @param {String} scope - scope to consider for calculating the stats\n       * @param {Object} runner - testRunner instance\n       * @param {Boolean} sync - flag for sync the unanswered stats in exit message and the unanswered stats in the toolbox. Default false\n       * @returns {Object} the stats\n       */\n      getInstantStats: function getInstantStats(scope, runner, sync) {\n        var map = runner.getTestMap();\n        var context = runner.getTestContext();\n        var item = runner.getCurrentItem();\n        var testPart = runner.getCurrentPart();\n\n        var stats = _.clone(mapHelper.getScopeStats(map, context.itemPosition, scope));\n\n        var options = runner.getOptions() || {};\n        var partiallyAnsweredIsAnswered;\n\n        if (options.review) {\n          partiallyAnsweredIsAnswered = options.review.partiallyAnsweredIsAnswered;\n        }\n\n        if (!item.informational) {\n          var isItemCurrentlyAnswered = currentItemHelper.isAnswered(runner, partiallyAnsweredIsAnswered);\n\n          if (!isItemCurrentlyAnswered && item.answered) {\n            stats.answered--;\n          } else if ((isItemCurrentlyAnswered || sync) && !item.answered) {\n            stats.answered++; // eslint-disable-next-line no-dupe-else-if\n          } else if (sync && !isItemCurrentlyAnswered && item.answered && testPart.isLinear) {\n            stats.answered++;\n          }\n        }\n\n        return stats;\n      }\n    };\n\n    return stats;\n\n});\n\n","define('taoQtiTest/runner/helpers/messages',['i18n', 'taoQtiTest/runner/helpers/stats', 'handlebars'], function (__, statsHelper, Handlebars) { 'use strict';\n\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    statsHelper = statsHelper && Object.prototype.hasOwnProperty.call(statsHelper, 'default') ? statsHelper['default'] : statsHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<b>\";\n      if (helper = helpers.header) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.header); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</b><br><br>\";\n      return buffer;\n      }\n\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.header), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function messageHeaderTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2021 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Completes an exit message\n     * @param {String} scope - scope to consider for calculating the stats\n     * @param {Object} runner - testRunner instance\n     * @param {String} message - custom message that will be appended to the unanswered stats count\n     * @param {Boolean} sync - flag for sync the unanswered stats in exit message and the unanswered stats in the toolbox\n     * @param {String|undefined} submitButtonLabel - point the user to the submit button\n     * @returns {String} Returns the message text\n     */\n\n    function getExitMessage(scope, runner) {\n      var message = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n      var sync = arguments.length > 3 ? arguments[3] : undefined;\n      var submitButtonLabel = arguments.length > 4 ? arguments[4] : undefined;\n      var itemsCountMessage = '';\n      var testRunnerOptions = runner.getOptions();\n      var messageEnabled = testRunnerOptions.enableUnansweredItemsWarning;\n\n      if (messageEnabled) {\n        itemsCountMessage = getUnansweredItemsWarning(scope, runner, sync).trim();\n\n        if (itemsCountMessage) {\n          itemsCountMessage += '.';\n        }\n      }\n\n      return \"\".concat(getHeader(scope)).concat(itemsCountMessage, \" \").concat(getActionMessage(scope, submitButtonLabel)).concat(message).trim();\n    }\n    /**\n     * Build message if not all items have answers\n     * @param {String} scope - scope to consider for calculating the stats\n     * @returns {String} Returns the message text\n     */\n\n\n    function getHeader(scope) {\n      var header = '';\n\n      if (scope === 'section' || scope === 'testSection') {\n        header = __('You are about to leave this section.');\n      } else if (scope === 'test' || scope === 'testWithoutInaccessibleItems') {\n        header = __('You are about to submit the test.');\n      } else if (scope === 'part') {\n        header = __('You are about to submit this test part.');\n      }\n\n      return messageHeaderTpl({\n        header: header.trim()\n      });\n    }\n    /**\n     * Generates the message to help users perform the action\n     * @param {String} scope - scope to consider for calculating the stats\n     * @param {String} [submitButtonLabel] - Pointed user perform click on given button\n     * @returns {String} Returns the message text\n     */\n\n\n    function getActionMessage(scope) {\n      var submitButtonLabel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : __('OK');\n      var msg;\n\n      switch (scope) {\n        case 'section':\n        case 'testSection':\n        case 'part':\n          return __('Click \"%s\" to continue.', submitButtonLabel).trim();\n\n        case 'test':\n        case 'testWithoutInaccessibleItems':\n          msg = __('You will not be able to access this test once submitted. Click \"%s\" to continue and submit the test.', submitButtonLabel);\n          return \"\".concat(msg);\n      }\n\n      return '';\n    }\n    /**\n     * Build message for the flagged items if any.\n     * @param {Object} stats - The stats for the current context\n     * @param {String} [message] - The existing message to complete\n     * @returns {string|*}\n     */\n\n\n    function getFlaggedItemsWarning(stats) {\n      var message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var flaggedCount = stats && stats.flagged;\n\n      if (!flaggedCount) {\n        return message;\n      }\n\n      if (message) {\n        return \"\".concat(message, \" \").concat(__('and you flagged %s item(s) that you can review now', flaggedCount.toString()));\n      }\n\n      return __('You flagged %s item(s) that you can review now', flaggedCount.toString());\n    }\n    /**\n     * Build message if not all items have answers\n     * @param {String} scope - scope to consider for calculating the stats\n     * @param {Object} runner - testRunner instance\n     * @param {Boolean} sync - flag for sync the unanswered stats in exit message and the unanswered stats in the toolbox. Default false\n     * @returns {String} Returns the message text\n     */\n\n\n    function getUnansweredItemsWarning(scope, runner, sync) {\n      var stats = statsHelper.getInstantStats(scope, runner, sync);\n      var unansweredCount = stats && stats.questions - stats.answered;\n      var flaggedCount = stats && stats.flagged;\n      var itemsCountMessage = '';\n\n      if (scope === 'section' || scope === 'testSection') {\n        itemsCountMessage = __('You answered %s of %s question(s) for this section of the test', stats.answered.toString(), stats.questions.toString());\n\n        if (flaggedCount) {\n          itemsCountMessage += \", \".concat(__('and flagged %s of them', flaggedCount.toString()));\n        }\n      } else if (scope === 'test' || scope === 'testWithoutInaccessibleItems') {\n        if (unansweredCount > 1) {\n          itemsCountMessage = __('There are %s unanswered questions', unansweredCount.toString());\n        } else if (unansweredCount === 1) {\n          itemsCountMessage = __('There is %s unanswered question', unansweredCount.toString());\n        }\n\n        if (flaggedCount) {\n          itemsCountMessage = getFlaggedItemsWarning(stats, itemsCountMessage);\n        }\n      } else if (scope === 'part') {\n        if (unansweredCount > 1) {\n          itemsCountMessage = __('There are %s unanswered questions in this part of the test', unansweredCount.toString());\n        } else if (unansweredCount === 1) {\n          itemsCountMessage = __('There is %s unanswered question in this part of the test', unansweredCount.toString());\n        }\n\n        if (flaggedCount) {\n          itemsCountMessage = getFlaggedItemsWarning(stats, itemsCountMessage);\n        }\n      }\n\n      itemsCountMessage = itemsCountMessage.trim();\n      return itemsCountMessage;\n    }\n\n    var messages = {\n      getExitMessage: getExitMessage\n    };\n\n    return messages;\n\n});\n\n","define('taoQtiTest/runner/config/states',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The possible states\n     * @author Bertrand Chevrier <bertrand@taotesting.com>\n     */\n    var states = {\n      //the test session states\n      testSession: Object.freeze({\n        initial: 0,\n        interacting: 1,\n        modalFeedback: 2,\n        suspended: 3,\n        closed: 4\n      }),\n      //the item session states\n      itemSession: Object.freeze({\n        initial: 0,\n        interacting: 1,\n        modalFeedback: 2,\n        suspended: 3,\n        closed: 4,\n        solution: 5,\n        notSelected: 255\n      })\n    };\n\n    return states;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/timer/strategy/warnSectionLeaving',['lodash', 'i18n', 'taoQtiTest/runner/helpers/messages', 'taoQtiTest/runner/helpers/navigation', 'taoQtiTest/runner/config/states', 'taoQtiTest/runner/helpers/map'], function (_, __, messages, navigationHelper, states, mapHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    messages = messages && Object.prototype.hasOwnProperty.call(messages, 'default') ? messages['default'] : messages;\n    navigationHelper = navigationHelper && Object.prototype.hasOwnProperty.call(navigationHelper, 'default') ? navigationHelper['default'] : navigationHelper;\n    states = states && Object.prototype.hasOwnProperty.call(states, 'default') ? states['default'] : states;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * The message to display when exiting\n     */\n\n    var exitMessage = __('Once you close this section, you cannot return to it or change your answers.');\n    /**\n     * Creates the strategy if it applies to the given timer\n     * @param {runner} testRunner\n     * @param {Object} timer\n     * @returns {strategy|Boolean} the strategy if applies or false\n     */\n\n\n    function warnSectionLeavingStrategy(testRunner, timer) {\n      /**\n       * Check if the movment leads to leaving an active timed section\n       * @param {String} direction - the move direction (next, previous or jump)\n       * @param {String} scope - the move scope (item, section, testPart)\n       * @param {Number} [position] - the position in case of jump\n       * @returns {Boolean}\n       */\n      var leaveTimedSection = function leaveTimedSection(direction, scope, position) {\n        var context = testRunner.getTestContext();\n        var map = testRunner.getTestMap();\n\n        if (!context.isTimeout && context.itemSessionState !== states.itemSession.closed && context.sectionId === timer.source) {\n          return navigationHelper.isLeavingSection(context, map, direction, scope, position);\n        }\n\n        return false;\n      };\n\n      if (timer && timer.scope === 'section' && timer.type === 'max') {\n        return {\n          name: 'warnSectionLeaving',\n\n          /**\n           * setUp entry point : blocks the move to display a message if needed\n           */\n          setUp: function setUp() {\n            testRunner.off('move.warntimedsection skip.warntimedsection').before('move.warntimedsection skip.warntimedsection', function (e, type, scope, position) {\n              var testContext = testRunner.getTestContext();\n              var testMap = testRunner.getTestMap();\n              var testRunnerOptions = testRunner.getOptions();\n              var timerConfig = testRunnerOptions.timer || {};\n              var itemIdentifier = testContext.itemIdentifier;\n              var isLast = navigationHelper.isLast(testMap, itemIdentifier);\n              var endTestWarning = mapHelper.hasItemCategory(testMap, itemIdentifier, 'endTestWarning', true);\n              var noExitTimedSectionWarning = mapHelper.hasItemCategory(testMap, itemIdentifier, 'noExitTimedSectionWarning', true);\n              var movePromise = new Promise(function (resolve, reject) {\n                // endTestWarning has already been displayed, so we don't repeat the warning\n                if (isLast && endTestWarning) {\n                  resolve(); // display a message if we exit a timed section\n                } else if (leaveTimedSection(type || 'next', scope, position) && !noExitTimedSectionWarning && !timerConfig.keepUpToTimeout) {\n                  var submitButtonLabel = __('Close this Section');\n\n                  testRunner.trigger('confirm.exittimed', messages.getExitMessage('section', testRunner, exitMessage, false, submitButtonLabel), resolve, reject, {\n                    buttons: {\n                      labels: {\n                        ok: submitButtonLabel,\n                        cancel: __('Review my Answers')\n                      }\n                    }\n                  });\n                } else {\n                  resolve();\n                }\n              });\n              movePromise.catch(function cancelMove() {\n                // Use `defer` to be sure the timer resume will occur after the move event is\n                // finished to be handled. Otherwise, the duration plugin will be frozen and\n                // the additional time will not be taken into account!\n                _.defer(function () {\n                  testRunner.trigger('enableitem enablenav');\n                });\n              });\n              return movePromise;\n            });\n          },\n\n          /**\n           * complete entry point : removes the listeners\n           */\n          complete: function complete() {\n            return this.tearDown();\n          },\n\n          /**\n           * tearDown entry point : removes the listeners\n           */\n          tearDown: function tearDown() {\n            testRunner.off('move.warntimedsection skip.warntimedsection');\n          }\n        };\n      }\n\n      return false;\n    }\n\n    return warnSectionLeavingStrategy;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/timer/strategy/strategyHandler',['lodash', 'taoQtiTest/runner/plugins/controls/timer/strategy/enforcedStay', 'taoQtiTest/runner/plugins/controls/timer/strategy/extraTime', 'taoQtiTest/runner/plugins/controls/timer/strategy/guidedNavigation', 'taoQtiTest/runner/plugins/controls/timer/strategy/timeout', 'taoQtiTest/runner/plugins/controls/timer/strategy/warnSectionLeaving'], function (_, extraTimeStrategy, enforcedStayStrategy, guidedNavigationStrategy, timeoutStrategy, warnSectionLeavingStrategy) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    extraTimeStrategy = extraTimeStrategy && Object.prototype.hasOwnProperty.call(extraTimeStrategy, 'default') ? extraTimeStrategy['default'] : extraTimeStrategy;\n    enforcedStayStrategy = enforcedStayStrategy && Object.prototype.hasOwnProperty.call(enforcedStayStrategy, 'default') ? enforcedStayStrategy['default'] : enforcedStayStrategy;\n    guidedNavigationStrategy = guidedNavigationStrategy && Object.prototype.hasOwnProperty.call(guidedNavigationStrategy, 'default') ? guidedNavigationStrategy['default'] : guidedNavigationStrategy;\n    timeoutStrategy = timeoutStrategy && Object.prototype.hasOwnProperty.call(timeoutStrategy, 'default') ? timeoutStrategy['default'] : timeoutStrategy;\n    warnSectionLeavingStrategy = warnSectionLeavingStrategy && Object.prototype.hasOwnProperty.call(warnSectionLeavingStrategy, 'default') ? warnSectionLeavingStrategy['default'] : warnSectionLeavingStrategy;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * The list of available strategies\n     * TODO this list could come from the configuration\n     */\n\n    var defaultAvailableStrategies = [extraTimeStrategy, enforcedStayStrategy, guidedNavigationStrategy, timeoutStrategy, warnSectionLeavingStrategy];\n    /**\n     * Get a strategyHandler object for a testRunner instance\n     * @param {runner} testRunner - the test runner instance\n     * @param {strategy[]} strategies - the list of available strategies, to override the defaults\n     * @returns {strategyHandler} the handler\n     */\n\n    function getStrategyHandler(testRunner, strategies) {\n      var strategyHandler;\n      /**\n       * To keep track of the active strategies, per timer\n       */\n\n      var actives = {};\n      /**\n       * Artifact function to apply an action to a list of strategy\n       * @param {String} timerId - the id of the timer to run the actions against\n       * @param {String} action -\n       */\n\n      var applyToStrategies = function applyToStrategies(timerId, action) {\n        var api = _.keys(strategyHandler);\n\n        if (_.isEmpty(timerId) || _.isEmpty(action) || !_.contains(api, action)) {\n          throw new TypeError('Invalid timer id or unauthorized action');\n        }\n\n        if (!_.isArray(actives[timerId])) {\n          return Promise.resolve();\n        }\n\n        return Promise.all(_.map(actives[timerId], function (strategy) {\n          if (_.isFunction(strategy[action])) {\n            return strategy[action]();\n          }\n        }));\n      };\n\n      var availableStrategies = strategies || defaultAvailableStrategies; //quick validation of the test runner\n\n      if (!testRunner || !_.isFunction(testRunner.on) || !_.isFunction(testRunner.getTestContext)) {\n        throw new TypeError('The strategy handler needs a valid test runner.');\n      }\n      /**\n       * @typedef {Object} strategyHandler\n       */\n\n\n      strategyHandler = {\n        /**\n         * Try to set up strategies for the given timer\n         * @param {Object} timer\n         * @returns {Promise} resolves once the set up is done\n         */\n        setUp: function setUp(timer) {\n          _.forEach(availableStrategies, function (availableStrategy) {\n            var strategy = availableStrategy(testRunner, timer);\n\n            if (strategy !== false) {\n              actives[timer.id] = actives[timer.id] || [];\n              actives[timer.id].push(strategy);\n            }\n          });\n\n          return applyToStrategies(timer.id, 'setUp');\n        },\n\n        /**\n         * Get the actives strategies for the given timer\n         * @returns {strategy[]} the actives strategies\n         */\n        getActives: function getActives(timer) {\n          if (timer && timer.id && _.isArray(actives[timer.id])) {\n            return actives[timer.id];\n          }\n\n          return [];\n        },\n\n        /**\n         * Call the timer's strategies \"start\"\n         * @param {Object} timer\n         * @returns {Promise}\n         */\n        start: function start(timer) {\n          return applyToStrategies(timer.id, 'start');\n        },\n\n        /**\n         * Call the timer's strategies \"stop\"\n         * @param {Object} timer\n         * @returns {Promise}\n         */\n        stop: function stop(timer) {\n          return applyToStrategies(timer.id, 'stop');\n        },\n\n        /**\n         * Call the timer's strategies \"complete\"\n         * @param {Object} timer\n         * @returns {Promise}\n         */\n        complete: function complete(timer) {\n          return applyToStrategies(timer.id, 'complete');\n        },\n\n        /**\n         * Call the timer's strategies \"tearDown\"\n         * will also un-reference the strategies\n         * @param {Object} timer\n         * @returns {Promise}\n         */\n        tearDown: function tearDown(timer) {\n          return applyToStrategies(timer.id, 'tearDown').then(function () {\n            actives = _.omit(actives, timer.id);\n          });\n        }\n      };\n      return strategyHandler;\n    }\n\n    return getStrategyHandler;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/timer/timers',['lodash', 'i18n', 'moment', 'core/format', 'core/logger'], function (_, __, moment, format, loggerFactory) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    moment = moment && Object.prototype.hasOwnProperty.call(moment, 'default') ? moment['default'] : moment;\n    format = format && Object.prototype.hasOwnProperty.call(format, 'default') ? format['default'] : format;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n     */\n    var logger = loggerFactory('taoQtiTest/runner/plugins/controls/timer/timers');\n    /**\n     * We receive values in seconds, so we convert them to milliseconds\n     */\n\n    var precision = 1000;\n    /**\n     * The timer's scope\n     */\n\n    var scopes = ['item', 'section', 'testPart', 'test'];\n    /**\n     * Map qti class names to scopes\n     */\n\n    var scopeMapping = {\n      assessmentTest: 'test',\n      assessmentSection: 'section',\n      assessmentItemRef: 'item'\n    };\n    /**\n     * helps you get the scope from a scope or qti class name\n     * @param {String} value - scope or qti class name\n     * @returns {String?} the scope\n     */\n\n    var getScope = function getScope(value) {\n      if (scopeMapping[value]) {\n        return scopeMapping[value];\n      }\n\n      if (_.contains(scopes, value)) {\n        return value;\n      }\n\n      return null;\n    };\n    /**\n     * The text of warning messages\n     * TODO add warning messages for other timers types\n     */\n\n\n    var warningMessages = {\n      item: __('Warning – You have %s remaining to complete this item.'),\n      section: __('Warning – You have %s remaining to complete this section.'),\n      testPart: __('Warning – You have %s remaining to complete this test part.'),\n      test: __('Warning – You have %s remaining to complete this test.')\n    };\n    /**\n     * The text of warning messages for screenreader\n     */\n\n    var warningMessagesForScreenraeder = {\n      item: __('You have %s remaining to complete the current item.'),\n      section: __('You have %s left to answer remaining %s questions.'),\n      testPart: __('You have %s left to answer remaining %s questions.'),\n      test: __('You have %s left to answer remaining %s questions.')\n    };\n    /**\n     * Get the timers objects from the time constraints andt the given config\n     * @param {Object[]} timeConstraints - as defined in the testContext\n     * @param {Boolean} isLinear - is the current navigation mode linear\n     * @param {Object} [config] - timers config\n     * @param {Object[]} [config.warnings] - the warnings to apply to the timers (max only for now)\n     * @param {Object[]} [config.warnings] - the warnings to apply to the timers (max only for now)\n     * @returns {timer[]} the timers\n     */\n\n    function getTimers(timeConstraints, isLinear, config) {\n      var timers = {};\n      /**\n       * The warnings comes in a weird format (ie. {scope:{threshold:level}}) , so we reformat them\n       */\n\n      var constraintsWarnings = _.reduce(config.warnings, function (acc, warnings, qtiScope) {\n        var scope = getScope(qtiScope);\n        acc[scope] = _.map(warnings, function (value, key) {\n          return {\n            threshold: parseInt(key, 10) * precision,\n            message: function applyMessage(remainingTime) {\n              var displayRemaining = moment.duration(remainingTime / precision, 'seconds').humanize();\n              return format(warningMessages[scope], displayRemaining);\n            },\n            level: value,\n            shown: false\n          };\n        });\n        return acc;\n      }, {});\n      /**\n       * The warnings comes in a weird format (ie. {scope:[threshold, ...]}) , so we reformat them\n       */\n\n\n      var constraintsWarningsForScreenreader = _.reduce(config.warningsForScreenreader, function (acc, warnings, qtiScope) {\n        var scope = getScope(qtiScope);\n        acc[scope] = _.map(warnings, function (value) {\n          return {\n            threshold: parseInt(value, 10) * precision,\n            message: function applyMessage(remainingTime, unansweredQuestions) {\n              var displayRemaining = moment.duration(remainingTime / precision, 'seconds').humanize();\n              return format(warningMessagesForScreenraeder[scope], displayRemaining, unansweredQuestions);\n            },\n            scope: scope,\n            shown: false\n          };\n        });\n        return acc;\n      }, {});\n      /**\n       * Build a timer of a given type from a time constraints\n       * @param {String} type - min, max, locked\n       * @param {Object} constraintData\n       * @returns {timer} timer\n       */\n\n\n      var buildTimer = function buildTimer(type, constraintData) {\n        /**\n         * @typedef {Object} timer\n         * @property {String} id - identify the timer (for max, it's the source for backward compat)\n         * @property {String} type - min, max or locked\n         * @property {String} label - the title to display\n         * @property {String} scope - the timer's scope (item, section, etc.)\n         * @property {String} qtiClassName - the QTI class of the timers applies to\n         * @property {String} source - the ID of the element the timers belongs to\n         * @property {Number} extraTime - additional time data, object\n         * @property {Number} originalTime - the starting value of the timer, never changes, in ms.\n         * @property {Number} remainingTime - current value, in ms.\n         * @property {Number} remainingWithoutExtraTime - remaining time without extra time, in ms.\n         * @property {Number} total - total time (original time + extra time), in ms.\n         */\n        var timer = _.pick(constraintData, ['label', 'scope', 'source', 'extraTime', 'qtiClassName']);\n\n        timer.type = type;\n        timer.allowLateSubmission = constraintData.allowLateSubmission;\n\n        if (type === 'min') {\n          timer.id = \"\".concat(type, \"-\").concat(constraintData.scope, \"-\").concat(constraintData.source);\n          timer.originalTime = constraintData.minTime * precision;\n          timer.remainingTime = constraintData.minTimeRemaining * precision;\n        } else {\n          timer.id = constraintData.source;\n          timer.originalTime = constraintData.maxTime * precision;\n          timer.remainingTime = constraintData.maxTimeRemaining * precision;\n        }\n\n        timer.remainingWithoutExtraTime = timer.remainingTime;\n\n        if (timer.extraTime) {\n          timer.extraTime.consumed = timer.extraTime.consumed * precision;\n          timer.extraTime.remaining = timer.extraTime.remaining * precision;\n          timer.extraTime.total = timer.extraTime.total * precision;\n          timer.total = timer.originalTime + timer.extraTime.total;\n          timer.remainingTime += timer.extraTime.remaining;\n        } //TODO supports warnings for other types\n\n\n        if (type === 'max' && _.isArray(constraintsWarnings[timer.scope])) {\n          timer.warnings = constraintsWarnings[timer.scope];\n        }\n\n        if (_.isArray(constraintsWarningsForScreenreader[timer.scope])) {\n          timer.warningsForScreenreader = constraintsWarningsForScreenreader[timer.scope];\n        }\n\n        var stats = config.questionsStats[timer.scope];\n        timer.unansweredQuestions = stats && stats.questions - stats.answered;\n        return timer;\n      };\n\n      _.forEach(timeConstraints, function (timeConstraint) {\n        var constraintData = _.clone(timeConstraint);\n\n        var newTimer;\n        constraintData.scope = getScope(timeConstraint.scope || timeConstraint.qtiClassName);\n\n        if (!constraintData.scope) {\n          logger.warn('Wrong data, a time constraint should apply to a valid scope, skipping');\n        } else if (constraintData.minTime === false && constraintData.maxTime === false) {\n          logger.warn('Time constraint defined with no time, skipping'); // minTime = maxTime -> one locked timer\n        } else if (config.guidedNavigation && isLinear && constraintData.maxTime && constraintData.minTime && constraintData.minTime === constraintData.maxTime && constraintData.maxTime > 0) {\n          newTimer = buildTimer('locked', constraintData);\n          timers[newTimer.id] = newTimer;\n        } else {\n          //minTime -> min timer\n          if (isLinear && constraintData.minTime && constraintData.minTime > 0) {\n            newTimer = buildTimer('min', constraintData);\n            timers[newTimer.id] = newTimer;\n          } //maxTime -> max timer\n\n\n          if (constraintData.maxTime && constraintData.maxTime > 0) {\n            newTimer = buildTimer('max', constraintData);\n            timers[newTimer.id] = newTimer;\n          }\n        }\n      });\n\n      logger.debug('Timers built from timeConstraints', timers);\n      return timers;\n    }\n\n    return getTimers;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/timer/plugin',['jquery', 'lodash', 'taoTests/runner/plugin', 'taoQtiTest/runner/plugins/controls/timer/strategy/strategyHandler', 'taoQtiTest/runner/plugins/controls/timer/component/timerbox', 'taoQtiTest/runner/plugins/controls/timer/timers', 'taoQtiTest/runner/helpers/isReviewPanelEnabled', 'taoQtiTest/runner/helpers/stats', 'handlebars'], function ($$1, _, pluginFactory, getStrategyHandler, timerboxFactory, timersFactory, isReviewPanelEnabled, statsHelper, Handlebars) { 'use strict';\n\n  $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n  _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n  pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n  getStrategyHandler = getStrategyHandler && Object.prototype.hasOwnProperty.call(getStrategyHandler, 'default') ? getStrategyHandler['default'] : getStrategyHandler;\n  timerboxFactory = timerboxFactory && Object.prototype.hasOwnProperty.call(timerboxFactory, 'default') ? timerboxFactory['default'] : timerboxFactory;\n  timersFactory = timersFactory && Object.prototype.hasOwnProperty.call(timersFactory, 'default') ? timersFactory['default'] : timersFactory;\n  isReviewPanelEnabled = isReviewPanelEnabled && Object.prototype.hasOwnProperty.call(isReviewPanelEnabled, 'default') ? isReviewPanelEnabled['default'] : isReviewPanelEnabled;\n  statsHelper = statsHelper && Object.prototype.hasOwnProperty.call(statsHelper, 'default') ? statsHelper['default'] : statsHelper;\n  Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n    return \"<div aria-live=\\\"polite\\\" class=\\\"visible-hidden\\\"></div>\\n\";\n    });\n  function screenreaderNotificationTpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  var screenreaderNotificationTimeout = 20000;\n  /**\n   * Creates the plugin\n   */\n\n  var plugin = pluginFactory({\n    name: 'timer',\n\n    /**\n     * Install step, add behavior before the lifecycle\n     */\n    install: function install() {\n      var testRunner = this.getTestRunner();\n      /**\n       * Load the timers, from the given timeConstraints and reading the current value in the store\n       * @param {store} timeStore - where the values are read\n       * @param {Object} config - the current config, especially for the warnings\n       * @returns {Promise<Object[]>} the list of timers for the current context\n       */\n\n      this.loadTimers = function loadTimers(timeStore, config) {\n        var testContext = testRunner.getTestContext();\n        var testPart = testRunner.getCurrentPart();\n        var isLinear = testPart && testPart.isLinear;\n        var timeConstraints = testContext.timeConstraints;\n        var timers = timersFactory(timeConstraints, isLinear, config);\n        return Promise.all(_.map(timers, function (timer) {\n          return timeStore.getItem(\"consumed_\".concat(timer.id)).then(function (savedConsumedTime) {\n            if (_.isNumber(savedConsumedTime) && savedConsumedTime >= 0 && config.restoreTimerFromClient) {\n              timer.remainingTime = timer.originalTime + timer.extraTime.total - savedConsumedTime;\n            }\n          });\n        })).then(function () {\n          return timers;\n        });\n      };\n      /**\n       * Save consumed time values into the store\n       * @param {store} timeStore - where the values are saved\n       * @param {Object[]} timers - the timers to save\n       * @returns {Promise} resolves once saved\n       */\n\n\n      this.saveTimers = function saveTimers(timeStore, timers) {\n        return Promise.all(_.map(timers, function (timer) {\n          return timeStore.setItem(\"consumed_\".concat(timer.id), timer.originalTime + timer.extraTime.total - timer.remainingTime);\n        }));\n      }; //define the \"timer\" store as \"volatile\" (removed on browser change).\n\n\n      testRunner.getTestStore().setVolatile(this.getName());\n    },\n\n    /**\n     * Initializes the plugin (called during runner's init)\n     *\n     * @returns {Promise}\n     */\n    init: function init() {\n      var self = this;\n      var testRunner = this.getTestRunner();\n      var testRunnerOptions = testRunner.getOptions();\n      var screenreaderNotifcationTimeoutId;\n      var stats = {};\n      ['test', 'testPart', 'section', 'item'].forEach(function (scope) {\n        return Object.assign(stats, _defineProperty({}, scope, statsHelper.getInstantStats(scope, testRunner)));\n      });\n      /**\n       * Plugin config,\n       */\n\n      var config = Object.assign({\n        /**\n         * An option to control is the warnings are contextual or global\n         */\n        contextualWarnings: false,\n\n        /**\n         * The list of configured warnings\n         */\n        warnings: testRunnerOptions.timerWarning || {},\n\n        /**\n         * The list of configured warnings for screenreaders\n         */\n        warningsForScreenreader: testRunnerOptions.timerWarningForScreenreader || {},\n\n        /**\n         * The guided navigation option\n         */\n        guidedNavigation: testRunnerOptions.guidedNavigation,\n\n        /**\n         * Restore timer from client.\n         */\n        restoreTimerFromClient: testRunnerOptions.timer && testRunnerOptions.timer.restoreTimerFromClient,\n\n        /**\n         * Questions stats\n         */\n        questionsStats: stats\n      }, this.getConfig());\n      /**\n       * Set up the strategy handler\n       */\n\n      var strategyHandler = getStrategyHandler(testRunner);\n      /**\n       * dispatch errors to the test runner\n       * @param {Error} err - to dispatch\n       */\n\n      var handleError = function handleError(err) {\n        testRunner.trigger('error', err);\n      };\n\n      function loadSavedTimers(timeStore) {\n        var testContext = testRunner.getTestContext(); //update the timers before each item\n\n        if (self.timerbox && testContext.timeConstraints) {\n          return self.loadTimers(timeStore, config).then(function (timers) {\n            return self.timerbox.update(timers);\n          }).catch(handleError);\n        }\n      }\n\n      return new Promise(function (resolve) {\n        //load the plugin store\n        return testRunner.getPluginStore(self.getName()).then(function (timeStore) {\n          testRunner.before('renderitem', function () {\n            return loadSavedTimers(timeStore);\n          }).before('enableitem', function () {\n            if (config.restoreTimerFromClient) {\n              return loadSavedTimers(timeStore);\n            }\n          }).on('tick', function (elapsed) {\n            if (self.timerbox) {\n              var timers = self.timerbox.getTimers();\n              var updatedTimers = Object.keys(timers).reduce(function (acc, timerName) {\n                var statsScope = statsHelper.getInstantStats(timers[timerName].scope, testRunner);\n                var unansweredQuestions = statsScope && statsScope.questions - statsScope.answered;\n                acc[timerName] = Object.assign({}, timers[timerName], {\n                  remainingTime: timers[timerName].remainingTime - elapsed,\n                  unansweredQuestions: unansweredQuestions\n                });\n                return acc;\n              }, {});\n              self.timerbox.update(updatedTimers).catch(handleError);\n            }\n          }).after('renderitem', function () {\n            if (self.timerbox) {\n              $$1(self.timerbox.getElement()).find('.timer-wrapper').attr('aria-hidden', isReviewPanelEnabled(testRunner));\n              self.timerbox.start();\n            }\n\n            self.$screenreaderWarningContainer.text('');\n          }).after('enableitem', function () {\n            if (self.timerbox && config.restoreTimerFromClient) {\n              //this will \"resume\" the countdowns if timers have client mode\n              self.timerbox.start();\n            }\n          }).on('move skip', function () {\n            if (self.timerbox) {\n              //this will \"pause\" the countdowns\n              self.timerbox.stop();\n            }\n          }).on('disableitem', function () {\n            if (self.timerbox && config.restoreTimerFromClient) {\n              //this will \"pause\" the countdowns if timers have client mode\n              self.timerbox.stop();\n            }\n          });\n          timeStore.getItem('zen-mode').then(function (startZen) {\n            //set up the timerbox\n            self.timerbox = timerboxFactory({\n              ariaHidden: isReviewPanelEnabled(testRunner),\n              zenMode: {\n                enabled: true,\n                startHidden: !!startZen\n              },\n              displayWarning: config.contextualWarnings\n            }).on('change', _.throttle(function () {\n              //update the store with the current timer values\n              self.saveTimers(timeStore, this.getTimers());\n            }, 1000)).on('timeradd', function (timer) {\n              strategyHandler.setUp(timer).catch(handleError);\n            }).on('timerremove', function (timer) {\n              strategyHandler.tearDown(timer).catch(handleError);\n            }).on('timerstart', function (timer) {\n              strategyHandler.start(timer).catch(handleError);\n            }).on('timerstop', function (timer) {\n              strategyHandler.stop(timer).catch(handleError);\n            }).on('timerend', function (timer) {\n              strategyHandler.complete(timer).catch(handleError);\n            }).on('timerchange', function (action, timer) {\n              //backward compatible events\n              self.trigger(\"\".concat(action, \"timer\"), timer.qtiClassName, timer);\n            }).on('zenchange', function (isZen) {\n              timeStore.setItem('zen-mode', !!isZen);\n            }).on('init', resolve).on('error', handleError); // share this timer values to use in other components\n\n            self.timerbox.spread(testRunner, 'timertick');\n\n            if (!config.contextualWarnings) {\n              self.timerbox.on('warn', function (message, level) {\n                if (level && message) {\n                  testRunner.trigger(level, message);\n                }\n              }); // debounce used to prevent multiple invoking at the same time\n\n              self.timerbox.on('warnscreenreader', _.debounce(function (message, remainingTime, scope) {\n                var statsScope = statsHelper.getInstantStats(scope, testRunner);\n                var unansweredQuestions = statsScope && statsScope.questions - statsScope.answered;\n\n                if (screenreaderNotifcationTimeoutId) {\n                  clearTimeout(screenreaderNotifcationTimeoutId);\n                }\n\n                self.$screenreaderWarningContainer.text(message(remainingTime, unansweredQuestions));\n                screenreaderNotifcationTimeoutId = setTimeout(function () {\n                  return self.$screenreaderWarningContainer.text('');\n                }, screenreaderNotificationTimeout);\n              }, 1000, {\n                'leading': true,\n                'trailing': false\n              }));\n            }\n          }).catch(handleError);\n        });\n      });\n    },\n\n    /**\n     * Called during the runner's render phase\n     */\n    render: function render() {\n      var $container = this.getAreaBroker().getControlArea();\n      this.$screenreaderWarningContainer = $$1(screenreaderNotificationTpl());\n      this.timerbox.render($container);\n      $container.append(this.$screenreaderWarningContainer);\n    },\n\n    /**\n     * Called during the runner's destroy phase\n     */\n    destroy: function destroy() {\n      if (this.timerbox) {\n        this.timerbox.stop().destroy();\n      }\n    },\n\n    /**\n     * Shows the timers\n     */\n    show: function show() {\n      if (this.timerbox) {\n        this.timerbox.show();\n      }\n    },\n\n    /**\n     * Hides the timers\n     */\n    hide: function hide() {\n      if (this.timerbox) {\n        this.timerbox.hide();\n      }\n    }\n  });\n\n  return plugin;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/title/title',['jquery', 'lodash', 'taoTests/runner/plugin', 'handlebars', 'taoQtiTest/runner/helpers/map', 'taoQtiTest/runner/helpers/getTimerMessage', 'moment', 'taoQtiTest/runner/helpers/stats'], function ($$1, _, pluginFactory, Handlebars, mapHelper, getTimerMessage, moment, statsHelper) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    getTimerMessage = getTimerMessage && Object.prototype.hasOwnProperty.call(getTimerMessage, 'default') ? getTimerMessage['default'] : getTimerMessage;\n    moment = moment && Object.prototype.hasOwnProperty.call(moment, 'default') ? moment['default'] : moment;\n    statsHelper = statsHelper && Object.prototype.hasOwnProperty.call(statsHelper, 'default') ? statsHelper['default'] : statsHelper;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n        <span data-control=\\\"\";\n      if (helper = helpers.attribute) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.attribute); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" class=\\\"qti-controls \";\n      if (helper = helpers.className) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.className); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"></span>\\n        <div data-control=\\\"\";\n      if (helper = helpers.attribute) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.attribute); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"-timer\\\" class=\\\"visible-hidden\\\"></div>\\n    \";\n      return buffer;\n      }\n\n      buffer += \"<div role=\\\"heading\\\" aria-level=\\\"1\\\" class=\\\"title-box truncate\\\">\\n    \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.titles), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</div>\\n\";\n      return buffer;\n      });\n    function titleTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n    var precision = 1000;\n    var title = pluginFactory({\n      name: 'title',\n      init: function init() {\n        var _this = this;\n\n        var testRunner = this.getTestRunner();\n        var testMap = testRunner.getTestMap();\n\n        var updateTitles = function updateTitles() {\n          var testContext = testRunner.getTestContext();\n          var currentPart = mapHelper.getItemPart(testMap, testContext.itemPosition);\n          var currentItem = mapHelper.getItem(testMap, testContext.itemIdentifier); // update test title\n\n          if (testMap.title) {\n            _this.titles.test.$title.text(testMap.title).show();\n          } // update part title\n\n\n          if (currentPart && currentPart.label) {\n            _this.titles.testPart.$title.text(\" - \".concat(currentPart.label)).show();\n          } // update section title\n          //@deprecated the following block seems to\n          //be very specific and need to be reworked\n\n\n          if (testContext.isDeepestSectionVisible) {\n            var section = mapHelper.getItemSection(testMap, testContext.itemPosition); //testContext.sectionTitle is kept only for backward compat\n\n            _this.titles.section.$title.text(\" - \".concat(section.label || testContext.sectionTitle)).show();\n          } // update item title\n\n\n          if (currentItem.label) {\n            _this.titles.item.$title.text(\" - \".concat(currentItem.label)).show();\n          }\n        };\n\n        testRunner.after('renderitem', function () {\n          _.forOwn(_this.titles, function (options, scope) {\n            _this.titles[scope].$title.text('');\n\n            _this.titles[scope].$timer.text('');\n\n            if (scope !== 'item') {\n              _this.titles[scope].stats = statsHelper.getInstantStats(scope, testRunner);\n            }\n          });\n\n          updateTitles();\n        }).on('timertick', function (remainingTime, scope) {\n          var title = _this.titles[scope];\n\n          if (!title) {\n            return;\n          }\n\n          var _this$titles$scope = _this.titles[scope],\n              $timer = _this$titles$scope.$timer,\n              stats = _this$titles$scope.stats;\n          var time = moment.duration(remainingTime / precision, 'seconds');\n          var hours = time.get('hours');\n          var minutes = time.get('minutes');\n          var seconds = time.get('seconds');\n          var unansweredQuestions = stats && stats.questions - stats.answered; // check if notification should be updated\n\n          if ($timer) {\n            $timer.text(getTimerMessage(hours, minutes, seconds, unansweredQuestions));\n          }\n        }).on('unloaditem', function () {\n          $$1('.qti-controls', _this.$element).hide();\n        });\n      },\n      render: function render() {\n        var _this2 = this;\n\n        var $container = this.getAreaBroker().getControlArea();\n        this.titles = {\n          test: {\n            attribute: 'qti-test-title',\n            className: ''\n          },\n          testPart: {\n            attribute: 'qti-test-part-title',\n            className: 'visible-hidden'\n          },\n          section: {\n            attribute: 'qti-test-position',\n            className: ''\n          },\n          item: {\n            attribute: 'qti-test-item-title',\n            className: 'visible-hidden'\n          }\n        };\n        this.$element = $$1(titleTpl({\n          titles: _.values(this.titles)\n        })); // hide titles by default\n\n        $$1('.qti-controls', this.$element).hide();\n        $container.append(this.$element);\n\n        _.forOwn(this.titles, function (_ref, scope) {\n          var attribute = _ref.attribute;\n          _this2.titles[scope].$title = $container.find(\"[data-control=\\\"\".concat(attribute, \"\\\"]\"));\n          _this2.titles[scope].$timer = $container.find(\"[data-control=\\\"\".concat(attribute, \"-timer\\\"]\"));\n        });\n      }\n    });\n\n    return title;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/trace/itemTraceVariables',['lodash', 'moment', 'taoTests/runner/plugin'], function (_, moment, pluginFactory) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    moment = moment && Object.prototype.hasOwnProperty.call(moment, 'default') ? moment['default'] : moment;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Duration of a second in the timer's base unit\n     * @type {Number}\n     */\n\n    var precision = 1000;\n    /**\n     * Gets the current timestamp\n     * @returns {Number}\n     */\n\n    function timestamp() {\n      return Date.now() / precision;\n    }\n    /**\n     * Creates the timer plugin\n     */\n\n\n    var itemTraceVariables = pluginFactory({\n      name: 'itemTraceVariables',\n\n      /**\n       * Install step, add behavior before the lifecycle.\n       */\n      install: function install() {\n        //define the \"trace\" store as \"volatile\" (removed on browser change).\n        // the store name is \"trace\" for backward compatibility,\n        // best practice is to use the plugin name\n        this.getTestRunner().getTestStore().setVolatile('trace');\n      },\n\n      /**\n       * Initializes the plugin (called during runner's init)\n       */\n      init: function init() {\n        var testRunner = this.getTestRunner();\n        var variables = {};\n\n        function onError(err) {\n          testRunner.trigger('error', err);\n        }\n\n        return testRunner.getPluginStore('trace').then(function (tracesStore) {\n          testRunner.after('renderitem enableitem', function () {\n            var context = testRunner.getTestContext();\n            variables = {\n              ITEM_START_TIME_CLIENT: timestamp()\n            };\n            tracesStore.getItem(context.itemIdentifier).then(function (data) {\n              if (data) {\n                _.merge(variables, data);\n              }\n\n              return tracesStore.setItem(context.itemIdentifier, variables);\n            }).catch(onError);\n          }).before('move skip exit timeout', function () {\n            var context = testRunner.getTestContext();\n            variables.ITEM_END_TIME_CLIENT = timestamp();\n            variables.ITEM_TIMEZONE = moment().utcOffset(moment().utcOffset()).format('Z');\n            return tracesStore.setItem(context.itemIdentifier, variables).catch(onError);\n          }).before('unloaditem', function () {\n            var context = testRunner.getTestContext();\n            return testRunner.getProxy().callItemAction(context.itemIdentifier, 'storeTraceData', {\n              traceData: JSON.stringify(variables)\n            }, true);\n          });\n        });\n      }\n    });\n\n    return itemTraceVariables;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/allowSkipping',['lodash', 'i18n', 'taoTests/runner/plugin', 'taoQtiTest/runner/helpers/currentItem'], function (_, __, pluginFactory, currentItemHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    currentItemHelper = currentItemHelper && Object.prototype.hasOwnProperty.call(currentItemHelper, 'default') ? currentItemHelper['default'] : currentItemHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Default plugin options\n     * @type {Object}\n     */\n\n    var defaults = {\n      allowPartial: true // whether all interactions must be answered to count an item as answered\n\n    };\n    /**\n     * Plugin factory\n     * @returns {Object}\n     */\n\n    var allowSkipping = pluginFactory({\n      /**\n       * Plugin name\n       * @type {String}\n       */\n      name: 'allowSkipping',\n\n      /**\n       * Initialize plugin (called during runner's initialization)\n       * @returns {this}\n       */\n      init: function init() {\n        var testRunner = this.getTestRunner();\n        var testRunnerOptions = testRunner.getOptions();\n        var pluginConfig = Object.assign({}, defaults, this.getConfig());\n        testRunner.before('nav-next move', function () {\n          var testContext = testRunner.getTestContext();\n          var isInteracting = !testRunner.getItemState(testContext.itemIdentifier, 'disabled');\n          var warning = pluginConfig.allowPartial ? __('A response to this item is required.') : __('A response to every question in this item is required.');\n\n          if (isInteracting && testRunnerOptions.enableAllowSkipping) {\n            var currenItem = testRunner.getCurrentItem(); //@deprecated use allowSkipping from testMap instead of the testContext\n\n            var allowSkipping = typeof currenItem.allowSkipping === 'boolean' ? currenItem.allowSkipping : testContext.allowSkipping;\n\n            if (!allowSkipping) {\n              return new Promise(function (resolve, reject) {\n                if (_.size(currentItemHelper.getDeclarations(testRunner)) === 0) {\n                  return resolve();\n                }\n\n                if (currentItemHelper.isAnswered(testRunner, pluginConfig.allowPartial)) {\n                  return resolve();\n                }\n\n                if (!testRunner.getState('alerted.notallowed')) {\n                  // Only show one alert for itemSessionControl\n                  testRunner.setState('alerted.notallowed', true);\n                  testRunner.trigger('alert.notallowed', warning, function () {\n                    testRunner.trigger('resumeitem');\n                    reject();\n                    testRunner.setState('alerted.notallowed', false);\n                  });\n                }\n              });\n            }\n          }\n        });\n      }\n    });\n\n    return allowSkipping;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/next/nextWarningHelper',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * This is a helper for navigation plugins. It decides if a warning should be displayed\n     * before actually moving to the next item\n     *\n     * @author Christophe Noël <christophe@taotesting.com>\n     */\n\n    /**\n     * Convert a value to a boolean\n     * @param {*} value\n     * @param {Boolean} defaultValue\n     * @returns {Boolean}\n     */\n    var toBoolean = function toBoolean(value, defaultValue) {\n      if (typeof value === 'undefined') {\n        return defaultValue;\n      } else {\n        return value === true || value === 'true';\n      }\n    };\n    /**\n     * @param {Object} options\n     * @param {Boolean} options.endTestWarning - enables the end test warning, when applicable\n     * @param {Boolean} options.isLast - if the item is the last of the test\n     * @param {Boolean} options.isLinear - if the current part is linear\n     * @param {Boolean} options.nextItemWarning - enables the next item warning, when applicable\n     * @param {Boolean} options.nextPartWarning - enables the next item warning on part change\n     * @param {Boolean} options.stats - current state of the test\n     * @param {Object} options.nextPart - description of the next part of the test\n     * @param {Number} options.remainingAttempts - remaining attempts for the current item\n     * @param {String} options.testPartId - current test part identifier\n     * @param {Boolean} options.unansweredOnly - warn only if there are unanswered/flagged items\n     * @returns {Object}\n     */\n\n\n    var nextWarningHelper = function nextWarningHelper(options) {\n      var endTestWarning = toBoolean(options.endTestWarning, false),\n          isLast = toBoolean(options.isLast, false),\n          isLinear = toBoolean(options.isLinear, false),\n          nextItemWarning = toBoolean(options.nextItemWarning, false),\n          nextPartWarning = toBoolean(options.nextPartWarning, false),\n          stats = options.stats,\n          nextPart = options.nextPart || {},\n          remainingAttempts = typeof options.remainingAttempts === 'undefined' ? -1 : options.remainingAttempts,\n          testPartId = options.testPartId || '',\n          unansweredOnly = toBoolean(options.unansweredOnly, false),\n          warnBeforeNext = shouldWarnBeforeNext(),\n          warnBeforeEnd = shouldWarnBeforeEnd(),\n          warnBeforeEndPart = shouldWarnBeforeEndPart();\n      /**\n       * Decide if we should display a warning before moving to the next item.\n       * This is useful to prevent accidental navigation (for example by pressing a shortcut) that would occur\n       * before the test taker actually gets a chance to answer an item\n       */\n\n      function shouldWarnBeforeNext() {\n        return nextItemWarning && !itemCanBeTriedAtWill(); //&& !exitTimedSectionWarning(); //todo: this should be implemented to prevent a double warning!\n      }\n      /**\n       * We try to decide if the test taker has the freedom to come back to this item as many times as he wants\n       */\n\n\n      function itemCanBeTriedAtWill() {\n        return isLast === false && // the test is not over\n        isLinear === false && // the context is not linear\n        remainingAttempts === -1 && // the item doesn't have a configured max attempts number\n        !isNextItemInLinearPart() // the next item is not in a linear part\n        ;\n      }\n      /**\n       * Check if the next item is in a linear part, as this would prevent the test taker to come back to the current item\n       */\n\n\n      function isNextItemInLinearPart() {\n        return nextPart && typeof nextPart.isLinear !== 'undefined' && isLastOfPart() && nextPart.isLinear === true;\n      }\n      /**\n       * Decide if we should display a warning before ending the test\n       */\n\n\n      function shouldWarnBeforeEnd() {\n        return shouldWarnOnTestEnd();\n      }\n      /**\n       * Decide if we should display a warning before ending the test part\n       */\n\n\n      function shouldWarnBeforeEndPart() {\n        return shouldWarnOnPartChange();\n      }\n      /**\n       * Are we on the last test item?\n       * @returns {Boolean}\n       */\n\n\n      function shouldWarnOnTestEnd() {\n        return isLast && (endTestWarning || // warning is explicitly required by endTestWarning category\n        warnBeforeNext) && // warning is implicitly triggered by the next item warning being true (prevent double warning)\n        shouldWarnForUnansweredItems();\n      }\n      /**\n       * Provide the opportunity to cancel the display of the warning if there are no unanswered/flagged item\n       * for this to work, the unansweredOnly option has to be set\n       * @returns {Boolean}\n       */\n\n\n      function shouldWarnForUnansweredItems() {\n        var hasUnanswered = stats && stats.questions - stats.answered !== 0,\n            hasFlagged = stats && stats.flagged !== 0;\n\n        if (unansweredOnly) {\n          return hasUnanswered || hasFlagged;\n        } else {\n          return true;\n        }\n      }\n      /**\n       * Are we on the last part item?\n       * @returns {Boolean}\n       */\n\n\n      function shouldWarnOnPartChange() {\n        return nextPartWarning && isLastOfPart() && shouldWarnForUnansweredItems();\n      }\n      /**\n       * Check if the next item belong to a different part\n       * @returns {Boolean}\n       */\n\n\n      function isLastOfPart() {\n        return nextPart && nextPart.id && testPartId !== nextPart.id;\n      }\n      /**\n       * The helper object\n       */\n\n\n      return {\n        shouldWarnBeforeEndPart: function shouldWarnBeforeEndPart() {\n          return warnBeforeEndPart;\n        },\n        shouldWarnBeforeEnd: function shouldWarnBeforeEnd() {\n          return warnBeforeEnd;\n        },\n        shouldWarnBeforeNext: function shouldWarnBeforeNext() {\n          return warnBeforeNext;\n        }\n      };\n    };\n\n    return nextWarningHelper;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/next',['jquery', 'i18n', 'ui/hider', 'taoTests/runner/plugin', 'taoQtiTest/runner/plugins/navigation/next/nextWarningHelper', 'taoQtiTest/runner/helpers/messages', 'taoQtiTest/runner/helpers/map', 'taoQtiTest/runner/helpers/navigation', 'taoQtiTest/runner/helpers/stats', 'util/shortcut', 'util/namespace', 'handlebars'], function ($$1, __, hider, pluginFactory, nextWarningHelper, messages, mapHelper, navigationHelper, statsHelper, shortcut, namespaceHelper, Handlebars) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    nextWarningHelper = nextWarningHelper && Object.prototype.hasOwnProperty.call(nextWarningHelper, 'default') ? nextWarningHelper['default'] : nextWarningHelper;\n    messages = messages && Object.prototype.hasOwnProperty.call(messages, 'default') ? messages['default'] : messages;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    navigationHelper = navigationHelper && Object.prototype.hasOwnProperty.call(navigationHelper, 'default') ? navigationHelper['default'] : navigationHelper;\n    statsHelper = statsHelper && Object.prototype.hasOwnProperty.call(statsHelper, 'default') ? statsHelper['default'] : statsHelper;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \" \";\n      if (helper = helpers.className) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.className); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n        aria-\"\n        + escapeExpression(((stack1 = (data == null || data === false ? data : data.key)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"=\\\"\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\"\\n    \";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span class=\\\"icon icon-\";\n      if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"></span>\";\n      return buffer;\n      }\n    function program6(depth0,data) {\n      \n      \n      return \" no-label\";\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span class=\\\"text\\\">\";\n      if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\";\n      return buffer;\n      }\n\n      buffer += \"<li\\n    data-control=\\\"\";\n      if (helper = helpers.control) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.control); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    class=\\\"small btn-info action\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.className), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n    title=\\\"\";\n      if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    role=\\\"button\\\"\\n    \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.aria), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\" onclick=\\\"return false\\\" aria-hidden=\\\"true\\\" >\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.icon), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </a>\\n</li>\\n\";\n      return buffer;\n      });\n    function buttonTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * The display of the next button\n     */\n\n    var buttonData = {\n      next: {\n        control: 'move-forward',\n        title: __('Submit and go to the next item'),\n        specificTitle: __('Submit and go to the item %s'),\n        icon: 'forward',\n        text: __('Next')\n      },\n      end: {\n        control: 'move-end',\n        title: __('Submit and go to the end of the test'),\n        icon: 'fast-forward',\n        text: __('End test')\n      }\n    };\n    /**\n     * Create the button based on the current context\n     * @param {Boolean} [isLast=false] - is the current item the last\n     * @returns {jQueryElement} the button\n     */\n\n    var createElement = function createElement() {\n      var isLast = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var dataType = isLast ? 'end' : 'next';\n      return $$1(buttonTpl(buttonData[dataType]));\n    };\n    /**\n     * Makes an element enabled\n     * @param  {jQuery} $element\n     * @returns {jQuery}\n     */\n\n\n    var enableElement = function enableElement($element) {\n      return $element.removeProp('disabled').removeClass('disabled');\n    };\n    /**\n     * Makes an element disabled\n     * @param  {jQuery} $element\n     * @returns {jQuery}\n     */\n\n\n    var disableElement = function disableElement($element) {\n      return $element.prop('disabled', true).addClass('disabled');\n    };\n    /**\n     * Update the button based on the context\n     * @param {jQueryElement} $element - the element to update\n     * @param {TestRunner} [testRunner] - the test runner instance\n     * @param {Boolean} [isLast=false] - is the current item the last\n     */\n\n\n    var updateElement = function updateElement($element, testRunner) {\n      var isLast = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var dataType = isLast ? 'end' : 'next';\n      var testContext = testRunner.getTestContext();\n\n      if (dataType === 'next' && !testContext.isAdaptive && !testContext.isCatAdaptive) {\n        var testMap = testRunner.getTestMap();\n        var nextItem = navigationHelper.getNextItem(testMap, testContext.itemPosition);\n        $element.attr('title', __(buttonData.next.specificTitle, nextItem.label));\n      } else {\n        $element.attr('title', buttonData[dataType].title);\n      }\n\n      if ($element.attr('data-control') !== buttonData[dataType].control) {\n        $element.attr('data-control', buttonData[dataType].control).find('.text').text(buttonData[dataType].text);\n\n        if (dataType === 'next') {\n          $element.find(\".icon-\".concat(buttonData.end.icon)).removeClass(\"icon-\".concat(buttonData.end.icon)).addClass(\"icon-\".concat(buttonData.next.icon));\n        } else {\n          $element.find(\".icon-\".concat(buttonData.next.icon)).removeClass(\"icon-\".concat(buttonData.next.icon)).addClass(\"icon-\".concat(buttonData.end.icon));\n        }\n      }\n    };\n    /**\n     * Returns the configured plugin\n     */\n\n\n    var next = pluginFactory({\n      name: 'next',\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var _this = this;\n\n        var testRunner = this.getTestRunner();\n        var testRunnerOptions = testRunner.getOptions();\n        var pluginShortcuts = (testRunnerOptions.shortcuts || {})[this.getName()] || {};\n        /**\n         * Check if the current item is the last item\n         * @returns {Boolean} true if the last\n         */\n\n        var isLastItem = function isLastItem() {\n          var testContext = testRunner.getTestContext();\n          var testMap = testRunner.getTestMap();\n          var itemIdentifier = testContext.itemIdentifier;\n          return navigationHelper.isLast(testMap, itemIdentifier);\n        }; //plugin behavior\n\n        /**\n         * @param {Boolean} nextItemWarning - enable the display of a warning when going to the next item.\n         * Note: the actual display of the warning depends on other conditions (see nextWarningHelper)\n         */\n\n\n        var doNext = function doNext(nextItemWarning) {\n          var testContext = testRunner.getTestContext();\n          var testMap = testRunner.getTestMap();\n          var testPart = testRunner.getCurrentPart();\n          var nextItemPosition = testContext.itemPosition + 1;\n          var itemIdentifier = testContext.itemIdentifier; // x-tao-option-unansweredWarning is a deprecated option whose behavior now matches the one of\n\n          var unansweredWarning = mapHelper.hasItemCategory(testMap, itemIdentifier, 'unansweredWarning', true); // x-tao-option-nextPartWarning with the unansweredOnly option\n\n          var nextPartWarning = mapHelper.hasItemCategory(testMap, itemIdentifier, 'nextPartWarning', true) || unansweredWarning;\n          var endTestWarning = mapHelper.hasItemCategory(testMap, itemIdentifier, 'endTestWarning', true); // this check to avoid an edge case where having both endTestWarning\n          // and unansweredWarning options would prevent endTestWarning to behave normally\n\n          var unansweredOnly = !endTestWarning && unansweredWarning;\n          var warningScope = nextPartWarning ? 'part' : 'test';\n\n          var enableNav = function enableNav() {\n            return testRunner.trigger('enablenav');\n          };\n\n          var triggerNextAction = function triggerNextAction() {\n            if (isLastItem()) {\n              _this.trigger('end');\n            }\n\n            testRunner.next();\n          };\n\n          testRunner.trigger('disablenav');\n\n          if (_this.getState('enabled') !== false) {\n            var warningHelper = nextWarningHelper({\n              endTestWarning: endTestWarning,\n              isLast: isLastItem(),\n              isLinear: testPart.isLinear,\n              nextItemWarning: nextItemWarning,\n              nextPartWarning: nextPartWarning,\n              nextPart: mapHelper.getItemPart(testMap, nextItemPosition),\n              remainingAttempts: testContext.remainingAttempts,\n              testPartId: testContext.testPartId,\n              unansweredWarning: unansweredWarning,\n              stats: statsHelper.getInstantStats(warningScope, testRunner),\n              unansweredOnly: unansweredOnly\n            });\n\n            if (warningHelper.shouldWarnBeforeEndPart()) {\n              var submitButtonLabel = __('SUBMIT THIS PART');\n\n              testRunner.trigger('confirm.endTestPart', messages.getExitMessage(warningScope, testRunner, '', false, submitButtonLabel), triggerNextAction, // if the test taker accept\n              enableNav, // if he refuse\n              {\n                buttons: {\n                  labels: {\n                    ok: submitButtonLabel,\n                    cancel: __('CANCEL')\n                  }\n                }\n              });\n            } else if (warningHelper.shouldWarnBeforeEnd()) {\n              var _submitButtonLabel = __('SUBMIT THE TEST');\n\n              testRunner.trigger('confirm.endTest', messages.getExitMessage(warningScope, testRunner, '', false, _submitButtonLabel), triggerNextAction, // if the test taker accept\n              enableNav, // if he refuse\n              {\n                buttons: {\n                  labels: {\n                    ok: _submitButtonLabel,\n                    cancel: __('CANCEL')\n                  }\n                }\n              });\n            } else if (warningHelper.shouldWarnBeforeNext()) {\n              testRunner.trigger('confirm.next', __('You are about to go to the next item. Click OK to continue and go to the next item.'), triggerNextAction, // if the test taker accept\n              enableNav // if he refuse\n              );\n            } else {\n              triggerNextAction();\n            }\n          }\n        }; //create the button (detached)\n\n\n        this.$element = createElement(isLastItem()); //attach behavior\n\n        this.$element.on('click', function (e) {\n          e.preventDefault();\n          disableElement(_this.$element);\n          testRunner.trigger('nav-next');\n        });\n\n        var registerShortcut = function registerShortcut(kbdShortcut) {\n          if (testRunnerOptions.allowShortcuts && kbdShortcut) {\n            shortcut.add(namespaceHelper.namespaceAll(kbdShortcut, _this.getName(), true), function () {\n              if (_this.getState('enabled') === true) {\n                testRunner.trigger('nav-next', true);\n              }\n            }, {\n              avoidInput: true,\n              prevent: true\n            });\n          }\n        };\n\n        registerShortcut(pluginShortcuts.trigger); //disabled by default\n\n        this.disable(); //change plugin state\n\n        testRunner.on('loaditem', function () {\n          updateElement(_this.$element, testRunner, isLastItem());\n        }).on('enablenav', function () {\n          return _this.enable();\n        }).on('disablenav', function () {\n          return _this.disable();\n        }).on('hidenav', function () {\n          return _this.hide();\n        }).on('shownav', function () {\n          return _this.show();\n        }).on('nav-next', function (nextItemWarning) {\n          return doNext(nextItemWarning);\n        }).on('enableaccessibilitymode', function () {\n          var kbdShortcut = pluginShortcuts.triggerAccessibility;\n\n          if (kbdShortcut && !_this.getState('eaccessibilitymode')) {\n            shortcut.remove(\".\".concat(_this.getName()));\n            registerShortcut(kbdShortcut);\n\n            _this.setState('eaccessibilitymode');\n          }\n        });\n      },\n\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        //attach the element to the navigation area\n        var $container = this.getAreaBroker().getNavigationArea();\n        $container.append(this.$element);\n      },\n\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(\".\".concat(this.getName()));\n        this.$element.remove();\n      },\n\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        enableElement(this.$element);\n      },\n\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        disableElement(this.$element);\n      },\n\n      /**\n       * Show the button\n       */\n      show: function show() {\n        hider.show(this.$element);\n      },\n\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        hider.hide(this.$element);\n      }\n    });\n\n    return next;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/next/dialogConfirmNext',['jquery', 'lodash', 'i18n', 'ui/dialog', 'handlebars'], function ($$1, _, __, dialog, Handlebars) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    dialog = dialog && Object.prototype.hasOwnProperty.call(dialog, 'default') ? dialog['default'] : dialog;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      return \"checked\";\n      }\n\n      buffer += \"<label for=\\\"\";\n      if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\\n    <input type=\\\"checkbox\\\" id=\\\"\";\n      if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" name=\\\"\";\n      if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.checked), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" />\\n    <span class=\\\"icon-checkbox\\\"></span>\\n    \";\n      if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\n</label>\";\n      return buffer;\n      });\n    function checkboxTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Displays a confirmation dialog with a checkbox in it\n     *\n     * @param {String} heading - Above the main message\n     * @param {String} message - The displayed message\n     * @param {Function} accept - An action called when the dialog is accepted\n     * @param {Function} refuse - An action called when the dialog is refused\n     * @param {Object} checkboxParams - Checkbox options\n     * @param {Boolean} [checkboxParams.checked] - True to render it checked\n     * @param {Function} [checkboxParams.submitChecked] - Action called when dialog accepted with checkbox checked\n     * @param {Function} [checkboxParams.submitUnchecked] - Action called when dialog accepted with checkbox unchecked\n     * @returns {dialog} - Returns the dialog instance\n     */\n\n    function dialogConfirmNext(heading, message, accept, refuse, checkboxParams, dialogOptions) {\n      var accepted = false;\n      var dlg;\n      var content = null;\n\n      if (checkboxParams && checkboxParams.checked !== true) {\n        content = checkboxTpl({\n          checked: false,\n          text: \"Don't show this again next time\",\n          id: 'dont-show-again'\n        });\n      }\n\n      dialogOptions = _.defaults({\n        heading: heading,\n        message: message,\n        content: content,\n        autoRender: true,\n        autoDestroy: true,\n        buttons: [{\n          id: 'cancel',\n          type: 'regular',\n          label: __('Cancel'),\n          close: true\n        }, {\n          id: 'ok',\n          type: 'info',\n          label: __('Go to next item'),\n          close: true\n        }],\n        onOkBtn: function onOkBtn() {\n          var $checkbox;\n          accepted = true;\n\n          if (_.isFunction(accept)) {\n            accept.call(this);\n\n            if (checkboxParams) {\n              // handle checkbox callbacks:\n              $checkbox = $$1('input[name=\"dont-show-again\"]', this);\n\n              if ($checkbox.prop('checked') && _.isFunction(checkboxParams.submitChecked)) {\n                checkboxParams.submitChecked();\n              } else if (!$checkbox.prop('checked') && _.isFunction(checkboxParams.submitUnchecked)) {\n                checkboxParams.submitUnchecked();\n              }\n            }\n          }\n        }\n      }, dialogOptions);\n      dlg = dialog(dialogOptions);\n\n      if (_.isFunction(refuse)) {\n        dlg.on('closed.modal', function () {\n          if (!accepted) {\n            refuse.call(this);\n          }\n        });\n      }\n\n      return dlg;\n    }\n\n    return dialogConfirmNext;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/next/linearNextItemWarning',['i18n', 'taoTests/runner/plugin', 'taoQtiTest/runner/helpers/map', 'taoQtiTest/runner/helpers/currentItem', 'taoQtiTest/runner/plugins/navigation/next/dialogConfirmNext', 'taoQtiTest/runner/helpers/navigation'], function (__, pluginFactory, mapHelper, currentItemHelper, dialogConfirmNext, navigationHelper) { 'use strict';\n\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    currentItemHelper = currentItemHelper && Object.prototype.hasOwnProperty.call(currentItemHelper, 'default') ? currentItemHelper['default'] : currentItemHelper;\n    dialogConfirmNext = dialogConfirmNext && Object.prototype.hasOwnProperty.call(dialogConfirmNext, 'default') ? dialogConfirmNext['default'] : dialogConfirmNext;\n    navigationHelper = navigationHelper && Object.prototype.hasOwnProperty.call(navigationHelper, 'default') ? navigationHelper['default'] : navigationHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Returns the configured plugin\n     */\n\n    var linearNextItemWarning = pluginFactory({\n      name: 'linearNextItemWarning',\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        var testRunnerOptions = testRunner.getOptions();\n        var testStore = testRunner.getTestStore(); // we'll store user's checkbox choice in here\n\n        testStore.setVolatile(self.getName());\n        /**\n         * Retrieve the required categories of the current item\n         * @returns {Object} the calculator categories\n         */\n\n        function getNextItemCategories() {\n          var testContext = testRunner.getTestContext();\n          var testMap = testRunner.getTestMap();\n          return {\n            nextPartWarning: mapHelper.hasItemCategory(testMap, testContext.itemIdentifier, 'nextPartWarning', true),\n            nextSectionWarning: mapHelper.hasItemCategory(testMap, testContext.itemIdentifier, 'nextSectionWarning', true)\n          };\n        }\n        /**\n         * Provides different variants of message text\n         * @param {String} action - 'next' or 'skip'\n         * @returns {String}\n         */\n\n\n        function getCustomNextMessage(action) {\n          var customNextMessage;\n          var itemPartiallyAnswered = currentItemHelper.isAnswered(testRunner, true);\n\n          if (!itemPartiallyAnswered) {\n            customNextMessage = __('Are you sure you want to go to the next item? You will not be able to go back and provide an answer.');\n          } else if (action === 'next') {\n            customNextMessage = __('Are you sure you want to go to the next item? You will not be able to go back and change your answer.');\n          } else if (action === 'skip') {\n            customNextMessage = __('Are you sure you want to clear your answer and go to the next item? You will not be able to go back and provide an answer.');\n          } else {\n            // more generic message for default case:\n            customNextMessage = __('Are you sure you want to go to the next item? You will not be able to go back.');\n          }\n\n          return customNextMessage;\n        } //plugin behavior\n\n        /**\n         * Checks configuration, shows a dialog asking to confirm the nav action\n         *\n         * @param {String} action - 'next' or 'skip'\n         * @returns {Promise} - resolves if dialog accepted or not shown, rejects if dialog cancelled\n         */\n\n\n        function doNextWarning(action) {\n          testRunner.trigger('disablenav'); // Load testStore checkbox value (async)\n\n          return testStore.getStore(self.getName()).then(function (store) {\n            return store.getItem('dontShowLinearNextItemWarning').then(function (checkboxValue) {\n              var checkboxParams = null; // Show the warning unless user has turned it off:\n\n              if (checkboxValue !== true) {\n                // Define checkbox only if enabled by config:\n                if (testRunnerOptions.enableLinearNextItemWarningCheckbox) {\n                  checkboxParams = {\n                    checked: checkboxValue,\n                    submitChecked: function submitChecked() {\n                      store.setItem('dontShowLinearNextItemWarning', true);\n                    },\n                    submitUnchecked: function submitUnchecked() {\n                      store.setItem('dontShowLinearNextItemWarning', false);\n                    }\n                  };\n                }\n\n                return new Promise(function (resolve, reject) {\n                  // show special dialog:\n                  dialogConfirmNext(__('Go to the next item?'), getCustomNextMessage(action), resolve, // if the test taker accepts\n                  function cancel() {\n                    // if he refuses\n                    reject({\n                      cancel: true\n                    });\n                  }, checkboxParams);\n                });\n              }\n            });\n          }).catch(function (err) {\n            // if the rejection is due to an error, rethrow it\n            if (err && err instanceof Error) {\n              throw err;\n            }\n\n            if (err && err.cancel === true) {\n              testRunner.trigger('enablenav');\n              return Promise.reject(); // to cancel the move\n            }\n          });\n        } // Attach this plugin to 'next' & 'skip' events\n\n\n        testRunner.on('init', function () {\n          // Clear the stored checkbox value before each test:\n          testStore.getStore(self.getName()).then(function (store) {\n            store.setItem('dontShowLinearNextItemWarning', null);\n          });\n        }).before('move skip', function (e, type, scope) {\n          var context = testRunner.getTestContext();\n          var map = testRunner.getTestMap();\n          var item = testRunner.getCurrentItem();\n          var currentPart = testRunner.getCurrentPart();\n          var categories = getNextItemCategories();\n          var isLast = navigationHelper.isLast(map, context.itemIdentifier);\n\n          if (currentPart && currentPart.isLinear) {\n            // Do nothing if nextSection warning imminent:\n            if (scope === 'section' && categories.nextSectionWarning) {\n              return; // Do nothing if endOfPart warning imminent:\n            } else if (categories.nextPartWarning) {\n              return; // Do nothing if 'informational item':\n            } else if (item.informational) {\n              return; // Show dialog if conditions met:\n            } else if (type === 'next' && !isLast && testRunnerOptions.forceEnableLinearNextItemWarning) {\n              return doNextWarning('next');\n            } else if (e.name === 'skip' && !isLast && testRunnerOptions.forceEnableLinearNextItemWarning) {\n              return doNextWarning('skip');\n            }\n          }\n        });\n      }\n    });\n\n    return linearNextItemWarning;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/nextSection',['jquery', 'lodash', 'i18n', 'ui/hider', 'taoTests/runner/plugin', 'taoQtiTest/runner/helpers/messages', 'handlebars', 'taoQtiTest/runner/helpers/map'], function ($$1, _, __, hider, pluginFactory, messages, Handlebars, mapHelper) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    messages = messages && Object.prototype.hasOwnProperty.call(messages, 'default') ? messages['default'] : messages;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \" \";\n      if (helper = helpers.className) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.className); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n        aria-\"\n        + escapeExpression(((stack1 = (data == null || data === false ? data : data.key)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"=\\\"\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\"\\n    \";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span class=\\\"icon icon-\";\n      if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"></span>\";\n      return buffer;\n      }\n    function program6(depth0,data) {\n      \n      \n      return \" no-label\";\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span class=\\\"text\\\">\";\n      if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\";\n      return buffer;\n      }\n\n      buffer += \"<li\\n    data-control=\\\"\";\n      if (helper = helpers.control) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.control); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    class=\\\"small btn-info action\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.className), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n    title=\\\"\";\n      if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    role=\\\"button\\\"\\n    \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.aria), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\" onclick=\\\"return false\\\" aria-hidden=\\\"true\\\" >\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.icon), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </a>\\n</li>\\n\";\n      return buffer;\n      });\n    function buttonTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n     */\n    var nextSection = pluginFactory({\n      name: 'nextsection',\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        var testRunnerOptions = testRunner.getOptions();\n        /**\n         * Retrieve the nexSection categories of the current item\n         * @returns {Object} the calculator categories\n         */\n\n        function getNextSectionCategories() {\n          var testContext = testRunner.getTestContext();\n          var testMap = testRunner.getTestMap();\n          return {\n            nextSection: mapHelper.hasItemCategory(testMap, testContext.itemIdentifier, 'nextSection', true),\n            nextSectionWarning: mapHelper.hasItemCategory(testMap, testContext.itemIdentifier, 'nextSectionWarning', true),\n            noExitTimedSectionWarning: mapHelper.hasItemCategory(testMap, testContext.itemIdentifier, 'noExitTimedSectionWarning', true)\n          };\n        }\n\n        function toggle() {\n          var categories = getNextSectionCategories();\n\n          if (testRunnerOptions.nextSection && (categories.nextSection || categories.nextSectionWarning)) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        }\n\n        function nextSection() {\n          testRunner.next('section');\n        }\n        /**\n         * Check if warn section leaving dialog enabled to prevent showing double dialogs\n         * @returns {Boolean}\n         */\n\n\n        var isWarnSectionLeavingEabled = function isWarnSectionLeavingEabled() {\n          var testContext = testRunner.getTestContext();\n          var categories = getNextSectionCategories();\n          var timeConstraints = testContext.timeConstraints || [];\n          return timeConstraints.some(function (_ref) {\n            var source = _ref.source;\n            return source === testContext.sectionId;\n          }) && !categories.noExitTimedSectionWarning && !(testRunnerOptions.timer || {}).keepUpToTimeout;\n        };\n\n        this.$element = $$1(buttonTpl({\n          control: 'next-section',\n          title: __('Skip to the next section'),\n          icon: 'fast-forward',\n          text: __('Next Section')\n        }));\n        this.$element.on('click', function (e) {\n          var enable = _.bind(self.enable, self);\n\n          var categories = getNextSectionCategories();\n          e.preventDefault();\n\n          if (self.getState('enabled') !== false) {\n            self.disable();\n\n            if (categories.nextSectionWarning && !isWarnSectionLeavingEabled()) {\n              var submitButtonLabel = __('CONTINUE TO THE NEXT SECTION');\n\n              testRunner.trigger('confirm.nextsection', messages.getExitMessage('section', testRunner, '', false, submitButtonLabel), nextSection, // if the test taker accept\n              enable, // if the test taker refuse\n              {\n                buttons: {\n                  labels: {\n                    ok: submitButtonLabel,\n                    cancel: __('CANCEL')\n                  }\n                }\n              });\n            } else {\n              nextSection();\n            }\n          }\n        });\n        this.disable();\n        toggle();\n        testRunner.on('loaditem', toggle).on('enablenav', function () {\n          self.enable();\n        }).on('disablenav', function () {\n          self.disable();\n        }).on('hidenav', function () {\n          self.hide();\n        }).on('shownav', function () {\n          self.show();\n        });\n      },\n\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        //attach the element to the navigation area\n        var $container = this.getAreaBroker().getNavigationArea();\n        $container.append(this.$element);\n      },\n\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        this.$element.remove();\n      },\n\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.$element.removeProp('disabled').removeClass('disabled');\n      },\n\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.$element.prop('disabled', true).addClass('disabled');\n      },\n\n      /**\n       * Show the button\n       */\n      show: function show() {\n        hider.show(this.$element);\n      },\n\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        hider.hide(this.$element);\n      }\n    });\n\n    return nextSection;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/previous',['jquery', 'lodash', 'i18n', 'ui/hider', 'taoTests/runner/plugin', 'util/shortcut', 'util/namespace', 'taoQtiTest/runner/helpers/navigation', 'taoQtiTest/runner/helpers/map', 'handlebars'], function ($$1, _, __, hider, pluginFactory, shortcut, namespaceHelper, navigationHelper, mapHelper, Handlebars) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    navigationHelper = navigationHelper && Object.prototype.hasOwnProperty.call(navigationHelper, 'default') ? navigationHelper['default'] : navigationHelper;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \" \";\n      if (helper = helpers.className) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.className); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n        aria-\"\n        + escapeExpression(((stack1 = (data == null || data === false ? data : data.key)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"=\\\"\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\"\\n    \";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span class=\\\"icon icon-\";\n      if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"></span>\";\n      return buffer;\n      }\n    function program6(depth0,data) {\n      \n      \n      return \" no-label\";\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span class=\\\"text\\\">\";\n      if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\";\n      return buffer;\n      }\n\n      buffer += \"<li\\n    data-control=\\\"\";\n      if (helper = helpers.control) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.control); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    class=\\\"small btn-info action\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.className), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n    title=\\\"\";\n      if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    role=\\\"button\\\"\\n    \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.aria), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\" onclick=\\\"return false\\\" aria-hidden=\\\"true\\\" >\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.icon), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </a>\\n</li>\\n\";\n      return buffer;\n      });\n    function buttonTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Returns the configured plugin\n     */\n\n    var previous = pluginFactory({\n      name: 'previous',\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var _this = this;\n\n        var self = this;\n        var testRunner = this.getTestRunner();\n        var testRunnerOptions = testRunner.getOptions();\n        var pluginShortcuts = (testRunnerOptions.shortcuts || {})[this.getName()] || {};\n        /**\n         * Check if the \"Previous\" functionality should be available or not\n         */\n\n        var canDoPrevious = function canDoPrevious() {\n          var testMap = testRunner.getTestMap();\n          var context = testRunner.getTestContext();\n          var currentSection = testRunner.getCurrentSection();\n          var noExitTimedSectionWarning = mapHelper.hasItemCategory(testMap, context.itemIdentifier, 'noExitTimedSectionWarning', true);\n          var currentPart = testRunner.getCurrentPart();\n          var previousSection;\n          var previousPart; // check TestMap if empty\n\n          if (_.isPlainObject(testMap) && _.size(testMap) === 0) {\n            return false;\n          } //first item of the test\n\n\n          if (navigationHelper.isFirst(testMap, context.itemIdentifier)) {\n            return false;\n          } //first item of a section\n\n\n          if (navigationHelper.isFirstOf(testMap, context.itemIdentifier, 'section')) {\n            //when entering an adaptive section,\n            //you can't leave the section from the beginning\n            if (currentSection.isCatAdaptive) {\n              return false;\n            } //if the previous section is adaptive or a timed section\n\n\n            previousSection = mapHelper.getItemSection(testMap, context.itemPosition - 1);\n\n            if (previousSection.isCatAdaptive || previousSection.timeConstraint && !noExitTimedSectionWarning) {\n              return false;\n            }\n          }\n\n          if (navigationHelper.isFirstOf(testMap, context.itemIdentifier, 'part')) {\n            //if the previous part is linear, we don't enter it too\n            previousPart = mapHelper.getItemPart(testMap, context.itemPosition - 1);\n\n            if (previousPart.isLinear) {\n              return false;\n            }\n          }\n\n          return currentPart.isLinear === false && context.canMoveBackward === true;\n        };\n        /**\n         * Hide the plugin if the Previous functionality shouldn't be available\n         */\n\n\n        var toggle = function toggle() {\n          if (canDoPrevious()) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        }; //build element (detached)\n\n\n        this.$element = $$1(buttonTpl({\n          control: 'move-backward',\n          title: __('Submit and go to the previous item'),\n          icon: 'backward',\n          text: __('Previous')\n        })); //attach behavior\n\n        function doPrevious(previousItemWarning) {\n          var context = testRunner.getTestContext();\n\n          function enableNav() {\n            testRunner.trigger('enablenav');\n          }\n\n          function triggerAction() {\n            testRunner.previous();\n          }\n\n          testRunner.trigger('disablenav');\n\n          if (self.getState('enabled') !== false) {\n            if (previousItemWarning && context.remainingAttempts !== -1) {\n              testRunner.trigger('confirm.previous', __('You are about to go to the previous item. Click OK to continue and go to the previous item.'), triggerAction, // if the test taker accept\n              enableNav // if he refuses\n              );\n            } else {\n              triggerAction();\n            }\n          }\n        }\n\n        this.$element.on('click', function (e) {\n          e.preventDefault();\n          testRunner.trigger('nav-previous');\n        });\n\n        var registerShortcut = function registerShortcut(kbdShortcut) {\n          if (testRunnerOptions.allowShortcuts && kbdShortcut) {\n            shortcut.add(namespaceHelper.namespaceAll(kbdShortcut, _this.getName(), true), function () {\n              if (canDoPrevious() && self.getState('enabled') === true) {\n                testRunner.trigger('nav-previous', [true]);\n              }\n            }, {\n              avoidInput: true,\n              prevent: true\n            });\n          }\n        };\n\n        registerShortcut(pluginShortcuts.trigger); //start disabled\n\n        toggle();\n        self.disable(); //update plugin state based on changes\n\n        testRunner.on('loaditem', toggle).on('enablenav', function () {\n          self.enable();\n        }).on('disablenav', function () {\n          self.disable();\n        }).on('hidenav', function () {\n          self.hide();\n        }).on('shownav', function () {\n          self.show();\n        }).on('nav-previous', function (previousItemWarning) {\n          doPrevious(previousItemWarning);\n        }).on('enableaccessibilitymode', function () {\n          var kbdShortcut = pluginShortcuts.triggerAccessibility;\n\n          if (kbdShortcut && !_this.getState('eaccessibilitymode')) {\n            shortcut.remove(\".\".concat(_this.getName()));\n            registerShortcut(kbdShortcut);\n\n            _this.setState('eaccessibilitymode');\n          }\n        });\n      },\n\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        var $container = this.getAreaBroker().getNavigationArea();\n        $container.append(this.$element);\n      },\n\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(\".\".concat(this.getName()));\n        this.$element.remove();\n      },\n\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.$element.removeProp('disabled').removeClass('disabled');\n      },\n\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.$element.prop('disabled', true).addClass('disabled');\n      },\n\n      /**\n       * Show the button\n       */\n      show: function show() {\n        hider.show(this.$element);\n      },\n\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        hider.hide(this.$element);\n      }\n    });\n\n    return previous;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/review/navigator',['jquery', 'lodash', 'ui/component', 'ui/autoscroll', 'taoQtiTest/runner/helpers/map', 'handlebars'], function ($$1, _, component, autoscroll, mapHelper, Handlebars) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    component = component && Object.prototype.hasOwnProperty.call(component, 'default') ? component['default'] : component;\n    autoscroll = autoscroll && Object.prototype.hasOwnProperty.call(autoscroll, 'default') ? autoscroll['default'] : autoscroll;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      return \" hidden\";\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", helper, options;\n      buffer += \"\\n    <div class=\\\"qti-navigator-info collapsible\\\">\\n                <span class=\\\"qti-navigator-label\\\">\\n                    <span class=\\\"qti-navigator-text\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Test status\", options) : helperMissing.call(depth0, \"__\", \"Test status\", options)))\n        + \"</span>\\n                    <span class=\\\"icon-up\\\"></span>\\n                    <span class=\\\"icon-down\\\"></span>\\n                </span>\\n        <ul class=\\\"collapsible-panel plain\\\">\\n            <li class=\\\"qti-navigator-viewed\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Viewed items\", options) : helperMissing.call(depth0, \"__\", \"Viewed items\", options)))\n        + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-viewed\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Viewed\", options) : helperMissing.call(depth0, \"__\", \"Viewed\", options)))\n        + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n            </li>\\n            <li class=\\\"qti-navigator-answered\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Completed items\", options) : helperMissing.call(depth0, \"__\", \"Completed items\", options)))\n        + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-answered\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Answered\", options) : helperMissing.call(depth0, \"__\", \"Answered\", options)))\n        + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n            </li>\\n            <li class=\\\"qti-navigator-unanswered\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered items\", options) : helperMissing.call(depth0, \"__\", \"Unanswered items\", options)))\n        + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-unanswered\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered\", options) : helperMissing.call(depth0, \"__\", \"Unanswered\", options)))\n        + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n            </li>\\n            <li class=\\\"qti-navigator-flagged\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Items marked for later review\", options) : helperMissing.call(depth0, \"__\", \"Items marked for later review\", options)))\n        + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-flagged\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Flagged\", options) : helperMissing.call(depth0, \"__\", \"Flagged\", options)))\n        + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n            </li>\\n        </ul>\\n    </div>\\n    \";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      \n      return \"(<span class=\\\"qti-navigator-counter\\\">0</span>)\";\n      }\n\n    function program7(depth0,data) {\n      \n      \n      return \"icon-unanswered \";\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \"\", helper, options;\n      buffer += escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered\", options) : helperMissing.call(depth0, \"__\", \"Unanswered\", options)))\n        + \" (<span class=\\\"qti-navigator-counter\\\">0</span>)\";\n      return buffer;\n      }\n\n    function program11(depth0,data) {\n      \n      \n      return \"icon-flagged \";\n      }\n\n    function program13(depth0,data) {\n      \n      var buffer = \"\", helper, options;\n      buffer += escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Flagged\", options) : helperMissing.call(depth0, \"__\", \"Flagged\", options)))\n        + \" (<span class=\\\"qti-navigator-counter\\\">0</span>)\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-panel qti-navigator qti-navigator-default\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.hidden), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\\n    <div class=\\\"qti-navigator-collapsible\\\">\\n        <span class=\\\"qti-navigator-collapse icon icon-left\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Collapse the review panel\", options) : helperMissing.call(depth0, \"__\", \"Collapse the review panel\", options)))\n        + \"\\\"></span>\\n        <span class=\\\"qti-navigator-expand icon icon-right\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Expand the review panel\", options) : helperMissing.call(depth0, \"__\", \"Expand the review panel\", options)))\n        + \"\\\"></span>\\n    </div>\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n\\n\\n    <div class=\\\"qti-navigator-filters\\\">\\n        <ul role=\\\"tablist\\\" class=\\\"plain clearfix\\\">\\n            <li role=\\\"tab\\\" aria-selected=\\\"true\\\" class=\\\"qti-navigator-filter active\\\" data-mode=\\\"all\\\">\\n                <span title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Reset filters\", options) : helperMissing.call(depth0, \"__\", \"Reset filters\", options)))\n        + \"\\\" class=\\\"qti-navigator-tab\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"All\", options) : helperMissing.call(depth0, \"__\", \"All\", options)))\n        + \"\\n                    \";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                </span>\\n            </li>\\n\\n            <li role=\\\"tab\\\" class=\\\"qti-navigator-filter\\\" data-mode=\\\"unanswered\\\">\\n                <span class=\\\"\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"qti-navigator-tab\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Only display the unanswered items\", options) : helperMissing.call(depth0, \"__\", \"Only display the unanswered items\", options)))\n        + \"\\\">\\n                    \";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                </span>\\n            </li>\\n\\n            <li role=\\\"tab\\\" class=\\\"qti-navigator-filter\\\" data-mode=\\\"flagged\\\">\\n                <span class=\\\"\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"qti-navigator-tab\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Only display the items marked for review\", options) : helperMissing.call(depth0, \"__\", \"Only display the items marked for review\", options)))\n        + \"\\\">\\n                    \";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                </span>\\n            </li>\\n        </ul>\\n    </div>\\n\\n    <nav class=\\\"qti-navigator-tree\\\"></nav>\\n\\n    <div id=\\\"qti-navigator-linear\\\" class=\\\"qti-navigator-linear\\\">\\n        <span class=\\\"icon icon-info\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n        + \"\\\"></span>\\n        <p class=\\\"qti-navigator-message\\\">\\n            \"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n        + \"\\n        </p>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function navigatorTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n    <li class=\\\"qti-navigator-part collapsible \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-id=\\\"\";\n      if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\\n        <span class=\\\"qti-navigator-label\\\" title=\\\"\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\\n            <span class=\\\"qti-navigator-text\\\">\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n            <span class=\\\"icon-up\\\"></span>\\n            <span class=\\\"icon-down\\\"></span>\\n        </span>\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.isLinear), {hash:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </li>\\n    \";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      \n      return \"active\";\n      }\n\n    function program4(depth0,data) {\n      \n      \n      return \"collapsed\";\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n        <div class=\\\"qti-navigator-linear-part collapsible-panel\\\">\\n            <span class=\\\"icon icon-info\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n        + \"\\\"></span>\\n            <p class=\\\"qti-navigator-message\\\">\\n                \"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n        + \"\\n            </p>\\n            <p class=\\\"qti-navigator-actions\\\">\\n                <button class=\\\"btn-info small\\\" data-position=\\\"\";\n      if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start Test-part\", options) : helperMissing.call(depth0, \"__\", \"Start Test-part\", options)))\n        + \"\\\">\\n                    <span class=\\\"qti-navigator-text\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start Test-part\", options) : helperMissing.call(depth0, \"__\", \"Start Test-part\", options)))\n        + \"</span>\\n                    <span class=\\\"icon-play r\\\"></span>\\n                </button>\\n            </p>\\n        </div>\\n        \";\n      return buffer;\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n        <ul aria-label=\\\"\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" class=\\\"qti-navigator-sections collapsible-panel plain\\\">\\n            \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.sections), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        </ul>\\n        \";\n      return buffer;\n      }\n    function program9(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n            <li class=\\\"qti-navigator-section collapsible \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-id=\\\"\";\n      if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\\n                <span class=\\\"qti-navigator-label\\\" title=\\\"\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\\n                    <span class=\\\"qti-navigator-text\\\">\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n                    <span class=\\\"qti-navigator-counter\\\">\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.stats)),stack1 == null || stack1 === false ? stack1 : stack1.answered)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"/\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.stats)),stack1 == null || stack1 === false ? stack1 : stack1.total)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"</span>\\n                </span>\\n                <ul aria-label=\\\"\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" class=\\\"qti-navigator-items collapsible-panel plain\\\">\\n                    \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.items), {hash:{},inverse:self.noop,fn:self.programWithDepth(10, program10, data, depth0),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                </ul>\\n            </li>\\n            \";\n      return buffer;\n      }\n    function program10(depth0,data,depth1) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n                    <li class=\\\"qti-navigator-item \";\n      if (helper = helpers.cls) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.cls); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-id=\\\"\";\n      if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-position=\\\"\";\n      if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\\n                        <span class=\\\"qti-navigator-label truncate\\\" title=\\\"\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n                              role=\\\"link\\\" aria-disabled=\\\"\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.viewed), {hash:{},inverse:self.program(13, program13, data),fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n                              \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                              aria-label=\\\"\";\n      if (helper = helpers.index) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.index); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \" of \"\n        + escapeExpression(((stack1 = ((stack1 = (depth1 && depth1.stats)),stack1 == null || stack1 === false ? stack1 : stack1.total)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" \";\n      if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\\n                            <span class=\\\"qti-navigator-icon icon-\";\n      if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"></span>\\n                            <span class=\\\"qti-navigator-number\\\">\";\n      if (helper = helpers.index) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.index); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n                            \";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\n                        </span>\\n                    </li>\\n                    \";\n      return buffer;\n      }\n    function program11(depth0,data) {\n      \n      \n      return \"false\";\n      }\n\n    function program13(depth0,data) {\n      \n      \n      return \"true\";\n      }\n\n    function program15(depth0,data) {\n      \n      \n      return \"aria-current=\\\"page\\\"\";\n      }\n\n      buffer += \"<ul class=\\\"qti-navigator-parts plain\\\">\\n    \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.parts), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</ul>\\n\";\n      return buffer;\n      });\n    function navigatorTreeTpl(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Some default values\n     * @type {Object}\n     * @private\n     */\n\n    var _defaults = {\n      scope: 'test',\n      canCollapse: false,\n      preventsUnseen: true,\n      hidden: false\n    };\n    /**\n     * List of CSS classes\n     * @type {Object}\n     * @private\n     */\n\n    var _cssCls = {\n      active: 'active',\n      collapsed: 'collapsed',\n      collapsible: 'collapsible',\n      hidden: 'hidden',\n      disabled: 'disabled',\n      flagged: 'flagged',\n      answered: 'answered',\n      viewed: 'viewed',\n      unseen: 'unseen',\n      info: 'info',\n      icon: 'qti-navigator-icon',\n      scope: {\n        test: 'scope-test',\n        testPart: 'scope-test-part',\n        testSection: 'scope-test-section'\n      }\n    };\n    /**\n     * List of icon CSS classes\n     * @type {Array}\n     * @private\n     */\n\n    var _iconCls = [_cssCls.info, _cssCls.flagged, _cssCls.answered, _cssCls.viewed];\n    /**\n     * List of common CSS selectors\n     * @type {Object}\n     * @private\n     */\n\n    var _selectors = {\n      component: '.qti-navigator',\n      filterBar: '.qti-navigator-filters',\n      filter: '.qti-navigator-filter',\n      tree: '.qti-navigator-tree',\n      collapseHandle: '.qti-navigator-collapsible',\n      linearState: '.qti-navigator-linear',\n      infoAnswered: '.qti-navigator-answered .qti-navigator-counter',\n      infoViewed: '.qti-navigator-viewed .qti-navigator-counter',\n      infoUnanswered: '.qti-navigator-unanswered .qti-navigator-counter',\n      infoFlagged: '.qti-navigator-flagged .qti-navigator-counter',\n      infoPanel: '.qti-navigator-info',\n      infoPanelLabels: '.qti-navigator-info > .qti-navigator-label',\n      tabInfoAll: '[data-mode=\"all\"] .qti-navigator-counter',\n      tabInfoUnanswered: '[data-mode=\"unanswered\"] .qti-navigator-counter',\n      tabInfoFlagged: '[data-mode=\"flagged\"] .qti-navigator-counter',\n      parts: '.qti-navigator-part',\n      partLabels: '.qti-navigator-part > .qti-navigator-label',\n      sections: '.qti-navigator-section',\n      sectionLabels: '.qti-navigator-section > .qti-navigator-label',\n      items: '.qti-navigator-item',\n      itemLabels: '.qti-navigator-item > .qti-navigator-label',\n      itemIcons: '.qti-navigator-item > .qti-navigator-icon',\n      activeItem: '.qti-navigator-item.active',\n      icons: '.qti-navigator-icon',\n      linearStart: '.qti-navigator-linear-part button',\n      counters: '.qti-navigator-counter',\n      actives: '.active',\n      collapsible: '.collapsible',\n      collapsiblePanels: '.collapsible-panel',\n      unseen: '.unseen',\n      answered: '.answered',\n      flagged: '.flagged',\n      notFlagged: ':not(.flagged)',\n      notAnswered: ':not(.answered)',\n      notInformational: ':not(.info)',\n      informational: '.info',\n      hidden: '.hidden',\n      disabled: '.disabled'\n    };\n    /**\n     * Maps the filter mode to filter criteria.\n     * Each filter criteria is a CSS selector used to find and mask the items to be discarded by the filter.\n     * @type {Object}\n     * @private\n     */\n\n    var _filterMap = {\n      all: '',\n      unanswered: [_selectors.answered, _selectors.informational].join(','),\n      flagged: _selectors.notFlagged,\n      answered: _selectors.notAnswered,\n      filtered: _selectors.hidden\n    };\n    /**\n     *\n     * @type {Object}\n     */\n\n    var navigatorApi = {\n      /**\n       * Updates the stats on the flagged items in the current map\n       * @param {Number} position\n       * @param {Boolean} flag\n       */\n      updateStats: function updateStats(position, flag) {\n        var map = this.map;\n        var item;\n\n        if (map) {\n          item = mapHelper.getItemAt(map, position);\n\n          if (item) {\n            item.flagged = flag;\n            mapHelper.updateItemStats(map, position);\n          }\n        }\n      },\n\n      /**\n       * Gets the total number of items for the provided target\n       * @param {Object} progression\n       * @param {String} target\n       * @returns {Number}\n       */\n      getProgressionTotal: function getProgressionTotal(progression, target) {\n        var total;\n\n        if ('questions' === target) {\n          total = progression.questions;\n        } else {\n          total = progression.total;\n        }\n\n        return total;\n      },\n\n      /**\n       * Set the marked state of an item\n       * @param {Number|String|jQuery} position\n       * @param {Boolean} flag\n       */\n      setItemFlag: function setItemFlag(position, flag) {\n        var $item = position && position.jquery ? position : this.controls.$tree.find(\"[data-position=\".concat(position, \"]\"));\n        var progression = this.progression;\n        var icon; // update the map stats\n\n        this.updateStats(position, flag); // update the item flag\n\n        $item.toggleClass(_cssCls.flagged, flag); // set the item icon according to its state\n\n        icon = _.find(_iconCls, _.bind($item.hasClass, $item)) || _cssCls.unseen;\n        $item.find(_selectors.icons).attr('class', \"\".concat(_cssCls.icon, \" icon-\").concat(icon)); // update the info panel\n\n        progression.flagged = this.controls.$tree.find(_selectors.flagged).length;\n        this.writeCount(this.controls.$infoFlagged, progression.flagged, this.getProgressionTotal(progression, 'questions')); // recompute the filters\n\n        this.filter(this.currentFilter);\n      },\n\n      /**\n       * Filters the items by a criteria\n       * @param {String} criteria\n       */\n      filter: function filter(criteria) {\n        var self = this; // remove the current filter by restoring all items\n\n        var $items = this.controls.$tree.find(_selectors.items).removeClass(_cssCls.hidden); // filter the items according to the provided criteria\n\n        var filterCb = _filterMap[criteria];\n\n        if (filterCb) {\n          $items.filter(filterCb).addClass(_cssCls.hidden);\n        } // update the section counters\n\n\n        this.controls.$tree.find(_selectors.sections).each(function () {\n          var $section = $$1(this);\n          var $itemsFound = $section.find(_selectors.items).not(_selectors.hidden);\n          var $filtered = $itemsFound.not(_selectors.disabled);\n          self.writeCount($section.find(_selectors.counters), $filtered.length, $itemsFound.length);\n        });\n        this.currentFilter = criteria;\n      },\n\n      /**\n       * Update the config\n       * @param {Object} [config]\n       * @returns {navigatorApi}\n       */\n      updateConfig: function updateConfig(config) {\n        var $component = this.getElement();\n        var scopeClass = _cssCls.scope[this.config.scope || _defaults.scope]; // apply the new config\n\n        config = _.merge(this.config, config || {}); // enable/disable the collapsing of the panel\n\n        $component.toggleClass(_cssCls.collapsible, config.canCollapse); // update the component CSS class according to the scope\n\n        $component.removeClass(scopeClass);\n        scopeClass = _cssCls.scope[this.config.scope || _defaults.scope];\n        $component.addClass(scopeClass);\n        return this;\n      },\n\n      /**\n       * Keep the active item visible, auto scroll if needed\n       */\n      autoScroll: function autoScroll() {\n        autoscroll(this.controls.$tree.find(_selectors.activeItem), this.controls.$tree);\n      },\n\n      /**\n       * Updates the review screen\n       * @param {Object} map The current test map\n       * @param {Object} context The current test context\n       * @returns {navigatorApi}\n       * @fires navigator#update\n       */\n      update: function update(map, context) {\n        var scopedMap = this.getScopedMap(map, context);\n        var testPart = mapHelper.getPart(map, context.testPartId);\n        var progression = scopedMap.stats || {\n          questions: 0,\n          answered: 0,\n          flagged: 0,\n          viewed: 0,\n          total: 0\n        };\n        var totalQuestions = this.getProgressionTotal(progression, 'questions');\n        this.map = map;\n        this.progression = progression; // update the info panel\n\n        this.writeCount(this.controls.$infoAnswered, progression.answered, totalQuestions);\n        this.writeCount(this.controls.$infoUnanswered, totalQuestions - progression.answered, totalQuestions);\n        this.writeCount(this.controls.$infoViewed, progression.viewed, this.getProgressionTotal(progression, 'total'));\n        this.writeCount(this.controls.$infoFlagged, progression.flagged, totalQuestions);\n        this.writeCount(this.controls.$infoAll, totalQuestions, null); // rebuild the tree\n\n        if (!testPart.isLinear) {\n          this.controls.$filterBar.show();\n          this.controls.$linearState.hide();\n          this.controls.$tree.html(navigatorTreeTpl(scopedMap));\n          this.autoScroll();\n          var activeItem = mapHelper.getActiveItem(scopedMap);\n          this.setState('prevents-unseen', this.config.preventsUnseen);\n          var isSkipaheadEnabled = activeItem && activeItem.categories && _.indexOf(activeItem.categories, 'x-tao-option-review-skipahead') >= 0;\n          this.setState('skipahead-enabled', isSkipaheadEnabled);\n\n          if (this.config.preventsUnseen && !isSkipaheadEnabled) {\n            // disables all unseen items to prevent the test taker has access to.\n            this.controls.$tree.find(_selectors.unseen).addClass(_cssCls.disabled);\n          }\n        } else {\n          this.controls.$filterBar.hide();\n          this.controls.$linearState.show();\n          this.controls.$tree.empty();\n        } // apply again the current filter\n\n\n        this.filter(this.controls.$filters.filter(_selectors.actives).data('mode'));\n        /**\n         * @event navigator#update the navigation data have changed\n         */\n\n        this.trigger('update');\n        return this;\n      },\n\n      /**\n       * Gets the scoped map\n       * @param {Object} map The current test map\n       * @param {Object} context The current test context\n       * @returns {object} The scoped map\n       */\n      getScopedMap: function getScopedMap(map, context) {\n        var scopedMap = mapHelper.getScopeMapFromContext(map, context, this.config.scope);\n        var testPart = mapHelper.getPart(scopedMap, context.testPartId) || {};\n        var section = mapHelper.getSection(scopedMap, context.sectionId) || {};\n        var item = mapHelper.getItem(scopedMap, context.itemIdentifier) || {}; // set the active part/section/item\n\n        testPart.active = true;\n        section.active = true;\n        item.active = true; //interactive item counter\n\n        var counter = 0; // adjust each item with additional meta\n\n        return mapHelper.each(scopedMap, function (itm) {\n          var cls = [];\n          var icon = '';\n\n          if (itm.active) {\n            cls.push('active');\n          }\n\n          if (itm.informational) {\n            cls.push('info');\n            icon = icon || 'info';\n          }\n\n          if (itm.flagged) {\n            cls.push('flagged');\n            icon = icon || 'flagged';\n          }\n\n          if (itm.answered) {\n            cls.push('answered');\n            icon = icon || 'answered';\n          }\n\n          if (itm.viewed) {\n            cls.push('viewed');\n            icon = icon || 'viewed';\n          } else {\n            cls.push('unseen');\n            icon = icon || 'unseen';\n          }\n\n          if (!itm.informational) {\n            counter += 1;\n            itm.numberTest = counter; //item position in whole test from 1\n          }\n\n          itm.cls = cls.join(' ');\n          itm.icon = icon;\n        });\n      },\n\n      /**\n       * Updates a counter\n       * @param {jQuery} $place\n       * @param {Number} count\n       * @param {Number|Null} total\n       * @private\n       */\n      writeCount: function writeCount($place, count, total) {\n        var display = 0;\n\n        if ($place.parent().hasClass('qti-navigator-tab')) {\n          display = Math.max(count, 0);\n        } else if (total > 0) {\n          display = \"\".concat(Math.min(count, total), \"/\").concat(total);\n        }\n\n        $place.text(display);\n      },\n\n      /**\n       * Selects an item\n       * @param {String|jQuery} position The item's position\n       * @param {Boolean} [open] Forces the tree to be opened on the selected item\n       * @returns {jQuery} Returns the selected item\n       */\n      select: function select(position, open) {\n        // find the item to select and extract its hierarchy\n        var $tree = this.controls.$tree;\n        var selected = position && position.jquery ? position : $tree.find(\"[data-position=\".concat(position, \"]\"));\n        var hierarchy = selected.parentsUntil($tree);\n        var previousPosition = 0;\n        var $previous = $tree.find(_selectors.activeItem);\n\n        if ($previous.length) {\n          previousPosition = $previous.data('position');\n        } // collapse the full tree and open only the hierarchy of the selected item\n\n\n        if (open) {\n          this.openOnly(hierarchy);\n        } // select the item\n\n\n        $tree.find(_selectors.actives).removeClass(_cssCls.active);\n        hierarchy.add(selected).addClass(_cssCls.active);\n        position = selected.data('position');\n        /**\n         * An item is selected\n         *\n         * @param {Number} position - The item position on which select\n         * @param {Number} previousPosition - The item position from which select\n         * @event navigator#selected\n         */\n\n        this.trigger('selected', position, previousPosition);\n        return selected;\n      },\n\n      /**\n       * Opens the tree on the selected item only\n       * @returns {jQuery} Returns the selected item\n       */\n      openSelected: function openSelected() {\n        // find the selected item and extract its hierarchy\n        var $tree = this.controls.$tree;\n        var selected = $tree.find(_selectors.items + _selectors.actives);\n        var hierarchy = selected.parentsUntil($tree); // collapse the full tree and open only the hierarchy of the selected item\n\n        this.openOnly(hierarchy);\n        return selected;\n      },\n\n      /**\n       * Collapses the full tree and opens only the provided branch\n       * @param {jQuery} opened The element to be opened\n       * @param {jQuery} [root] The root element from which collapse the panels\n       */\n      openOnly: function openOnly(opened, root) {\n        (root || this.controls.$tree).find(_selectors.collapsible).addClass(_cssCls.collapsed);\n        opened.removeClass(_cssCls.collapsed);\n      },\n\n      /**\n       * Toggles a panel\n       * @param {jQuery} panel The panel to toggle\n       * @param {String} [collapseSelector] Selector of panels to collapse\n       * @returns {Boolean} Returns `true` if the panel just expanded now\n       */\n      togglePanel: function togglePanel(panel, collapseSelector) {\n        var collapsed = panel.hasClass(_cssCls.collapsed);\n\n        if (collapseSelector) {\n          this.controls.$tree.find(collapseSelector).addClass(_cssCls.collapsed);\n        }\n\n        if (collapsed) {\n          panel.removeClass(_cssCls.collapsed);\n        } else {\n          panel.addClass(_cssCls.collapsed);\n        }\n\n        return collapsed;\n      },\n\n      /**\n       * Toggles the display state of the component\n       * @param {Boolean} [show] External condition that's tells if the component must be shown or hidden\n       * @returns {navigatorApi}\n       */\n      toggle: function toggle(show) {\n        if (typeof show === 'undefined') {\n          show = this.is('hidden');\n        }\n\n        if (show) {\n          this.show();\n        } else {\n          this.hide();\n        }\n\n        return this;\n      }\n    };\n    /**\n     *\n     * @param {Object} config\n     * @param {String} [config.scope] Limit the review screen to a particular scope: test, testPart, testSection\n     * @param {Boolean} [config.preventsUnseen] Prevents the test taker to access unseen items\n     * @param {Boolean} [config.canCollapse] Allow the test taker to collapse the component\n     * @param {Boolean} [config.canFlag] Allow the test taker to flag items\n     * @param {Boolean} [config.hidden] Hide the component at init\n     * @returns {*}\n     */\n\n    function navigatorFactory(config) {\n      var navigator;\n      /**\n       * Flags an item\n       * @param {jQuery} $item\n       */\n\n      function flagItem($item) {\n        var position = $item.data('position');\n        var flagged = !$item.hasClass(_cssCls.flagged); // update the display\n\n        navigator.setItemFlag(position, flagged);\n        /**\n         * An item is flagged\n         * @event navigator#flag\n         * @param {Number} position - The item position on which jump\n         * @param {Boolean} flag - Tells whether the item is marked for review or not\n         */\n\n        navigator.trigger('flag', position, flagged);\n      }\n      /**\n       * Jumps to an item\n       * @param {jQuery} $item\n       * @private\n       */\n\n\n      function jump($item) {\n        var position = $item.data('position');\n        /**\n         * A jump to a particular item is required\n         * @event navigator#jump\n         * @param {Number} position - The item position on which jump\n         */\n\n        navigator.trigger('jump', position);\n      }\n\n      navigator = component(navigatorApi, _defaults).setTemplate(navigatorTpl) // uninstalls the component\n      .on('destroy', function () {\n        this.controls = null;\n      }) // keep the activ item visible\n      .on('show', function () {\n        this.autoScroll();\n      }) // renders the component\n      .on('render', function () {\n        var self = this; // main component elements\n\n        var $component = this.getElement();\n        var $filterBar = $component.find(_selectors.filterBar);\n        var $filters = $filterBar.find('li');\n        var $tree = $component.find(_selectors.tree); // links the component to the underlying DOM elements\n\n        this.controls = {\n          // access to info panel displaying counters\n          $infoAnswered: $component.find(_selectors.infoAnswered),\n          $infoViewed: $component.find(_selectors.infoViewed),\n          $infoAll: $component.find(_selectors.tabInfoAll),\n          $infoUnanswered: this.config.showLegend ? $component.find(_selectors.infoUnanswered) : $component.find(_selectors.tabInfoUnanswered),\n          $infoFlagged: this.config.showLegend ? $component.find(_selectors.infoFlagged) : $component.find(_selectors.tabInfoFlagged),\n          // access to filter switches\n          $filterBar: $filterBar,\n          $filters: $filters,\n          // access to the tree of parts/sections/items\n          $tree: $tree,\n          // access to the panel displayed when a linear part is reached\n          $linearState: $component.find(_selectors.linearState)\n        }; // apply options\n\n        this.updateConfig(); // click on the collapse handle: collapse/expand the review panel\n\n        $component.on(\"click\".concat(_selectors.component), _selectors.collapseHandle, function () {\n          if (!self.is('disabled')) {\n            $component.toggleClass(_cssCls.collapsed);\n\n            if ($component.hasClass(_cssCls.collapsed)) {\n              self.openSelected();\n            }\n          }\n        }); // click on the info panel title: toggle the related panel\n\n        $component.on(\"click\".concat(_selectors.component), _selectors.infoPanelLabels, function () {\n          if (!self.is('disabled')) {\n            self.togglePanel($$1(this).closest(_selectors.infoPanel), _selectors.infoPanel);\n          }\n        }); // click on a part title: toggle the related panel\n\n        $tree.on(\"click\".concat(_selectors.component), _selectors.partLabels, function () {\n          var $panel;\n\n          if (!self.is('disabled')) {\n            $panel = $$1(this).closest(_selectors.parts);\n\n            if (self.togglePanel($panel, _selectors.parts)) {\n              if ($panel.hasClass(_cssCls.active)) {\n                self.openSelected();\n              } else {\n                self.openOnly($panel.find(_selectors.sections).first(), $panel);\n              }\n            }\n          }\n        }); // click on a section title: toggle the related panel\n\n        $tree.on(\"click\".concat(_selectors.component), _selectors.sectionLabels, function () {\n          if (!self.is('disabled')) {\n            self.togglePanel($$1(this).closest(_selectors.sections), _selectors.sections);\n          }\n        }); // click on an item: jump to the position\n\n        $tree.on(\"click\".concat(_selectors.component), _selectors.itemLabels, function (event) {\n          var $item, $target;\n\n          if (!self.is('disabled')) {\n            $item = $$1(this).closest(_selectors.items);\n\n            if (!$item.hasClass(_cssCls.disabled)) {\n              $target = $$1(event.target);\n\n              if (self.config.canFlag && $target.is(_selectors.icons) && !$component.hasClass(_cssCls.collapsed)) {\n                // click on the icon, just flag the item, unless the panel is collapsed\n                if (!$item.hasClass(_cssCls.unseen) && !$item.hasClass(_cssCls.info)) {\n                  flagItem($item);\n                }\n              } else if (!$item.hasClass(_cssCls.active)) {\n                // go to the selected item\n                self.select($item);\n                jump($item);\n              }\n            }\n          }\n        }); // click on the start button inside a linear part: jump to the position\n\n        $tree.on(\"click\".concat(_selectors.component), _selectors.linearStart, function () {\n          var $btn;\n\n          if (!self.is('disabled')) {\n            $btn = $$1(this); // go to the first item of the linear part\n\n            if (!$btn.hasClass(_cssCls.disabled)) {\n              $btn.addClass(_cssCls.disabled);\n              jump($btn);\n            }\n          }\n        }); // click on a filter button\n\n        $filterBar.on(\"click\".concat(_selectors.component), _selectors.filter, function () {\n          var $btn, mode;\n\n          if (!self.is('disabled')) {\n            $btn = $$1(this);\n            mode = $btn.data('mode'); // select the button\n\n            $filters.removeClass(_cssCls.active);\n            $filters.attr('aria-selected', false);\n            $component.removeClass(_cssCls.collapsed);\n            $btn.addClass(_cssCls.active);\n            $btn.attr('aria-selected', true); // filter the items\n\n            self.filter(mode); //after filtering, ensure that the active item (if exists) is visible\n\n            self.autoScroll();\n          }\n        });\n      }); // set default filter\n\n      navigator.currentFilter = 'all'; // the component will be ready\n\n      return navigator.init(config);\n    }\n\n    return navigatorFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/review/navigatorFizzy',['lodash', 'i18n', 'ui/component', 'ui/itemButtonList', 'taoQtiTest/runner/helpers/map', 'handlebars'], function (_, __, componentFactory, itemButtonListFactory, mapHelper, Handlebars) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    componentFactory = componentFactory && Object.prototype.hasOwnProperty.call(componentFactory, 'default') ? componentFactory['default'] : componentFactory;\n    itemButtonListFactory = itemButtonListFactory && Object.prototype.hasOwnProperty.call(itemButtonListFactory, 'default') ? itemButtonListFactory['default'] : itemButtonListFactory;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      \n      return \" hidden\";\n      }\n\n      buffer += \"<div class=\\\"qti-panel qti-navigator\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.hidden), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" qti-navigator-fizzy\\\">\\n    <div class=\\\"qti-navigator-header\\\">\\n        <div class=\\\"qti-navigator-text\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Test overview\", options) : helperMissing.call(depth0, \"__\", \"Test overview\", options)))\n        + \"</div>\\n        <a class=\\\"icon-close\\\" href=\\\"#\\\" onclick=\\\"return false\\\" aria-hidden=\\\"true\\\"></a>\\n    </div>\\n    <nav class=\\\"qti-navigator-tree\\\"></nav>\\n    <div id=\\\"qti-navigator-linear\\\" class=\\\"qti-navigator-linear\\\">\\n        <p class=\\\"qti-navigator-message\\\">\\n            \"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n        + \"\\n        </p>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function navigatorTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n    \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.parts), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n        \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.sections), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n            <li class=\\\"qti-navigator-section\\\">\\n                <div class=\\\"qti-navigator-label\\\" title=\\\"\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\\n                    \";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\n                </div>\\n                <div class=\\\"qti-navigator-items\\\"></div>\\n            </li>\\n        \";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      \n      return \"\\n    <li class=\\\"qti-navigator-section\\\">\\n        <div class=\\\"qti-navigator-items\\\"></div>\\n    </li>\\n\";\n      }\n\n      buffer += \"<ol class=\\\"qti-navigator-sections plain\\\">\\n\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.displaySectionTitles), {hash:{},inverse:self.program(5, program5, data),fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</ol>\\n\";\n      return buffer;\n      });\n    function navigatorTreeTpl(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Some default values\n     * @type {Object}\n     * @private\n     */\n\n    var _defaults = {\n      scope: 'test',\n      preventsUnseen: true\n    };\n    /**\n     * List of common CSS selectors\n     * @type {Object}\n     * @private\n     */\n\n    var _selectors = {\n      component: '.qti-navigator',\n      tree: '.qti-navigator-tree',\n      linearState: '.qti-navigator-linear',\n      closeButton: '.icon-close',\n      itemButtonListContainer: '.qti-navigator-items'\n    };\n    /**\n     * @param {Object} config\n     * @param {String} [config.scope] Limit the review screen to a particular scope: test, testPart, testSection\n     * @param {Boolean} [config.preventsUnseen] Prevents the test taker to access unseen items\n     * @returns {*}\n     */\n\n    function navigatorFactory(config) {\n      var component;\n      /**\n       * Handle click on an item: jump to the position, if allowed\n       * @param {String} itemId\n       */\n\n      function onItemClick(itemId) {\n        var item = mapHelper.getItem(component.map, itemId);\n        var activeItem = mapHelper.getItem(component.map, component.testContext.itemIdentifier);\n\n        if (item && item.id && !component.is('disabled')) {\n          if (!(component.disableUnseenItems && !item.viewed) && (!activeItem || item.position !== activeItem.position)) {\n            component.select(item.position);\n            /**\n             * A jump to a particular item is required\n             * @event navigator#jump\n             * @param {Number} position - The item position on which jump\n             */\n\n            component.trigger('jump', item.position);\n          }\n        }\n      }\n      /**\n       * Render items\n       * @param {Object} fizzyItemButtonMap - list of items in format needed for rendering\n       * @param {String} activeItemId\n       */\n\n\n      function renderItemButtonListComponents(fizzyItemButtonMap, activeItemId) {\n        component.itemButtonListComponents.forEach(function (c) {\n          return c.destroy();\n        });\n        component.itemButtonListComponents = [];\n        component.controls.$tree.find(_selectors.itemButtonListContainer).each(function (index, itemButtonListContainerElem) {\n          var itemButtonListComponent = itemButtonListFactory({\n            items: fizzyItemButtonMap.sections[index].items,\n            scrollContainer: component.controls.$tree\n          }).render(itemButtonListContainerElem).on('click', function (_ref) {\n            var id = _ref.id;\n            return onItemClick(id);\n          });\n          component.itemButtonListComponents.push(itemButtonListComponent);\n        });\n        component.itemButtonListComponents.forEach(function (c) {\n          return c.setActiveItem(activeItemId);\n        });\n      }\n      /**\n       * Get list of items in format needed for rendering\n       * @param {Object} scopedMap - test map, limited to the scope\n       * @param {Boolean} disableUnseenItems\n       * @returns {Object}\n       */\n\n\n      function getFizzyItemButtonMap(scopedMap, disableUnseenItems) {\n        var _component$getConfig = component.getConfig(),\n            displaySectionTitles = _component$getConfig.displaySectionTitles,\n            displayItemTooltip = _component$getConfig.displayItemTooltip;\n\n        var nonInformationalCount = 0;\n        var fizzyMap = {\n          sections: []\n        };\n\n        _.forEach(scopedMap.parts, function (part) {\n          _.forEach(part.sections, function (dataSection) {\n            var fizzySection;\n\n            if (displaySectionTitles) {\n              fizzySection = {\n                label: dataSection.label,\n                items: []\n              };\n              fizzyMap.sections.push(fizzySection);\n            } else {\n              if (fizzyMap.sections.length) {\n                fizzySection = fizzyMap.sections[0];\n              } else {\n                fizzySection = {\n                  items: []\n                };\n                fizzyMap.sections.push(fizzySection);\n              }\n            }\n\n            _.forEach(dataSection.items, function (dataItem) {\n              if (!dataItem.informational) {\n                nonInformationalCount++;\n              }\n\n              var fizzyItem = {\n                id: dataItem.id,\n                position: dataItem.position\n              };\n              fizzySection.items.push(fizzyItem);\n              fizzyItem.numericLabel = dataItem.informational ? '' : \"\".concat(nonInformationalCount);\n\n              if (dataItem.informational) {\n                fizzyItem.icon = 'info';\n                fizzyItem.ariaLabel = __('Informational item');\n              } else if (dataItem.flagged) {\n                fizzyItem.icon = 'flagged';\n                fizzyItem.ariaLabel = __('Bookmarked question %s', nonInformationalCount);\n              } else {\n                fizzyItem.icon = null;\n                fizzyItem.ariaLabel = __('Question %s', nonInformationalCount);\n              }\n\n              if (dataItem.answered) {\n                fizzyItem.status = 'answered';\n              } else if (dataItem.viewed) {\n                fizzyItem.status = 'viewed';\n              } else {\n                fizzyItem.status = 'unseen';\n              }\n\n              if (disableUnseenItems && !dataItem.viewed) {\n                // disables all unseen items to prevent the test taker has access to.\n                fizzyItem.disabled = true;\n              } else if (displayItemTooltip) {\n                fizzyItem.title = dataItem.label;\n              }\n            });\n          });\n        });\n\n        return fizzyMap;\n      }\n      /**\n       *\n       * @type {Object}\n       */\n\n\n      var navigatorApi = {\n        /**\n         * Set the marked state of an item\n         * @param {Number} position\n         * @param {Boolean} flag\n         */\n        setItemFlag: function setItemFlag(position, flag) {\n          var updatedMap = _.cloneDeep(this.map);\n\n          var updatedItem = mapHelper.getItemAt(updatedMap, position);\n\n          if (updatedItem && updatedItem.id) {\n            updatedItem.flagged = flag;\n            var updatedScopeMap = mapHelper.getScopeMapFromContext(updatedMap, this.testContext, this.config.scope);\n            var updatedFizzyMap = getFizzyItemButtonMap(updatedScopeMap, this.disableUnseenItems);\n            var updatedItemData;\n\n            _.forEach(updatedFizzyMap.sections, function (fizzySection) {\n              updatedItemData = _.find(fizzySection.items, function (fizzyItem) {\n                return fizzyItem.id === updatedItem.id;\n              });\n\n              if (updatedItemData) {\n                return false;\n              }\n            });\n\n            this.itemButtonListComponents.forEach(function (c) {\n              return c.updateItem(updatedItem.id, updatedItemData);\n            });\n          }\n        },\n\n        /**\n         * Update the config\n         * @returns {navigatorApi}\n         */\n        updateConfig: function updateConfig() {\n          //not implemented\n          return this;\n        },\n\n        /**\n         * Updates the review screen\n         * @param {Object} map The current test map\n         * @param {Object} context The current test context\n         * @returns {navigatorApi}\n         * @fires navigator#update\n         */\n        update: function update(map, context) {\n          var scopedMap = mapHelper.getScopeMapFromContext(map, context, this.config.scope);\n          scopedMap.displaySectionTitles = this.getConfig().displaySectionTitles;\n          var activeItemId = context.itemIdentifier;\n          var isSkipaheadEnabled = mapHelper.hasItemCategory(map, activeItemId, 'x-tao-option-review-skipahead');\n          this.map = map;\n          this.testContext = context;\n          this.disableUnseenItems = this.config.preventsUnseen && !isSkipaheadEnabled; // rebuild the tree\n\n          var testPart = mapHelper.getPart(map, context.testPartId);\n\n          if (!testPart.isLinear) {\n            this.setState('skipahead-enabled', isSkipaheadEnabled);\n            this.setState('prevents-unseen', this.config.preventsUnseen);\n            this.controls.$linearState.hide();\n            this.controls.$tree.html(navigatorTreeTpl(scopedMap));\n            var fizzyItemButtonMap = getFizzyItemButtonMap(scopedMap, this.disableUnseenItems);\n            renderItemButtonListComponents(fizzyItemButtonMap, activeItemId);\n          } else {\n            this.controls.$linearState.show();\n            this.controls.$tree.empty();\n          }\n          /**\n           * @event navigator#update the navigation data have changed\n           */\n\n\n          this.trigger('update');\n          return this;\n        },\n\n        /**\n         * Selects an item\n         * @param {Number} position The item's position\n         */\n        select: function select(position) {\n          var previousPosition = 0;\n          var previousItem = mapHelper.getItem(this.map, this.testContext.itemIdentifier);\n\n          if (previousItem && previousItem.id) {\n            previousPosition = previousItem.position;\n          }\n\n          var item = mapHelper.getItemAt(this.map, parseInt(position));\n\n          if (item && item.id) {\n            this.itemButtonListComponents.forEach(function (c) {\n              return c.setActiveItem(item.id);\n            });\n          }\n          /**\n           * An item is selected\n           * @param {Number} position - The item position on which select\n           * @param {Number} previousPosition - The item position from which select\n           * @event navigator#selected\n           */\n\n\n          this.trigger('selected', position, previousPosition);\n        }\n      };\n      component = componentFactory(navigatorApi, _defaults).setTemplate(navigatorTpl).on('init', function () {\n        this.itemButtonListComponents = [];\n      }).on('destroy', function () {\n        this.controls = null;\n        this.itemButtonListComponents.forEach(function (c) {\n          return c.destroy();\n        });\n        this.itemButtonListComponents = [];\n      }).on('render', function () {\n        var $component = this.getElement();\n        this.controls = {\n          $tree: $component.find(_selectors.tree),\n          $linearState: $component.find(_selectors.linearState),\n          $closeButton: $component.find(_selectors.closeButton)\n        };\n        this.controls.$closeButton.on('click', function (e) {\n          e.preventDefault();\n          /**\n           * Review screen should be closed\n           * @event navigator#close\n           */\n\n          component.trigger('close');\n        });\n      }).on('enable', function () {\n        this.itemButtonListComponents.forEach(function (c) {\n          return c.enable();\n        });\n      }).on('disable', function () {\n        this.itemButtonListComponents.forEach(function (c) {\n          return c.disable();\n        });\n      });\n      return component.init(config);\n    }\n\n    return navigatorFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/review/review',['lodash', 'i18n', 'ui/hider', 'util/shortcut', 'util/namespace', 'taoTests/runner/plugin', 'taoQtiTest/runner/helpers/map', 'taoQtiTest/runner/plugins/navigation/review/navigator', 'taoQtiTest/runner/plugins/navigation/review/navigatorFizzy'], function (_, __, hider, shortcut, namespaceHelper, pluginFactory, mapHelper, defaultNavigatorFactory, fizzyNavigatorFactory) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    defaultNavigatorFactory = defaultNavigatorFactory && Object.prototype.hasOwnProperty.call(defaultNavigatorFactory, 'default') ? defaultNavigatorFactory['default'] : defaultNavigatorFactory;\n    fizzyNavigatorFactory = fizzyNavigatorFactory && Object.prototype.hasOwnProperty.call(fizzyNavigatorFactory, 'default') ? fizzyNavigatorFactory['default'] : fizzyNavigatorFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * The display states of the buttons\n     */\n\n    var buttonData = {\n      setFlag: {\n        control: 'set-item-flag',\n        title: __('Flag the current item for later review'),\n        icon: 'anchor',\n        text: __('Flag for Review')\n      },\n      unsetFlag: {\n        control: 'unset-item-flag',\n        title: __('Do not flag the current item for later review'),\n        icon: 'anchor',\n        text: __('Unflag for Review')\n      },\n      setFlagBookmarked: {\n        control: 'set-item-flag',\n        title: __('Bookmark the current question for later review'),\n        icon: 'bookmark',\n        text: __('Bookmark question')\n      },\n      unsetFlagBookmarked: {\n        control: 'unset-item-flag',\n        title: __('Do not bookmark the current question for later review'),\n        icon: 'bookmark-outline',\n        text: __('Bookmark question')\n      },\n      showReview: {\n        control: 'show-review',\n        title: __('Show the review screen'),\n        icon: 'right',\n        text: __('Show Review')\n      },\n      hideReview: {\n        control: 'hide-review',\n        title: __('Hide the review screen'),\n        icon: 'left',\n        text: __('Hide Review')\n      },\n      showTestOverview: {\n        control: 'show-test-overview',\n        title: __('Show test overview panel'),\n        icon: 'desktop-preview',\n        text: __('Test overview')\n      },\n      hideTestOverview: {\n        control: 'hide-test-overview',\n        title: __('Hide test overview panel'),\n        icon: 'desktop-preview',\n        text: __('Test overview')\n      }\n    };\n    /**\n     * Get the flagged value for the item at that position\n     * @param {Object} testMap\n     * @param {Number} position - the item position\n     * @returns {Boolean}\n     */\n\n    function isItemFlagged(testMap, position) {\n      var item = mapHelper.getItemAt(testMap, position);\n      return !!item.flagged;\n    }\n    /**\n     * Update the button based on the provided data\n     * @param {Component} button - the element to update\n     * @param {Object} data - the button data\n     */\n\n\n    function updateButton(button, data) {\n      var $button = button.getElement();\n\n      if (button.is('rendered')) {\n        if ($button.data('control') !== data.control) {\n          $button.data('control', data.control).attr('title', data.title);\n          $button.find('.icon').attr('class', \"icon icon-\".concat(data.icon));\n          $button.find('.text').text(data.text);\n\n          if (data.control.includes('flag') || data.control.includes('overview')) {\n            if (button.is('active')) {\n              button.turnOff();\n            } else {\n              button.turnOn();\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Checks if the current context allows to mark the item for review\n     * @param {Object} testRunner\n     * @returns {Boolean}\n     */\n\n\n    function canFlag(testRunner) {\n      var testContext = testRunner.getTestContext();\n      var testMap = testRunner.getTestMap();\n      var item = testRunner.getCurrentItem();\n      var testPart = testRunner.getCurrentPart();\n      var markReviewCategory = mapHelper.hasItemCategory(testMap, testContext.itemIdentifier, 'markReview', true);\n      return !!(!testPart.isLinear && markReviewCategory && !(item && item.informational));\n    }\n    /**\n     * Creates the timer plugin\n     */\n\n\n    var review = pluginFactory({\n      name: 'review',\n\n      /**\n       * Initializes the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        var testContext = testRunner.getTestContext();\n        var testMap = testRunner.getTestMap();\n        var testRunnerOptions = testRunner.getOptions();\n        var pluginShortcuts = (testRunnerOptions.shortcuts || {})[this.getName()] || {};\n        var pluginConfig = this.getConfig();\n        var navigatorConfig = testRunnerOptions.review || {\n          defaultOpen: false\n        };\n        navigatorConfig = Object.assign({}, navigatorConfig, pluginConfig);\n        this.isFizzyLayout = navigatorConfig && navigatorConfig.reviewLayout === 'fizzy';\n        var previousItemPosition;\n        /**\n         * Gets the definition of the flagItem button related to the context\n         * @param {Boolean} flag - the flag status\n         * @returns {Object}\n         */\n\n        function getFlagItemButtonData(flag) {\n          var dataType = flag ? 'unsetFlag' : 'setFlag';\n\n          if (self.isFizzyLayout) {\n            dataType = flag ? 'unsetFlagBookmarked' : 'setFlagBookmarked';\n          }\n\n          return buttonData[dataType];\n        }\n        /**\n         * Gets the definition of the toggleNavigator button related to the context\n         * @param {Object} navigator - the navigator component\n         * @returns {Object}\n         */\n\n\n        function getToggleButtonData(navigator) {\n          var dataType = navigator.is('hidden') ? 'showReview' : 'hideReview';\n\n          if (self.isFizzyLayout) {\n            dataType = navigator.is('hidden') ? 'showTestOverview' : 'hideTestOverview';\n          }\n\n          return buttonData[dataType];\n        }\n        /**\n         * Retrieve the review categories of the current item\n         * @returns {Object} the calculator categories\n         */\n\n\n        function getReviewCategories() {\n          var currentContext = testRunner.getTestContext();\n          var currentMap = testRunner.getTestMap();\n          return {\n            reviewScreen: mapHelper.hasItemCategory(currentMap, currentContext.itemIdentifier, 'reviewScreen', true),\n            markReview: mapHelper.hasItemCategory(currentMap, currentContext.itemIdentifier, 'markReview', true)\n          };\n        }\n        /**\n         * Tells if the component is enabled\n         * @returns {Boolean}\n         */\n\n\n        function isPluginAllowed() {\n          var categories = getReviewCategories();\n          return navigatorConfig.enabled && categories.reviewScreen;\n        }\n        /**\n         * Mark an item for review\n         * @param {Number} position\n         * @param {Boolean} flag\n         * @returns {Promise}\n         */\n\n\n        function flagItem(position, flag) {\n          self.disable();\n          return testRunner.getProxy().callTestAction('flagItem', {\n            position: position,\n            flag: flag\n          }).then(function () {\n            var item = mapHelper.getItemAt(testRunner.getTestMap(), position); //update the value in the current testMap\n\n            item.flagged = flag; // update the display of the flag button\n\n            updateButton(self.flagItemButton, getFlagItemButtonData(flag)); // update the item state\n\n            self.navigator.setItemFlag(position, flag);\n            self.enable();\n          }).catch(function () {\n            // rollback on the item flag\n            self.navigator.setItemFlag(position, !flag);\n            self.enable();\n          });\n        }\n        /**\n         * Mark the current item for review\n         */\n\n\n        function flagCurrentItem() {\n          if (self.getState('enabled') !== false) {\n            var itemPosition = testRunner.getTestContext().itemPosition;\n            var flagStatus = isItemFlagged(testRunner.getTestMap(), itemPosition);\n            flagItem(itemPosition, !flagStatus);\n          }\n        }\n        /**\n         * Shows/hides the review panel\n         *\n         * @param [{Boolean} forcedState], true will show the panel\n         */\n\n\n        function togglePanel(forcedState) {\n          var isHidden = _.isUndefined(forcedState) ? self.navigator.is('hidden') : forcedState;\n\n          if (isHidden) {\n            self.explicitlyHidden = false;\n            self.navigator.show();\n          } else {\n            self.explicitlyHidden = true;\n            self.navigator.hide();\n          }\n\n          updateButton(self.toggleButton, getToggleButtonData(self.navigator));\n        }\n\n        var navigatorFactory = this.isFizzyLayout ? fizzyNavigatorFactory : defaultNavigatorFactory;\n        this.navigator = navigatorFactory(navigatorConfig).on('selected', function (position, previousPosition) {\n          previousItemPosition = previousPosition;\n        }).on('jump', function (position) {\n          if (self.getState('enabled') !== false) {\n            self.disable();\n            testRunner.jump(position, 'item');\n          }\n        }).on('flag', function (position, flag) {\n          if (self.getState('enabled') !== false) {\n            flagItem(position, flag);\n          }\n        }).on('close', function () {\n          testRunner.trigger('tool-reviewpanel');\n        }).render(); // restore current item in the navigator if movement not allowed\n\n        testRunner.on('alert.notallowed', function () {\n          self.navigator.select(previousItemPosition);\n        });\n        this.explicitlyHidden = false; // register buttons in the toolbox component\n\n        this.toggleButton = this.getAreaBroker().getToolbox().createEntry(getToggleButtonData(this.navigator));\n        this.toggleButton.on('click', function (e) {\n          e.preventDefault();\n          testRunner.trigger('tool-reviewpanel');\n        });\n        this.flagItemButton = this.getAreaBroker().getToolbox().createEntry(getFlagItemButtonData(isItemFlagged(testMap, testContext.itemPosition)));\n        this.flagItemButton.on('click', function (e) {\n          e.preventDefault();\n          testRunner.trigger('tool-flagitem');\n        });\n\n        if (testRunnerOptions.allowShortcuts) {\n          if (pluginShortcuts.flag) {\n            shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.flag, this.getName(), true), function () {\n              testRunner.trigger('tool-flagitem');\n            }, {\n              avoidInput: true\n            });\n          }\n\n          if (pluginShortcuts.toggle) {\n            shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n              testRunner.trigger('tool-reviewpanel');\n            }, {\n              avoidInput: true\n            });\n          }\n        }\n\n        if (!isPluginAllowed()) {\n          this.hide();\n        } //disabled by default\n\n\n        this.disable();\n        togglePanel(navigatorConfig.defaultOpen); //change plugin state\n\n        testRunner.on('render', function () {\n          if (isPluginAllowed()) {\n            self.show();\n            updateButton(self.toggleButton, getToggleButtonData(self.navigator));\n          } else {\n            self.hide();\n          }\n        }).on('loaditem', function () {\n          var context = testRunner.getTestContext();\n          var map = testRunner.getTestMap();\n          var testPart = testRunner.getCurrentPart();\n          var categories = getReviewCategories();\n\n          if (isPluginAllowed()) {\n            updateButton(self.flagItemButton, getFlagItemButtonData(isItemFlagged(map, context.itemPosition)));\n            self.navigator.update(map, context).updateConfig({\n              canFlag: !testPart.isLinear && categories.markReview\n            });\n            self.show();\n            updateButton(self.toggleButton, getToggleButtonData(self.navigator));\n          } else {\n            self.hide();\n          }\n        }).on('enabletools enablenav', function () {\n          if (isPluginAllowed()) {\n            self.enable();\n          }\n        }).on('disabletools disablenav', function () {\n          if (isPluginAllowed()) {\n            self.disable();\n          }\n        }).on('hidenav', function () {\n          self.hide();\n        }).on('shownav', function () {\n          if (isPluginAllowed()) {\n            self.show();\n          }\n        }).on('tool-flagitem', function () {\n          if (isPluginAllowed() && canFlag(testRunner)) {\n            flagCurrentItem();\n          }\n        }).on('tool-reviewpanel', function () {\n          if (isPluginAllowed() && self.getState('enabled')) {\n            togglePanel();\n          }\n        });\n      },\n\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        var areaBroker = this.getAreaBroker();\n        var $panelContainer = areaBroker.getPanelArea();\n        $panelContainer.append(this.navigator.getElement());\n      },\n\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(\".\".concat(this.getName()));\n        this.navigator.destroy();\n      },\n\n      /**\n       * Enables the button\n       */\n      enable: function enable() {\n        var testRunner = this.getTestRunner();\n        var testContext = testRunner.getTestContext();\n        var testMap = testRunner.getTestMap();\n        this.flagItemButton.enable();\n        this.toggleButton.enable();\n        this.navigator.enable();\n\n        if (isItemFlagged(testMap, testContext.itemPosition)) {\n          this.flagItemButton.turnOn();\n        } else {\n          this.flagItemButton.turnOff();\n        }\n\n        if (this.isFizzyLayout) {\n          if (!this.explicitlyHidden) {\n            this.toggleButton.turnOn();\n          } else {\n            this.toggleButton.turnOff();\n          }\n        }\n      },\n\n      /**\n       * Disables the button\n       */\n      disable: function disable() {\n        this.flagItemButton.disable();\n        this.flagItemButton.turnOff();\n        this.toggleButton.disable();\n\n        if (this.isFizzyLayout) {\n          this.toggleButton.turnOff();\n        }\n\n        this.navigator.disable();\n      },\n\n      /**\n       * Shows the button\n       */\n      show: function show() {\n        var testRunner = this.getTestRunner();\n\n        if (canFlag(testRunner)) {\n          this.flagItemButton.show();\n        } else {\n          this.flagItemButton.hide();\n        }\n\n        this.toggleButton.show();\n\n        if (!this.explicitlyHidden) {\n          this.navigator.show();\n        } else {\n          this.navigator.hide();\n        }\n      },\n\n      /**\n       * Hides the button\n       */\n      hide: function hide() {\n        this.flagItemButton.hide();\n        this.toggleButton.hide();\n        this.navigator.hide();\n      }\n    });\n\n    return review;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/skip',['jquery', 'i18n', 'ui/hider', 'taoTests/runner/plugin', 'taoQtiTest/runner/helpers/messages', 'handlebars', 'taoQtiTest/runner/helpers/navigation', 'taoQtiTest/runner/helpers/map'], function ($$1, __, hider, pluginFactory, messages, Handlebars, navigationHelper, mapHelper) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    messages = messages && Object.prototype.hasOwnProperty.call(messages, 'default') ? messages['default'] : messages;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    navigationHelper = navigationHelper && Object.prototype.hasOwnProperty.call(navigationHelper, 'default') ? navigationHelper['default'] : navigationHelper;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \" \";\n      if (helper = helpers.className) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.className); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n        aria-\"\n        + escapeExpression(((stack1 = (data == null || data === false ? data : data.key)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"=\\\"\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\"\\n    \";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span class=\\\"icon icon-\";\n      if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"></span>\";\n      return buffer;\n      }\n    function program6(depth0,data) {\n      \n      \n      return \" no-label\";\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span class=\\\"text\\\">\";\n      if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\";\n      return buffer;\n      }\n\n      buffer += \"<li\\n    data-control=\\\"\";\n      if (helper = helpers.control) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.control); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    class=\\\"small btn-info action\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.className), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n    title=\\\"\";\n      if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    role=\\\"button\\\"\\n    \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.aria), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\" onclick=\\\"return false\\\" aria-hidden=\\\"true\\\" >\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.icon), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </a>\\n</li>\\n\";\n      return buffer;\n      });\n    function buttonTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * The display of the skip\n     */\n\n    var buttonData = {\n      skip: {\n        control: 'skip',\n        title: __('Skip and go to the next item'),\n        icon: 'external',\n        text: __('Skip')\n      },\n      end: {\n        control: 'skip-end',\n        title: __('Skip and go to the end of the test'),\n        icon: 'external',\n        text: __('Skip and end test')\n      }\n    };\n    /**\n     * Create the button based on the current context\n     * @param {Object} testRunner - testRunner\n     * @returns {jQueryElement} the button\n     */\n\n    var createElement = function createElement(testRunner) {\n      var testContext = testRunner.getTestContext();\n      var testMap = testRunner.getTestMap();\n      var isLast = navigationHelper.isLast(testMap, testContext.itemIdentifier);\n      var dataType = isLast ? 'end' : 'skip';\n      return $$1(buttonTpl(buttonData[dataType]));\n    };\n    /**\n     * Update the button based on the context\n     * @param {jQueryElement} $element - the element to update\n     * @param {Boolean} [isLast=false] - are we on the last item ?\n     */\n\n\n    var updateElement = function updateElement($element) {\n      var isLast = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var dataType = isLast ? 'end' : 'skip';\n      var button = buttonData[dataType];\n\n      if (button && $element.attr('data-control') !== button.control) {\n        $element.attr('data-control', button.control).attr('title', button.title).find('.text').text(button.text);\n      }\n    };\n    /**\n     * Returns the configured plugin\n     */\n\n\n    var skip = pluginFactory({\n      name: 'skip',\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var _this = this;\n\n        var testRunner = this.getTestRunner();\n\n        var toggle = function toggle() {\n          var testContext = testRunner.getTestContext();\n\n          if (testContext.allowSkipping === true) {\n            _this.show();\n\n            return true;\n          }\n\n          _this.hide();\n\n          return false;\n        };\n\n        function doSkip() {\n          testRunner.skip();\n        }\n\n        this.$element = createElement(testRunner);\n        this.$element.on('click', function (e) {\n          var enable = _this.enable.bind(_this);\n\n          var testContext = testRunner.getTestContext();\n          var testMap = testRunner.getTestMap();\n          var isLast = navigationHelper.isLast(testMap, testContext.itemIdentifier);\n          var endTestWarning = mapHelper.hasItemCategory(testMap, testContext.itemIdentifier, 'endTestWarning', true);\n          e.preventDefault();\n\n          if (_this.getState('enabled') !== false) {\n            _this.disable();\n\n            if (endTestWarning && isLast) {\n              testRunner.trigger('confirm.endTest', messages.getExitMessage('test', testRunner), doSkip, // if the test taker accept\n              enable // if the test taker refuse\n              );\n            } else {\n              doSkip();\n            }\n          }\n        });\n        toggle();\n        this.disable();\n        testRunner.on('loaditem', function () {\n          if (toggle()) {\n            var testContext = testRunner.getTestContext();\n            var testMap = testRunner.getTestMap();\n            var isLast = navigationHelper.isLast(testMap, testContext.itemIdentifier);\n            updateElement(_this.$element, isLast);\n          }\n        }).on('enablenav', function () {\n          return _this.enable();\n        }).on('disablenav', function () {\n          return _this.disable();\n        }).on('hidenav', function () {\n          return _this.hide();\n        }).on('shownav', function () {\n          return _this.show();\n        });\n      },\n\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        var $container = this.getAreaBroker().getNavigationArea();\n        $container.append(this.$element);\n      },\n\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        this.$element.remove();\n      },\n\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.$element.removeProp('disabled').removeClass('disabled');\n      },\n\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.$element.prop('disabled', true).addClass('disabled');\n      },\n\n      /**\n       * Show the button\n       */\n      show: function show() {\n        hider.show(this.$element);\n      },\n\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        hider.hide(this.$element);\n      }\n    });\n\n    return skip;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/validateResponses',['lodash', 'i18n', 'taoTests/runner/plugin', 'taoQtiTest/runner/helpers/currentItem'], function (_, __, pluginFactory, currentItemHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    currentItemHelper = currentItemHelper && Object.prototype.hasOwnProperty.call(currentItemHelper, 'default') ? currentItemHelper['default'] : currentItemHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA ;\n     */\n    var pluginName = 'validateResponses';\n    /**\n     * Plugin\n     * @returns {Object}\n     */\n\n    var validateResponses = pluginFactory({\n      /**\n       * Plugin name\n       * @type {String}\n       */\n      name: pluginName,\n\n      /**\n       * Initialize plugin (called during runner's initialization)\n       * @returns {this}\n       */\n      init: function init() {\n        var testRunner = this.getTestRunner();\n        var testRunnerOptions = testRunner.getOptions();\n        var pluginConfig = this.getConfig();\n        testRunner.before('move', function (e, direction) {\n          var testContext = testRunner.getTestContext();\n          var isInteracting = !testRunner.getItemState(testContext.itemIdentifier, 'disabled');\n\n          if (!pluginConfig.validateOnPreviousMove && direction === 'previous') {\n            return Promise.resolve();\n          }\n\n          if (isInteracting && testRunnerOptions.enableValidateResponses) {\n            var currenItem = testRunner.getCurrentItem(); //@deprecated use validateResponses from testMap instead of the testContext\n\n            var validateResponses = typeof currenItem.validateResponses === 'boolean' ? currenItem.validateResponses : testContext.validateResponses;\n\n            if (validateResponses) {\n              return new Promise(function (resolve, reject) {\n                if (_.size(currentItemHelper.getDeclarations(testRunner)) === 0) {\n                  return resolve();\n                }\n\n                if (currentItemHelper.isAnswered(testRunner, false)) {\n                  return resolve();\n                }\n\n                if (!testRunner.getState('alerted.notallowed')) {\n                  // Only show one alert for itemSessionControl\n                  testRunner.setState('alerted.notallowed', true);\n                  testRunner.trigger('alert.notallowed', __('A valid response to this item is required.'), function () {\n                    testRunner.trigger('resumeitem');\n                    reject();\n                    testRunner.setState('alerted.notallowed', false);\n                  });\n                }\n              });\n            }\n          }\n        });\n        return this;\n      }\n    });\n\n    return validateResponses;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/warnBeforeLeaving',['i18n', 'taoTests/runner/plugin'], function (__, pluginFactory) { 'use strict';\n\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * There's only a few chance to have this message displayed.\n     * Most browsers doesn't support custom message anymore.\n     * See https://www.chromestatus.com/feature/5349061406228480\n     */\n\n    var warnMessage = __('Please confirm you want to leave the test.');\n    /**\n     * The beforeunload listener\n     * @param {Event} e\n     * @returns {String} the custom message (for some browser, just need to be a string)\n     */\n\n\n    var warnListener = function warnListener(e) {\n      e.returnValue = warnMessage;\n      return warnMessage;\n    };\n    /**\n     * Plugin factory\n     * @returns {Object}\n     */\n\n\n    var warnBeforeLeaving = pluginFactory({\n      /**\n       * Plugin name\n       * @type {String}\n       */\n      name: 'warnBeforeLeaving',\n\n      /**\n       * Initialize plugin (called during runner's initialization)\n       */\n      init: function init() {\n        this.enable();\n      },\n\n      /**\n       * Destroy plugin (called during runner's destruction)\n       */\n      destroy: function destroy() {\n        this.disable();\n      },\n\n      /**\n       * Enables the warning\n       */\n      enable: function enable() {\n        window.addEventListener('beforeunload', warnListener);\n      },\n\n      /**\n       * Disables the warning\n       */\n      disable: function disable() {\n        window.removeEventListener('beforeunload', warnListener);\n      }\n    });\n\n    return warnBeforeLeaving;\n\n});\n\n","define('taoQtiTest/runner/plugins/security/disableRightClick',['taoTests/runner/plugin'], function (pluginFactory) { 'use strict';\n\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n    var disableRightClick = pluginFactory({\n      name: 'disableRightClick',\n\n      /**\n       * Initializes the plugin (called during runner's init)\n       */\n      init: function init() {\n        var rightClickEvents = ['contextmenu', 'mousedown', 'mouseup'];\n        rightClickEvents.forEach(function (eventName) {\n          window.document.addEventListener(eventName, function disableRightClick(event) {\n            if (event.button === 2) {\n              event.preventDefault();\n            }\n          });\n        });\n      }\n    });\n\n    return disableRightClick;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/answerElimination/eliminator',['lodash', 'i18n', 'ui/hider', 'util/shortcut', 'util/namespace', 'taoQtiTest/runner/helpers/map', 'taoTests/runner/plugin'], function (_, __, hider, shortcut, namespaceHelper, mapHelper, pluginFactory) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n\n    var pluginName = 'eliminator';\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n\n    var actionPrefix = \"tool-\".concat(pluginName, \"-\");\n    /**\n     * Some default options for the plugin\n     * @type {Object}\n     */\n\n    var defaultConfig = {\n      // when hiding the buttons, don't remove existing eliminations\n      removeEliminationsOnClose: false,\n      // when showing the buttons, restore previously set eliminations\n      restoreEliminationsOnOpen: false\n    };\n    /**\n     * Returns the configured plugin\n     */\n\n    var eliminator = pluginFactory({\n      name: pluginName,\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        var $container = testRunner.getAreaBroker().getContentArea().parent();\n        var testRunnerOptions = testRunner.getOptions();\n        var pluginShortcuts = (testRunnerOptions.shortcuts || {})[pluginName] || {};\n        var config = Object.assign({}, defaultConfig, this.getConfig()); // register the button in the toolbox\n\n        this.button = this.getAreaBroker().getToolbox().createEntry({\n          control: 'eliminator',\n          title: __('Eliminate choices'),\n          icon: 'eliminate',\n          text: __('Answer Eliminator')\n        });\n        /**\n         * Checks if the plugin is currently available\n         * @returns {Boolean}\n         */\n\n        function isPluginEnabled() {\n          //to be activated with the special category x-tao-option-eliminator\n          return mapHelper.hasItemCategory(testRunner.getTestMap(), testRunner.getTestContext().itemIdentifier, 'eliminator', true);\n        }\n        /**\n         * Is plugin activated ? if not, then we hide the plugin\n         */\n\n\n        function togglePluginButton() {\n          if (isPluginEnabled()) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        }\n\n        function togglePlugin() {\n          if (!self.$choiceInteractions) {\n            return;\n          }\n\n          self.$choiceInteractions.toggleClass('eliminable');\n\n          if (isEliminable()) {\n            enableEliminator();\n          } else {\n            disableEliminator();\n          }\n        }\n\n        function isEliminable() {\n          if (!self.$choiceInteractions) {\n            return;\n          }\n\n          return self.$choiceInteractions.hasClass('eliminable');\n        }\n\n        function enableEliminator() {\n          var $choices;\n\n          if (!self.$choiceInteractions) {\n            return;\n          }\n\n          $choices = self.$choiceInteractions.find('.qti-choice');\n          self.button.turnOn();\n          self.trigger('start');\n\n          if (config.restoreEliminationsOnOpen) {\n            $choices.each(function () {\n              var input = this.querySelector('.real-label input');\n\n              if (this.dataset.wasEliminated) {\n                this.dataset.wasEliminated = null;\n                this.classList.add('eliminated');\n                input.setAttribute('disabled', 'disabled');\n                input.checked = false;\n              }\n            });\n          }\n        }\n\n        function disableEliminator() {\n          var $choices;\n\n          if (!self.$choiceInteractions) {\n            return;\n          }\n\n          $choices = self.$choiceInteractions.find('.qti-choice');\n          self.$choiceInteractions.removeClass('eliminable');\n          self.button.turnOff();\n          self.trigger('end');\n          $choices.each(function () {\n            if (this.classList.contains('eliminated')) {\n              this.dataset.wasEliminated = true;\n              this.classList.remove('eliminated');\n              this.querySelector('.real-label input').removeAttribute('disabled');\n            }\n          });\n        } //add a new mask each time the button is pressed\n\n\n        this.button.on('click', function (e) {\n          e.preventDefault();\n          testRunner.trigger(\"\".concat(actionPrefix, \"toggle\"));\n        }); // handle the plugin's shortcuts\n\n        if (testRunnerOptions.allowShortcuts) {\n          _.forEach(pluginShortcuts, function (command, key) {\n            shortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), function () {\n              // just fire the action using the event loop\n              testRunner.trigger(actionPrefix + key);\n            }, {\n              avoidInput: true\n            });\n          });\n        } //start disabled\n\n\n        this.disable(); //update plugin state based on changes\n\n        testRunner.on('loaditem', togglePluginButton).on('renderitem', function conditionalInit() {\n          // show button only when in the presence of choice interactions\n          self.$choiceInteractions = $container.find('.qti-choiceInteraction');\n\n          if (!self.$choiceInteractions.length) {\n            self.hide();\n            return;\n          }\n\n          if (isPluginEnabled()) {\n            self.show();\n          }\n        }).on('enabletools renderitem', function () {\n          self.enable();\n        }).on('disabletools unloaditem', function () {\n          self.disable();\n          disableEliminator();\n        }) // commands that controls the plugin\n        .on(\"\".concat(actionPrefix, \"toggle\"), function () {\n          if (isPluginEnabled()) {\n            togglePlugin();\n          }\n        }) // Answer-eliminator and Answer-masking are mutually exclusive tools\n        .on('tool-answer-masking-toggle', function () {\n          if (isEliminable()) {\n            disableEliminator();\n          }\n        });\n      },\n\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(\".\".concat(pluginName));\n      },\n\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.button.enable();\n      },\n\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.button.disable();\n      },\n\n      /**\n       * Show the button\n       */\n      show: function show() {\n        this.button.show();\n      },\n\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        this.button.hide();\n      }\n    });\n\n    return eliminator;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/answerMasking/answerMasking',['lodash', 'jquery', 'core/statifier', 'ui/component', 'handlebars'], function (_, $$1, statifier, componentFactory, Handlebars) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    statifier = statifier && Object.prototype.hasOwnProperty.call(statifier, 'default') ? statifier['default'] : statifier;\n    componentFactory = componentFactory && Object.prototype.hasOwnProperty.call(componentFactory, 'default') ? componentFactory['default'] : componentFactory;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n      return \"<div class=\\\"answer-mask\\\">\\n    <span class=\\\"answer-mask-toggle\\\"></span>\\n</div>\";\n      });\n    function maskTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n    var ns = '.answerMasking';\n    /**\n     * @param {jQuery} $contentArea - DOM element containing the rendered item\n     */\n\n    function answerMaskingFactory($contentArea) {\n      var answerMasking,\n          allMasks = [],\n          maskApi = {\n        /**\n         * Toggle mask visibility\n         * @returns {component}\n         */\n        toggle: function toggle() {\n          if (this.is('masked')) {\n            return this.reveal();\n          } else {\n            return this.mask();\n          }\n        },\n\n        /**\n         * Show the choice under the current mask\n         * @returns {component}\n         */\n        reveal: function reveal() {\n          var $container = this.getContainer();\n          $container.removeClass('masked');\n          $container.find('input').removeAttr('disabled');\n          this.setState('masked', false);\n          return this;\n        },\n\n        /**\n         * Cover the whole choice with the mask\n         * @returns {component}\n         */\n        mask: function mask() {\n          var $container = this.getContainer();\n          $container.addClass('masked');\n          $container.find('input').attr('disabled', 'disabled');\n          this.setState('masked', true);\n          return this;\n        }\n      };\n      /**\n       * Creates a ui/component to serve as a mask over a QTI Choice\n       * @param {jQuery} $container - the qti-choice element\n       * @returns {component}\n       */\n\n      function createMask($container) {\n        return componentFactory(maskApi).setTemplate(maskTpl).on('render', function () {\n          var self = this,\n              $component = this.getElement();\n          $component.on(\"click\".concat(ns), function (e) {\n            e.stopPropagation();\n            e.preventDefault();\n            self.toggle();\n          });\n        }).on('destroy', function () {\n          var $component = this.getElement();\n          $component.off(ns);\n        }).init().render($container).mask();\n      }\n      /**\n       * The answer masking helper\n       */\n\n\n      answerMasking = {\n        /**\n         * Enable the answer masking functionality by creating masks over the Qti Choices\n         */\n        enable: function enable() {\n          var $choiceInteractions = $contentArea.find('.qti-choiceInteraction'),\n              $qtiChoices = $contentArea.find('.qti-choice');\n          allMasks = [];\n          $choiceInteractions.addClass('maskable');\n          $qtiChoices.each(function () {\n            var $choice = $$1(this);\n            allMasks.push(createMask($choice));\n          });\n          this.setState('enabled', true);\n        },\n\n        /**\n         * Remove any answerMasking-related markup from the rendered item\n         */\n        disable: function disable() {\n          var $choiceInteractions = $contentArea.find('.qti-choiceInteraction');\n          $choiceInteractions.removeClass('maskable');\n          allMasks.forEach(function (mask) {\n            mask.reveal(); // remove class on container\n\n            mask.destroy();\n          });\n          allMasks = [];\n          this.setState('enabled', false);\n        },\n\n        /**\n         * Return the current state of the masks\n         * @returns {Boolean[]} - true if the choice is masked, false if the choice is revealed\n         */\n        getMasksState: function getMasksState() {\n          var state = allMasks.map(function (mask) {\n            return mask.is('masked');\n          });\n          return state;\n        },\n\n        /**\n         * Restore a previously saved state for the masked choices\n         * @param {Boolean[]} state - array of boolean, most probably given by the getMasksState method\n         */\n        setMasksState: function setMasksState(state) {\n          state = state || [];\n          state.forEach(function (masked, index) {\n            var mask = allMasks[index];\n\n            if (_.isObject(mask) && _.isFunction(mask.reveal) && !masked) {\n              mask.reveal();\n            }\n          });\n        }\n      };\n      statifier(answerMasking);\n      return answerMasking;\n    }\n\n    return answerMaskingFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/answerMasking/plugin',['i18n', 'taoTests/runner/plugin', 'ui/hider', 'util/shortcut', 'util/namespace', 'taoQtiTest/runner/helpers/map', 'taoQtiTest/runner/plugins/tools/answerMasking/answerMasking'], function (__, pluginFactory, hider, shortcut, namespaceHelper, mapHelper, answerMaskingFactory) { 'use strict';\n\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    answerMaskingFactory = answerMaskingFactory && Object.prototype.hasOwnProperty.call(answerMaskingFactory, 'default') ? answerMaskingFactory['default'] : answerMaskingFactory;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n\n    var pluginName = 'answer-masking';\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n\n    var actionPrefix = \"tool-\".concat(pluginName, \"-\");\n    /**\n     * Stores the masking state for each item in the test\n     * @type {Object}\n     */\n\n    var itemStates = {};\n    /**\n     * Default Configuration\n     */\n\n    var defaultConfig = {\n      restoreStateOnToggle: true,\n      restoreStateOnMove: true\n    };\n    /**\n     * Returns the configured plugin\n     */\n\n    var plugin = pluginFactory({\n      name: pluginName,\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        var testRunnerOptions = testRunner.getOptions();\n        var pluginConfig = Object.assign({}, defaultConfig, this.getConfig());\n        var pluginShortcuts = (testRunnerOptions.shortcuts || {})[pluginName] || {};\n        var $contentArea = this.getAreaBroker().getContentArea();\n        var answerMasking = answerMaskingFactory($contentArea);\n\n        function isPluginEnabled() {\n          //to be activated with the special category x-tao-option-answerMasking\n          var answerMaskingCategory = mapHelper.hasItemCategory(testRunner.getTestMap(), testRunner.getTestContext().itemIdentifier, 'answerMasking', true);\n          return answerMaskingCategory && itemContainsChoiceInteraction();\n        }\n\n        function itemContainsChoiceInteraction() {\n          var $container = self.getAreaBroker().getContentArea().parent();\n          return $container.find('.qti-choiceInteraction').length;\n        }\n\n        function togglePluginButton() {\n          if (isPluginEnabled()) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        }\n\n        function togglePlugin() {\n          if (!answerMasking.getState('enabled')) {\n            enableMasking();\n          } else {\n            disableMasking();\n          }\n        }\n\n        function enableMasking() {\n          var testContext = testRunner.getTestContext(),\n              itemId = testContext.itemIdentifier;\n          answerMasking.enable();\n\n          if (pluginConfig.restoreStateOnToggle) {\n            answerMasking.setMasksState(itemStates[itemId]);\n          }\n\n          self.button.turnOn();\n          self.trigger('start');\n        }\n\n        function disableMasking() {\n          var testContext = testRunner.getTestContext(),\n              itemId = testContext.itemIdentifier;\n\n          if (answerMasking.getState('enabled')) {\n            itemStates[itemId] = answerMasking.getMasksState();\n          }\n\n          answerMasking.disable();\n          self.button.turnOff();\n          self.trigger('end');\n        } // create buttons\n\n\n        this.button = this.getAreaBroker().getToolbox().createEntry({\n          title: __('Answer Masking'),\n          icon: 'result-nok',\n          control: 'answer-masking',\n          text: __('Answer Masking')\n        }); // attach user events\n\n        this.button.on('click', function (e) {\n          e.preventDefault();\n          testRunner.trigger(\"\".concat(actionPrefix, \"toggle\"));\n        });\n\n        if (testRunnerOptions.allowShortcuts) {\n          if (pluginShortcuts.toggle) {\n            shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n              testRunner.trigger(\"\".concat(actionPrefix, \"toggle\"));\n            }, {\n              avoidInput: true,\n              prevent: true\n            });\n          }\n        } //start disabled\n\n\n        this.disable(); //update plugin state based on changes\n\n        testRunner.on('loaditem', function () {\n          var testContext = testRunner.getTestContext(),\n              itemId = testContext.itemIdentifier;\n\n          if (!pluginConfig.restoreStateOnMove) {\n            itemStates[itemId] = [];\n          }\n\n          togglePluginButton();\n        }).on('enabletools renderitem', function () {\n          togglePluginButton(); // we repeat this here as we need the rendered item markup in order to decide whether the plugin is enabled\n\n          self.enable();\n        }).on('beforeunloaditem', function () {\n          disableMasking();\n        }).on('disabletools unloaditem', function () {\n          self.disable();\n          disableMasking();\n        }).on(\"\".concat(actionPrefix, \"toggle\"), function () {\n          if (isPluginEnabled()) {\n            togglePlugin();\n          }\n        }) // Answer-eliminator and Answer-masking are mutually exclusive tools\n        .on('tool-eliminator-toggle', function () {\n          disableMasking();\n        });\n      },\n\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(\".\".concat(this.getName()));\n      },\n\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.button.enable();\n      },\n\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.button.disable();\n      },\n\n      /**\n       * Show the button\n       */\n      show: function show() {\n        this.button.show();\n      },\n\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        this.button.hide();\n      }\n    });\n\n    return plugin;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/apipTextToSpeech/textToSpeech',['jquery', 'i18n', 'handlebars', 'ui/component', 'interact', 'ui/component/stackable', 'ui/component/placeable', 'ui/feedback', 'nouislider'], function ($$1, __, Handlebars, component, interact, makeStackable, makePlaceable, feedback, nouislider) { 'use strict';\n\n  $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n  __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n  Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n  component = component && Object.prototype.hasOwnProperty.call(component, 'default') ? component['default'] : component;\n  interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n  makeStackable = makeStackable && Object.prototype.hasOwnProperty.call(makeStackable, 'default') ? makeStackable['default'] : makeStackable;\n  makePlaceable = makePlaceable && Object.prototype.hasOwnProperty.call(makePlaceable, 'default') ? makePlaceable['default'] : makePlaceable;\n  feedback = feedback && Object.prototype.hasOwnProperty.call(feedback, 'default') ? feedback['default'] : feedback;\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n    var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n    buffer += \"<div class=\\\"tts-container\\\">\\n    <div class=\\\"tts-controls\\\">\\n        <div class=\\\"tts-control-container\\\">\\n            <a class=\\\"tts-control tts-control-close\\\" title=\\\"\"\n      + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Close\", options) : helperMissing.call(depth0, \"__\", \"Close\", options)))\n      + \"\\\">\\n                <span class=\\\"icon-result-nok tts-icon\\\"></span>\\n            </a>\\n        </div>\\n        <div class=\\\"tts-control-container\\\">\\n            <a class=\\\"tts-control tts-control-drag\\\" title=\\\"\"\n      + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move\", options) : helperMissing.call(depth0, \"__\", \"Move\", options)))\n      + \"\\\">\\n                <span class=\\\"icon-grip tts-icon\\\"></span>\\n                <span class=\\\"tts-control-label\\\">\\n                    \"\n      + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Text to Speech\", options) : helperMissing.call(depth0, \"__\", \"Text to Speech\", options)))\n      + \"\\n                </span>\\n            </a>\\n        </div>\\n        <div class=\\\"tts-control-container\\\">\\n            <a class=\\\"tts-control tts-control-playback\\\" title=\\\"\"\n      + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Toggle playback\", options) : helperMissing.call(depth0, \"__\", \"Toggle playback\", options)))\n      + \"\\\">\\n                <span class=\\\"icon-play tts-icon\\\"></span>\\n                <span class=\\\"icon-pause tts-icon\\\"></span>\\n            </a>\\n        </div>\\n        <div class=\\\"tts-control-container\\\">\\n            <a class=\\\"tts-control tts-control-mode\\\" title=\\\"\"\n      + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Toggle start from here mode\", options) : helperMissing.call(depth0, \"__\", \"Toggle start from here mode\", options)))\n      + \"\\\">\\n                <span class=\\\"icon-play-from-here tts-icon\\\"></span>\\n            </a>\\n        </div>\\n        <div class=\\\"tts-control-container\\\">\\n            <a class=\\\"tts-control tts-control-settings\\\" title=\\\"\"\n      + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Settings\", options) : helperMissing.call(depth0, \"__\", \"Settings\", options)))\n      + \"\\\">\\n                <span class=\\\"icon-property-advanced tts-icon\\\"></span>\\n            </a>\\n            <div class=\\\"tts-slider-container\\\">\\n                \"\n      + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Speed\", options) : helperMissing.call(depth0, \"__\", \"Speed\", options)))\n      + \"<div class=\\\"tts-slider\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n    return buffer;\n    });\n  function ttsTemplate(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  var defaultConfig = {\n    activeElementClass: 'tts-active-content-node',\n    elementClass: 'tts-content-node',\n    left: -10,\n    maxPlaybackRate: 2,\n    minPlaybackRate: 0.5,\n    playbackRate: 1,\n    top: 50\n  };\n  var stackingOptions = {\n    stackingScope: 'test-runner'\n  };\n  /**\n   * Creates an instance of Text to Speech component\n   *\n   * @param {Element} container\n   * @param {Object} config - component configurations\n   * @param {String} config.activeElementClass - class applied to active content element. Default value 'tts-active-content-node'\n   * @param {String} config.elementClass - class applied to content element. Default value 'tts-content-node'\n   * @param {Number} config.left - initial left position of component. Default value 50\n   * @param {Number} config.maxPlaybackRate - max playback rate. Default value 2\n   * @param {Number} config.minPlaybackRate - min playback rate. Default value 0.5\n   * @param {Number} config.playbackRate - playback rate. Default value 1\n   * @param {Number} config.top - initial top position of component. Default value 50\n   * @returns {ttsComponent} the textToSpeech component (uninitialized)\n   */\n\n  function maskingComponentFactory(container, config) {\n    var audio = new Audio();\n    var currentPlayback = [];\n    var currentItem;\n    var mediaContentData = [];\n    var playbackRate; // Browser does not support selection Api If getSelection is not defined\n\n    var selection = window.getSelection && window.getSelection(); // component API\n\n    var spec = {\n      /**\n       * Remove APIP element class and click handlers from APIP elements\n       */\n      clearAPIPElements: function clearAPIPElements() {\n        var elementClass = this.config.elementClass;\n        var $contentNodes = $$1(mediaContentData.map(function (_ref) {\n          var selector = _ref.selector;\n          return selector;\n        }).join(', '), container);\n        $contentNodes.removeClass(elementClass);\n        $contentNodes.off('click', this.handleContentNodeClick);\n      },\n\n      /**\n       * Update componet state and stop playback\n       *\n       * @fires close\n       */\n      close: function close() {\n        this.setTTSStateOnContainer('playing', false);\n        this.setTTSStateOnContainer('sfhMode', false);\n        this.setState('settings', false);\n        this.stop();\n        this.trigger('close');\n      },\n\n      /**\n       * Get current active APIP item\n       *\n       * @returns {Object} active APIP item\n       */\n      getCurrentItem: function getCurrentItem() {\n        return currentItem;\n      },\n\n      /**\n       * When component in start from here mode, switch to clicked content element\n       *\n       * @param {Object} e - event object\n       */\n      handleContentNodeClick: function handleContentNodeClick(e) {\n        var $target = $$1(e.target); // Allow default behaviour for inputs\n\n        if ($target.hasClass('icon-checkbox') || $target.hasClass('icon-radio') || $target.is('input')) {\n          return;\n        } // Prevent default behaviour for lables and links\n\n\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (!this.is('sfhMode')) {\n          return;\n        }\n\n        var $currentTarget = $$1(e.currentTarget); // Find APIP item associated with clicked element\n\n        var selectedItemIndex = mediaContentData.findIndex(function (_ref2) {\n          var selector = _ref2.selector;\n          return $currentTarget.is(selector);\n        });\n        currentPlayback = mediaContentData.slice(selectedItemIndex);\n        this.stop();\n        this.initNextItem();\n        this.togglePlayback();\n      },\n\n      /**\n       * Select APIP item for default mode\n       */\n      initDefaultModeItem: function initDefaultModeItem() {\n        this.initItemWithTextSelection();\n\n        if (!currentItem) {\n          this.initDefaultModePlayback();\n        }\n      },\n\n      /**\n       * Check if there is some selected content inside APIP elelemts on the page\n       */\n      initItemWithTextSelection: function initItemWithTextSelection() {\n        // Check if there is selected content\n        if (this.is('sfhMode') || !selection || !selection.toString()) {\n          return;\n        } // Get APIP item by current selection\n\n\n        var currentSelection = selection.getRangeAt(0);\n        var commonAncestorContainer = currentSelection.commonAncestorContainer;\n        var selectedItem = mediaContentData.find(function (_ref3) {\n          var selector = _ref3.selector;\n          var $item = $$1(selector, container);\n          return $item.is(commonAncestorContainer) || $$1.contains($item[0], commonAncestorContainer);\n        });\n\n        if (selectedItem && selectedItem !== currentItem) {\n          currentPlayback = [selectedItem];\n          this.initNextItem();\n        }\n      },\n\n      /**\n       * Check if there is next APIP item to play and start playback if component in playing state.\n       * If there is no APIP item to play stop playback\n       *\n       * @fires finish\n       * @fires next\n       */\n      initNextItem: function initNextItem() {\n        var activeElementClass = this.config.activeElementClass;\n        currentItem && $$1(currentItem.selector, container).removeClass(activeElementClass);\n        currentItem = currentPlayback.shift();\n\n        if (currentItem) {\n          var _currentItem = currentItem,\n              selector = _currentItem.selector,\n              url = _currentItem.url;\n          $$1(selector, container).addClass(activeElementClass);\n          audio.setAttribute('src', url);\n          audio.load();\n          audio.playbackRate = playbackRate;\n\n          if (this.is('playing')) {\n            audio.play();\n          }\n\n          this.trigger('next');\n          return;\n        }\n\n        this.trigger('finish');\n        this.stop();\n      },\n\n      /**\n       * Init default mode playback\n       */\n      initDefaultModePlayback: function initDefaultModePlayback() {\n        currentPlayback = _toConsumableArray(mediaContentData);\n        this.initNextItem();\n      },\n\n      /**\n       * Set APIP data. Apply handlers to APIP elements. Stop current playback\n       *\n       * @param {Array} data - APIP data items\n       */\n      setMediaContentData: function setMediaContentData(data) {\n        this.clearAPIPElements();\n        var elementClass = this.config.elementClass;\n        mediaContentData = data;\n        var $contentNodes = $$1(mediaContentData.map(function (_ref4) {\n          var selector = _ref4.selector;\n          return selector;\n        }).join(', '), container);\n        $contentNodes.addClass(elementClass);\n        $contentNodes.on('click', this.handleContentNodeClick);\n        this.stop();\n      },\n\n      /**\n       * Set playback rate\n       *\n       * @param {Object} e - event object\n       * @param {Number} value - playback rate\n       */\n      setPlaybackRate: function setPlaybackRate(e, value) {\n        playbackRate = value;\n        audio.playbackRate = value;\n      },\n\n      /**\n       * Update component state. Toggle state class on page body\n       *\n       * @param {String} name\n       * @param {Boolean} value\n       */\n      setTTSStateOnContainer: function setTTSStateOnContainer(name, value) {\n        this.setState(name, value);\n        $$1(container).toggleClass(\"tts-\".concat(name), value);\n      },\n\n      /**\n       * Pause playback and update component state. Set current item to null\n       */\n      stop: function stop() {\n        var activeElementClass = this.config.activeElementClass;\n        audio.pause();\n        audio.currentTime = 0;\n        currentItem && $$1(currentItem.selector, container).removeClass(activeElementClass);\n        currentItem = null;\n        this.setTTSStateOnContainer('playing', false);\n      },\n\n      /**\n       * Toggle playback\n       *\n       * @param {Object} e - event object\n       */\n      togglePlayback: function togglePlayback(e) {\n        e && e.preventDefault();\n        var isPlaying = this.is('playing');\n        this.initDefaultModeItem();\n\n        if (!isPlaying && currentItem) {\n          audio.play();\n          this.setTTSStateOnContainer('playing', true);\n        } else {\n          audio.pause();\n          this.setTTSStateOnContainer('playing', false);\n        }\n      },\n\n      /**\n       * Toggle start from here mode\n       */\n      toggleSFHMode: function toggleSFHMode() {\n        var isSFHMode = this.is('sfhMode');\n        this.setTTSStateOnContainer('sfhMode', !isSFHMode);\n        this.stop();\n      },\n\n      /**\n       * Toggle settings element\n       */\n      toggleSettings: function toggleSettings() {\n        var isSettings = this.is('settings');\n        this.setState('settings', !isSettings); // if settings was enabled make sure that component still inside the container\n\n        if (!isSettings) {\n          this.handleResize();\n        }\n      },\n\n      /**\n       * Handle browser resize\n       */\n      handleResize: function handleResize() {\n        // offset from right\n        var offsetFromRight = 10;\n\n        var _this$getPosition = this.getPosition(),\n            x = _this$getPosition.x,\n            y = _this$getPosition.y;\n\n        var maxXPosition = window.innerWidth - this.getElement().width() - offsetFromRight;\n        this.moveTo(x > maxXPosition ? maxXPosition : x, y);\n      }\n    };\n    var ttsComponent = component(spec, defaultConfig);\n    makePlaceable(ttsComponent);\n    makeStackable(ttsComponent, stackingOptions);\n    ttsComponent.setTemplate(ttsTemplate).on('init', function () {\n      if (container.hasClass('tts-component-container')) {\n        throw new Error('Container already has assigned text to speech component');\n      }\n\n      container.addClass('tts-component-container');\n      this.render(container);\n    }).on('render', function () {\n      var _this = this;\n\n      var _this$getConfig = this.getConfig(),\n          left = _this$getConfig.left,\n          maxPlaybackRate = _this$getConfig.maxPlaybackRate,\n          minPlaybackRate = _this$getConfig.minPlaybackRate,\n          defaultPlaybackRate = _this$getConfig.playbackRate,\n          top = _this$getConfig.top;\n\n      if (left < 0) {\n        left = window.innerWidth - this.getElement().width() + left;\n      }\n\n      var $element = this.getElement();\n      var $closeElement = $$1('.tts-control-close', $element);\n      var $dragElement = $$1('.tts-control-drag', $element);\n      var $playbackElement = $$1('.tts-control-playback', $element);\n      var $sfhModeElement = $$1('.tts-control-mode', $element);\n      var $sliderElement = $$1('.tts-slider', $element);\n      var $settingsElement = $$1('.tts-control-settings', $element);\n      playbackRate = defaultPlaybackRate;\n      $element.css('touch-action', 'none'); // make component dragable\n\n      var interactElement = interact($element).draggable({\n        autoScroll: true,\n        manualStart: true,\n        restrict: {\n          restriction: container[0],\n          elementRect: {\n            left: 0,\n            right: 1,\n            top: 0,\n            bottom: 1\n          }\n        },\n        onmove: function onmove(event) {\n          var xOffset = Math.round(event.dx),\n              yOffset = Math.round(event.dy);\n\n          _this.moveBy(xOffset, yOffset);\n        }\n      });\n      interact($dragElement[0]).on('down', function (event) {\n        var interaction = event.interaction;\n        interaction.start({\n          name: 'drag'\n        }, interactElement, $element[0]);\n      }); // initialise slider\n\n      $sliderElement.noUiSlider({\n        animate: true,\n        connected: true,\n        range: {\n          min: minPlaybackRate,\n          max: maxPlaybackRate\n        },\n        start: defaultPlaybackRate,\n        step: 0.1\n      }).on('change', this.setPlaybackRate); // handle controls\n\n      $closeElement.on('click', this.close); // handle mousedown instead of click to prevent selection lose\n\n      $playbackElement.on('mousedown touchstart', this.togglePlayback);\n      $sfhModeElement.on('click', this.toggleSFHMode);\n      $settingsElement.on('click', this.toggleSettings);\n      audio.addEventListener('ended', this.initNextItem);\n      audio.addEventListener('error', function () {\n        feedback().error(__('Can not playback media file!'));\n\n        _this.initNextItem();\n      });\n      window.addEventListener('resize', this.handleResize); // move to initial position\n\n      this.moveTo(left, top);\n    }).on('hide', function () {\n      this.setTTSStateOnContainer('visible', false);\n    }).on('show', function () {\n      this.setTTSStateOnContainer('visible', true);\n    }).on('destroy', function () {\n      container.removeClass('tts-component-container');\n      this.clearAPIPElements();\n      this.stop();\n      window.removeEventListener('resize', this.handleResize);\n    });\n    ttsComponent.init(config);\n    return ttsComponent;\n  }\n\n  return maskingComponentFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/apipTextToSpeech/ttsApipDataProvider',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019  (original work) Open Assessment Technologies SA;\n     *\n     * @author Anton Tsymuk <anton@taotesting.com>\n     */\n\n    /**\n     * Extract TTS data from APIP item data\n     *\n     * @param {Object} apipElement - APIP item Data\n     * @returns {Object}\n     */\n    var getTTSItemData = function getTTSItemData(apipElement) {\n      var identifier = apipElement['@attributes'].identifier;\n      var _apipElement$contentL = apipElement.contentLinkInfo,\n          contentLinkInfo = _apipElement$contentL === void 0 ? {\n        '@attributes': {}\n      } : _apipElement$contentL,\n          _apipElement$relatedE = apipElement.relatedElementInfo;\n      _apipElement$relatedE = _apipElement$relatedE === void 0 ? {} : _apipElement$relatedE;\n      var _apipElement$relatedE2 = _apipElement$relatedE.spoken;\n      _apipElement$relatedE2 = _apipElement$relatedE2 === void 0 ? {} : _apipElement$relatedE2;\n      var _apipElement$relatedE3 = _apipElement$relatedE2.audioFileInfo,\n          audioFileInfo = _apipElement$relatedE3 === void 0 ? [] : _apipElement$relatedE3;\n\n      var _ref = audioFileInfo.find(function (audioFile) {\n        return audioFile['@attributes'].mimeType === 'audio/mpeg';\n      }) || {},\n          _ref$fileHref = _ref.fileHref,\n          fileHref = _ref$fileHref === void 0 ? '' : _ref$fileHref;\n\n      var elementId = contentLinkInfo['@attributes'].qtiLinkIdentifierRef;\n      return {\n        identifier: identifier,\n        selector: elementId && \"#\".concat(elementId),\n        url: fileHref.replace('assets/', '')\n      };\n    };\n    /**\n     * Get APIP item order from APIP order data\n     *\n     * @param {String} identifier - APIP item identifier\n     * @param {Object} elementOrder - APIP order data\n     * @returns {Number}\n     */\n\n\n    var getTTSItemOrder = function getTTSItemOrder(identifier, elementOrder) {\n      var _ref2 = elementOrder.find(function (apipElementOrder) {\n        return apipElementOrder['@attributes'].identifierRef === identifier;\n      }) || {},\n          order = _ref2.order;\n\n      return parseInt(order) || Number.POSITIVE_INFINITY;\n    };\n    /**\n     * Extract data related to Text To Speech from item APIP data\n     * @param {Object} apipData\n     * @returns {Object}\n     */\n\n\n    var ttsApipDataProvider = (function (apipData) {\n      var _apipData$accessibili = apipData.accessibilityInfo;\n      _apipData$accessibili = _apipData$accessibili === void 0 ? {} : _apipData$accessibili;\n      var _apipData$accessibili2 = _apipData$accessibili.accessElement,\n          accessElement = _apipData$accessibili2 === void 0 ? [] : _apipData$accessibili2,\n          _apipData$inclusionOr = apipData.inclusionOrder;\n      _apipData$inclusionOr = _apipData$inclusionOr === void 0 ? {} : _apipData$inclusionOr;\n      var _apipData$inclusionOr2 = _apipData$inclusionOr.textGraphicsDefaultOrder;\n      _apipData$inclusionOr2 = _apipData$inclusionOr2 === void 0 ? {} : _apipData$inclusionOr2;\n      var _apipData$inclusionOr3 = _apipData$inclusionOr2.elementOrder,\n          elementOrder = _apipData$inclusionOr3 === void 0 ? [] : _apipData$inclusionOr3;\n      return accessElement.map(getTTSItemData).filter(function (_ref3) {\n        var url = _ref3.url;\n        return !!url;\n      }).sort(function (a, b) {\n        return getTTSItemOrder(a.identifier, elementOrder) - getTTSItemOrder(b.identifier, elementOrder);\n      });\n    });\n\n    return ttsApipDataProvider;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/apipTextToSpeech/plugin',['lodash', 'i18n', 'ui/hider', 'util/shortcut', 'util/namespace', 'taoTests/runner/plugin', 'taoQtiTest/runner/helpers/map', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/tools/apipTextToSpeech/textToSpeech', 'taoQtiTest/runner/plugins/tools/apipTextToSpeech/ttsApipDataProvider'], function (_, __, hider, shortcut, namespaceHelper, pluginFactory, mapHelper, keyNavigator, navigableDomElement, ttsComponentFactory, ttsApipDataProvider) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n    ttsComponentFactory = ttsComponentFactory && Object.prototype.hasOwnProperty.call(ttsComponentFactory, 'default') ? ttsComponentFactory['default'] : ttsComponentFactory;\n    ttsApipDataProvider = ttsApipDataProvider && Object.prototype.hasOwnProperty.call(ttsApipDataProvider, 'default') ? ttsApipDataProvider['default'] : ttsApipDataProvider;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019  (original work) Open Assessment Technologies SA;\n     *\n     * @author Anton Tsymuk <anton@taotesting.com>\n     */\n    var pluginName = 'apiptts';\n    var actionPrefix = \"tool-\".concat(pluginName, \"-\");\n    /**\n     * Returns the configured plugin\n     */\n\n    var plugin = pluginFactory({\n      name: pluginName,\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var _this = this;\n\n        var testRunner = this.getTestRunner();\n        var testRunnerOptions = testRunner.getOptions();\n        var pluginShortcuts = (testRunnerOptions.shortcuts || {})[this.getName()] || {};\n        var ttsComponent;\n        var ttsApipData;\n\n        var createNavigationGroup = function createNavigationGroup() {\n          var $container = testRunner.getAreaBroker().getContainer();\n\n          var $navigationGroupElement = _this.button.getElement();\n\n          var groupNavigationId = \"\".concat(pluginName, \"_navigation_group\");\n          var $navigationElements = $container.find(ttsApipData.map(function (_ref) {\n            var selector = _ref.selector;\n            return selector;\n          }).join(', '));\n          _this.navigationGroup = keyNavigator({\n            id: groupNavigationId,\n            group: $navigationGroupElement,\n            elements: navigableDomElement.createFromDoms($navigationElements.add($navigationGroupElement)),\n            propagateTab: false,\n            loop: true,\n            keepState: true\n          }).on('tab', function () {\n            if (ttsComponent.is('sfhMode')) {\n              _this.navigationGroup.next();\n\n              testRunner.trigger(\"\".concat(actionPrefix, \"next\"));\n            }\n          }).on('shift+tab', function () {\n            if (ttsComponent.is('sfhMode')) {\n              _this.navigationGroup.previous();\n\n              testRunner.trigger(\"\".concat(actionPrefix, \"previous\"));\n            }\n          }).on('activate', function () {\n            if (ttsComponent.is('sfhMode')) {\n              testRunner.trigger(\"\".concat(actionPrefix, \"togglePlayback\"));\n            }\n          }).on('blur', function () {\n            setTimeout(function () {\n              if (!_this.navigationGroup.isFocused()) {\n                _this.navigationGroup.focus();\n              }\n            }, 0);\n          }).setCursorAt($navigationElements.length);\n          ttsComponent.on('next finish', function () {\n            if (ttsComponent.is('sfhMode')) {\n              var $currentElement = _this.navigationGroup.getCursor().navigable.getElement();\n\n              var _ref2 = ttsComponent.getCurrentItem() || {},\n                  selector = _ref2.selector;\n\n              if (!selector || !$currentElement.is(selector)) {\n                _this.navigationGroup.next();\n              }\n            }\n          });\n        };\n        /**\n         * Creates the tts component on demand\n         * @returns {textToSpeech}\n         */\n\n\n        var getTTSComponent = function getTTSComponent() {\n          if (!ttsComponent) {\n            var $container = testRunner.getAreaBroker().getContainer();\n            ttsComponent = ttsComponentFactory($container, {}).on('close', function () {\n              if (_this.getState('active')) {\n                testRunner.trigger(\"\".concat(actionPrefix, \"toggle\"));\n              }\n            }).hide();\n          }\n\n          return ttsComponent;\n        };\n        /**\n         * Checks if the plugin is currently available.\n         * To be activated with the special category x-tao-option-apiptts\n         *\n         * @returns {Boolean}\n         */\n\n\n        var isConfigured = function isConfigured() {\n          return mapHelper.hasItemCategory(testRunner.getTestMap(), testRunner.getTestContext().itemIdentifier, 'apiptts', true);\n        };\n        /**\n         * Is plugin activated ? if not, then we hide the plugin\n         */\n\n\n        var togglePlugin = function togglePlugin() {\n          if (isConfigured()) {\n            _this.show();\n          } else {\n            _this.hide();\n          }\n        };\n        /**\n         * Show the plugin panel\n         *\n         * @fires plugin-open.apiptts\n         */\n\n\n        var enablePlugin = function enablePlugin() {\n          createNavigationGroup();\n\n          _this.button.turnOn();\n\n          _this.setState('active', true);\n\n          _this.trigger('open');\n\n          if (ttsComponent.is('hidden')) {\n            ttsComponent.show();\n          }\n        };\n        /**\n         * Hide the plugin panel\n         *\n         * @fires plugin-close.apiptts\n         */\n\n\n        var disablePlugin = function disablePlugin() {\n          if (_this.getState('active')) {\n            _this.navigationGroup.blur();\n\n            _this.navigationGroup.destroy();\n\n            _this.setState('active', false);\n\n            _this.button.turnOff();\n\n            _this.trigger('close');\n\n            if (ttsComponent && !ttsComponent.is('hidden')) {\n              ttsComponent.close();\n              ttsComponent.hide();\n            }\n          }\n        };\n        /**\n         * Shows/hides the plugin\n         */\n\n\n        var toggleTool = function toggleTool() {\n          if (_this.getState('enabled')) {\n            if (_this.getState('active')) {\n              disablePlugin();\n\n              _this.setState('sleep', true);\n            } else {\n              enablePlugin();\n\n              _this.setState('sleep', false);\n            }\n          }\n        }; // Add plugin button to toolbox\n\n\n        this.button = this.getAreaBroker().getToolbox().createEntry({\n          className: \"\".concat(this.getName(), \"-plugin\"),\n          control: this.getName(),\n          icon: 'headphones',\n          text: __('Text To Speech'),\n          title: __('Enable text to speech')\n        }); // Handle plugin button click\n\n        this.button.on('click', function (e) {\n          e.preventDefault();\n          testRunner.trigger(\"\".concat(actionPrefix, \"toggle\"));\n        }); // Register plugin shortcuts\n\n        if (testRunnerOptions.allowShortcuts) {\n          _.forEach(pluginShortcuts, function (command, key) {\n            shortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), function () {\n              if (key === 'spaceTogglePlayback' && ttsComponent && ttsComponent.is('sfhMode')) {\n                return;\n              }\n\n              var eventKey = key.endsWith('TogglePlayback') ? 'togglePlayback' : key;\n              testRunner.trigger(actionPrefix + eventKey);\n            }, {\n              avoidInput: true\n            });\n          });\n        } // Hide plugin by default\n\n\n        togglePlugin();\n        this.disable();\n        this.hide(); //update plugin state based on changes\n\n        testRunner.on('loaditem', function () {\n          togglePlugin();\n\n          _this.disable();\n        }).on('enabletools renderitem', function () {\n          _this.enable();\n        }).on('disabletools unloaditem', function () {\n          disablePlugin();\n\n          _this.disable();\n        }).on(\"\".concat(actionPrefix, \"toggle\"), function () {\n          if (isConfigured()) {\n            toggleTool();\n          }\n        }).on(\"\".concat(actionPrefix, \"togglePlayback\"), function () {\n          if (_this.getState('enabled')) {\n            if (_this.getState('active')) {\n              if (ttsComponent.is('sfhMode')) {\n                var $currentElement = _this.navigationGroup.getCursor().navigable.getElement();\n\n                var _ref3 = ttsComponent.getCurrentItem() || {},\n                    selector = _ref3.selector;\n\n                if (!$currentElement.is(selector)) {\n                  if (_this.button.getElement()[0] !== $currentElement[0]) {\n                    $currentElement.trigger('click');\n                  }\n\n                  return;\n                }\n              }\n\n              ttsComponent.togglePlayback();\n            }\n          }\n        }).on('renderitem', function () {\n          if (!isConfigured()) {\n            return;\n          }\n\n          ttsApipData = ttsApipDataProvider(testRunner.itemRunner.getData().apipAccessibility || {}).map(function (apipItemData) {\n            return Object.assign({}, apipItemData, {\n              url: testRunner.itemRunner.assetManager.resolve(apipItemData.url)\n            });\n          });\n\n          if (!ttsApipData.length) {\n            disablePlugin();\n\n            _this.hide();\n\n            return;\n          }\n\n          getTTSComponent().setMediaContentData(ttsApipData);\n\n          _this.show();\n\n          if (!_this.getState('sleep')) {\n            _this.setState('enabled', true);\n\n            toggleTool();\n          }\n        });\n      },\n\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(\".\".concat(this.getName()));\n      },\n\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.button.enable();\n      },\n\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.button.disable();\n      },\n\n      /**\n       * Show the button\n       */\n      show: function show() {\n        this.button.show();\n      },\n\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        this.button.hide();\n      }\n    });\n\n    return plugin;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/areaMasking/mask',['lodash', 'handlebars', 'ui/dynamicComponent'], function (_, Handlebars, dynamicComponent) { 'use strict';\n\n   _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n   Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n   dynamicComponent = dynamicComponent && Object.prototype.hasOwnProperty.call(dynamicComponent, 'default') ? dynamicComponent['default'] : dynamicComponent;\n\n   var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n     this.compilerInfo = [4,'>= 1.0.0'];\n   helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n     var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n     buffer += \"<div class=\\\"mask\\\">\\n   <div class=\\\"inner\\\"></div>\\n   <div class=\\\"controls\\\">\\n        <a href=\\\"#\\\" class=\\\"view\\\"  title=\\\"\"\n       + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Preview the covered area\", options) : helperMissing.call(depth0, \"__\", \"Preview the covered area\", options)))\n       + \"\\\"><span class=\\\"icon-preview\\\"></span></a>\\n        <a href=\\\"#\\\" class=\\\"close\\\" title=\\\"\"\n       + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Close the mask\", options) : helperMissing.call(depth0, \"__\", \"Close the mask\", options)))\n       + \"\\\"><span class=\\\"icon-result-nok\\\"></span></a>\\n   </div>\\n</div>\\n\";\n     return buffer;\n     });\n   function areaMaskingTpl(data, options, asString) {\n     var html = Template(data, options);\n     return (asString || true) ? html : $(html);\n   }\n\n   /**\n    * This program is free software; you can redistribute it and/or\n    * modify it under the terms of the GNU General Public License\n    * as published by the Free Software Foundation; under version 2\n    * of the License (non-upgradable).\n    *\n    * This program is distributed in the hope that it will be useful,\n    * but WITHOUT ANY WARRANTY; without even the implied warranty of\n    * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    * GNU General Public License for more details.\n    *\n    * You should have received a copy of the GNU General Public License\n    * along with this program; if not, write to the Free Software\n    * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n    *\n    * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n    */\n   var defaultConfig = {\n     draggable: true,\n     resizable: true,\n     preserveAspectRatio: false,\n     width: 250,\n     minWidth: 160,\n     maxWidth: 1000,\n     minHeight: 60,\n     height: 100,\n     stackingScope: 'test-runner',\n     top: 50,\n     left: 10,\n     previewDelay: 3000\n   };\n   /**\n    * Creates a new masking component\n    * @returns {maskComponent} the component (uninitialized)\n    */\n\n   function maskingComponentFactory() {\n     var dynamicComponentInstance;\n     /**\n      * @typedef {Object} dynamicComponent\n      */\n\n     dynamicComponentInstance = dynamicComponent({\n       /**\n        * Preview the content under the masked area\n        * @returns {maskComponent} chains\n        *\n        * @fires maskComponent#preview\n        */\n       preview: function preview() {\n         var self = this;\n         var delay = this.config.previewDelay || 1000;\n\n         if (this.is('rendered') && !this.is('disabled') && !this.is('previewing')) {\n           this.setState('previewing', true);\n           this.trigger('preview');\n\n           _.delay(function () {\n             self.setState('previewing', false);\n           }, delay);\n         }\n\n         return this;\n       }\n     }, defaultConfig).on('rendercontent', function ($content) {\n       var self = this;\n       var $element = this.getElement();\n       $content.append(areaMaskingTpl({}));\n       $element.addClass('mask-container');\n       $element.on('click touchstart', '.view', function (e) {\n         e.preventDefault();\n         self.preview();\n       }).on('click touchend', '.close', function (e) {\n         e.preventDefault();\n         self.destroy();\n       });\n     }).init();\n     return dynamicComponentInstance;\n   }\n\n   return maskingComponentFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/areaMasking/areaMasking',['lodash', 'i18n', 'ui/hider', 'util/shortcut', 'util/namespace', 'taoTests/runner/plugin', 'taoQtiTest/runner/plugins/tools/areaMasking/mask', 'taoQtiTest/runner/helpers/map'], function (_, __, hider, shortcut, namespaceHelper, pluginFactory, maskComponent, mapHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    maskComponent = maskComponent && Object.prototype.hasOwnProperty.call(maskComponent, 'default') ? maskComponent['default'] : maskComponent;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n     */\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n\n    var pluginName = 'area-masking';\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n\n    var actionPrefix = \"tool-\".concat(pluginName, \"-\");\n    /**\n     * Some default options for the plugin\n     * @type {Object}\n     */\n\n    var defaultConfig = {\n      max: 5,\n      foo: true\n    };\n    /**\n     * Returns the configured plugin\n     */\n\n    var areaMasking = pluginFactory({\n      name: pluginName,\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        var $container = testRunner.getAreaBroker().getContentArea().parent();\n        var testRunnerOptions = testRunner.getOptions();\n        var config = Object.assign({}, defaultConfig, this.getConfig());\n        var pluginShortcuts = (testRunnerOptions.shortcuts || {})[pluginName] || {};\n\n        function addMask() {\n          maskComponent().on('render', function () {\n            self.masks.push(this);\n            self.button.turnOn();\n            /**\n             * @event areaMasking#maskadd\n             */\n\n            self.trigger('maskadd');\n          }).on('destroy', function () {\n            self.masks = _.without(self.masks, this);\n\n            if (self.masks.length < config.max) {\n              self.enable();\n            }\n\n            if (self.masks.length === 0) {\n              self.button.turnOff();\n              self.trigger('close');\n            }\n            /**\n             * @event areaMasking#maskclose\n             */\n\n\n            self.trigger('maskclose');\n          }).init({\n            renderTo: $container,\n            draggableContainer: $container\n          });\n        } //keep a ref to all masks\n\n\n        this.masks = []; // register the element in the Toolbox\n\n        this.button = this.getAreaBroker().getToolbox().createEntry({\n          control: 'area-masking',\n          text: __('Masking'),\n          title: __('Covers parts of the item'),\n          icon: 'eye-slash'\n        }); //add a new mask each time the button is pressed\n\n        this.button.on('click', function (e) {\n          e.preventDefault();\n          testRunner.trigger(\"\".concat(actionPrefix, \"toggle\"));\n        }); // handle the plugin's shortcuts\n\n        if (testRunnerOptions.allowShortcuts) {\n          _.forEach(pluginShortcuts, function (command, key) {\n            shortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), function () {\n              // just fire the action using the event loop\n              testRunner.trigger(actionPrefix + key);\n            }, {\n              avoidInput: true\n            });\n          });\n        } //start disabled\n\n\n        this.disable();\n        /**\n         * Checks if the plugin is currently available\n         * @returns {Boolean}\n         */\n\n        function isEnabled() {\n          //to be activated with the special category x-tao-option-areaMasking\n          return mapHelper.hasItemCategory(testRunner.getTestMap(), testRunner.getTestContext().itemIdentifier, 'areaMasking', true);\n        }\n        /**\n         * Is plugin activated ? if not, then we hide the plugin\n         */\n\n\n        function togglePlugin() {\n          if (isEnabled()) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        } //update plugin state based on changes\n\n\n        testRunner.on('loaditem', togglePlugin).on('enabletools renderitem', function () {\n          self.enable();\n        }).on('disabletools unloaditem', function () {\n          self.disable(); //remove all masks\n\n          _.invoke(self.masks, 'destroy');\n        }) // commands that controls the plugin\n        .on(\"\".concat(actionPrefix, \"toggle\"), function () {\n          if (isEnabled()) {\n            if (self.masks.length === 0) {\n              self.trigger('open');\n            }\n\n            if (self.masks.length < config.max) {\n              addMask();\n            } else if (config.max === 1) {\n              _.invoke(self.masks, 'destroy');\n            }\n          }\n        });\n      },\n\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(\".\".concat(pluginName));\n      },\n\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.button.enable();\n      },\n\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.button.disable();\n      },\n\n      /**\n       * Show the button\n       */\n      show: function show() {\n        this.button.show();\n      },\n\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        this.button.hide();\n      }\n    });\n\n    return areaMasking;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/calculator',['jquery', 'lodash', 'i18n', 'ui/hider', 'ui/calculator', 'ui/maths/calculator/basicCalculator', 'ui/maths/calculator/scientificCalculator', 'util/shortcut', 'util/namespace', 'taoTests/runner/plugin', 'taoQtiTest/runner/helpers/map', 'handlebars'], function ($$1, _, __, hider, calculatorFactory, basicCalculatorFactory, scientificCalculatorFactory, shortcut, namespaceHelper, pluginFactory, mapHelper, Handlebars) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    calculatorFactory = calculatorFactory && Object.prototype.hasOwnProperty.call(calculatorFactory, 'default') ? calculatorFactory['default'] : calculatorFactory;\n    basicCalculatorFactory = basicCalculatorFactory && Object.prototype.hasOwnProperty.call(basicCalculatorFactory, 'default') ? basicCalculatorFactory['default'] : basicCalculatorFactory;\n    scientificCalculatorFactory = scientificCalculatorFactory && Object.prototype.hasOwnProperty.call(scientificCalculatorFactory, 'default') ? scientificCalculatorFactory['default'] : scientificCalculatorFactory;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n      return \"<div class=\\\"widget-calculator\\\" dir=\\\"ltr\\\"></div>\";\n      });\n    function calculatorTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Default config for calculator components\n     * @type {Object}\n     */\n\n    var defaultCalcConfig = {\n      height: 380,\n      width: 280,\n      top: 50,\n      left: 10,\n      stackingScope: 'test-runner',\n      proportionalResize: true\n    };\n    /**\n     * Default config for BODMAS calculator component\n     * @type {Object}\n     */\n\n    var bodmasCalcConfig = _.defaults({\n      height: 380,\n      width: 280\n    }, defaultCalcConfig);\n    /**\n     * Default config for scientific calculator component\n     * @type {Object}\n     */\n\n\n    var scientificCalcConfig = _.defaults({\n      width: 490,\n      height: 420,\n      calculator: {\n        maths: {\n          degree: true\n        }\n      }\n    }, defaultCalcConfig);\n    /**\n     * Returns the configured plugin\n     */\n\n\n    var calculator = pluginFactory({\n      name: 'calculator',\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        var areaBroker = this.getAreaBroker();\n        var testRunnerOptions = testRunner.getOptions();\n        var config = this.getConfig();\n        var pluginShortcuts = (testRunnerOptions.shortcuts || {})[this.getName()] || {};\n        /**\n         * Retrieve the calculators categories of the current item\n         * @returns {Object} the calculator categories\n         */\n\n        function getCalculatorCategories() {\n          var testContext = testRunner.getTestContext();\n          var itemIdentifier = testContext.itemIdentifier;\n          var testMap = testRunner.getTestMap();\n          return {\n            calculator: mapHelper.hasItemCategory(testMap, itemIdentifier, 'calculator', true),\n            bodmas: mapHelper.hasItemCategory(testMap, itemIdentifier, 'calculator-bodmas', true),\n            scientific: mapHelper.hasItemCategory(testMap, itemIdentifier, 'calculator-scientific', true)\n          };\n        }\n        /**\n         * Checks if the plugin is currently available\n         * @returns {Boolean}\n         */\n\n\n        function isEnabled() {\n          //to be activated with a special category from:\n          // - x-tao-option-calculator\n          // - x-tao-option-calculator-bodmas\n          // - x-tao-option-calculator-scientific\n          var categories = getCalculatorCategories();\n          return categories.calculator || categories.bodmas || categories.scientific;\n        }\n        /**\n         * Is calculator activated ? if not, then we hide the plugin\n         */\n\n\n        function togglePlugin() {\n          if (isEnabled()) {\n            //allow calculator\n            self.show();\n          } else {\n            self.hide();\n          }\n        }\n        /**\n         * Build the calculator component\n         * @param {Function} [calcTpl] - An optional alternative template for the calculator.\n         *                               Only compatible with the four-functions version\n         */\n\n\n        function buildCalculator(calcTpl) {\n          var categories = getCalculatorCategories();\n          var factory, calcConfig;\n\n          if (categories.scientific) {\n            factory = scientificCalculatorFactory;\n            calcConfig = scientificCalcConfig;\n            calcConfig.calculator.maths.degree = _.isUndefined(config.degree) ? scientificCalcConfig.calculator.maths.degree : config.degree;\n          } else if (categories.bodmas) {\n            factory = basicCalculatorFactory;\n            calcConfig = bodmasCalcConfig;\n          } else {\n            factory = calculatorFactory;\n            calcConfig = defaultCalcConfig;\n          }\n\n          self.calculator = factory(_.defaults({\n            renderTo: self.$calculatorContainer,\n            replace: true,\n            draggableContainer: areaBroker.getContainer(),\n            alternativeTemplate: calcTpl || null\n          }, calcConfig)).on('show', function () {\n            self.trigger('open');\n            self.button.turnOn();\n          }).on('hide', function () {\n            self.trigger('close');\n            self.button.turnOff();\n          }).after('render', function () {\n            this.show();\n          });\n        }\n        /**\n         * Show/hide the calculator\n         */\n\n\n        function toggleCalculator() {\n          if (self.getState('enabled') !== false) {\n            if (self.calculator) {\n              //just show/hide the calculator widget\n              if (self.calculator.is('hidden')) {\n                self.calculator.show();\n              } else {\n                self.calculator.hide();\n              }\n            } else {\n              //build calculator widget\n              if (config.template) {\n                require([\"tpl!\".concat(config.template.replace(/\\.tpl$/, ''))], function (calcTpl) {\n                  buildCalculator(calcTpl);\n                }, function () {\n                  //in case of error, display the default calculator:\n                  buildCalculator();\n                });\n              } else {\n                buildCalculator();\n              }\n            }\n          }\n        } //build element (detached)\n\n\n        this.button = this.getAreaBroker().getToolbox().createEntry({\n          control: 'calculator',\n          title: __('Open Calculator'),\n          icon: 'table',\n          text: __('Calculator')\n        });\n        this.$calculatorContainer = $$1(calculatorTpl()); //init calculator instance var, it will be created only necessary\n\n        this.calculator = null; //attach behavior\n\n        this.button.on('click', function (e) {\n          //prevent action if the click is made inside the form which is a sub part of the button\n          if ($$1(e.target).closest('.widget-calculator').length) {\n            return;\n          }\n\n          e.preventDefault();\n          testRunner.trigger('tool-calculator');\n        });\n\n        if (testRunnerOptions.allowShortcuts) {\n          if (pluginShortcuts.toggle) {\n            shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n              testRunner.trigger('tool-calculator');\n            }, {\n              avoidInput: true,\n              allowIn: '.widget-calculator'\n            });\n          }\n        } //start disabled\n\n\n        togglePlugin();\n        this.disable(); //update plugin state based on changes\n\n        testRunner.on('loaditem', togglePlugin).on('enabletools renderitem', function () {\n          self.enable();\n        }).on('disabletools unloaditem', function () {\n          self.disable();\n\n          if (self.calculator) {\n            //destroy calculator to create a new instance of calculator each time\n            self.calculator.destroy();\n            self.calculator = null;\n          }\n        }).on('tool-calculator', function () {\n          if (isEnabled()) {\n            toggleCalculator();\n          }\n        });\n      },\n\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        var areaBroker = this.getAreaBroker();\n        areaBroker.getContainer().append(this.$calculatorContainer);\n      },\n\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(\".\".concat(this.getName()));\n        this.$calculatorContainer.remove();\n\n        if (this.calculator) {\n          this.calculator.destroy();\n        }\n      },\n\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.button.enable();\n      },\n\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.button.disable();\n\n        if (this.calculator) {\n          this.calculator.hide();\n        }\n      },\n\n      /**\n       * Show the button\n       */\n      show: function show() {\n        this.button.show();\n      },\n\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        this.button.hide();\n\n        if (this.calculator) {\n          this.calculator.hide();\n        }\n      }\n    });\n\n    return calculator;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/comment/comment',['jquery', 'i18n', 'taoTests/runner/plugin', 'ui/hider', 'ui/stacker', 'util/shortcut', 'util/namespace', 'handlebars'], function ($$1, __, pluginFactory, hider, stackerFactory, shortcut, namespaceHelper, Handlebars) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    stackerFactory = stackerFactory && Object.prototype.hasOwnProperty.call(stackerFactory, 'default') ? stackerFactory['default'] : stackerFactory;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      buffer += \"<div data-control=\\\"qti-comment\\\" class=\\\"hidden\\\">\\n    <textarea data-control=\\\"qti-comment-text\\\" placeholder=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Your comment…\", options) : helperMissing.call(depth0, \"__\", \"Your comment…\", options)))\n        + \"\\\"></textarea>\\n    <button data-control=\\\"qti-comment-cancel\\\" class=\\\"btn-info small\\\"></span>\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Cancel\", options) : helperMissing.call(depth0, \"__\", \"Cancel\", options)))\n        + \"</button>\\n    <button data-control=\\\"qti-comment-send\\\" class=\\\"btn-info small\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Send\", options) : helperMissing.call(depth0, \"__\", \"Send\", options)))\n        + \"</button>\\n</div>\\n\";\n      return buffer;\n      });\n    function commentTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Returns the configured plugin\n     */\n\n    var comment = pluginFactory({\n      name: 'comment',\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        var testRunnerOptions = testRunner.getOptions();\n        var pluginShortcuts = (testRunnerOptions.shortcuts || {})[this.getName()] || {};\n        var stacker = stackerFactory('test-runner');\n        /**\n         * Checks if the plugin is currently available\n         * @returns {Boolean}\n         */\n\n        function isEnabled() {\n          var currentItem = testRunner.getCurrentItem();\n\n          if (typeof currentItem.allowComment === 'boolean') {\n            return currentItem.allowComment;\n          } //@deprecated use allowComment from the testMap\n\n\n          var testContext = testRunner.getTestContext();\n          var contextOptions = testContext.options || {};\n          return !!contextOptions.allowComment;\n        }\n        /**\n         * Can we comment ? if not, then we hide the plugin\n         */\n\n\n        function togglePlugin() {\n          if (isEnabled()) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        }\n        /**\n         * Show/hide the comment panel\n         */\n\n\n        function toggleComment() {\n          if (self.getState('enabled') !== false) {\n            //just show/hide the form\n            hider.toggle(self.$form);\n\n            if (!hider.isHidden(self.$form)) {\n              //reset the form on each display\n              self.$input.val('').focus();\n              self.button.turnOn();\n              stacker.bringToFront(self.$form);\n            } else {\n              self.button.turnOff();\n            }\n          }\n        } // register button in toolbox\n\n\n        this.button = this.getAreaBroker().getToolbox().createEntry({\n          control: 'comment',\n          title: __('Leave a comment'),\n          icon: 'tag',\n          text: __('Comment')\n        }); //get access to controls\n\n        this.button.on('render', function () {\n          self.$button = self.button.getElement();\n          self.$form = $$1(commentTpl()).appendTo(self.$button);\n          self.$input = self.$button.find('[data-control=\"qti-comment-text\"]');\n          self.$cancel = self.$button.find('[data-control=\"qti-comment-cancel\"]');\n          self.$submit = self.$button.find('[data-control=\"qti-comment-send\"]');\n          stacker.autoBringToFront(self.$form); //hide the form without submit\n\n          self.$cancel.on('click', function () {\n            hider.hide(self.$form);\n            self.button.turnOff();\n          }); //submit the comment, then hide the form\n\n          self.$submit.on('click', function () {\n            var comment = self.$input.val();\n\n            if (comment) {\n              self.disable();\n              self.button.turnOff();\n              testRunner.getProxy().callTestAction('comment', {\n                comment: comment\n              }).then(function () {\n                hider.hide(self.$form);\n                self.enable();\n              }).catch(function () {\n                hider.hide(self.$form);\n                self.enable();\n              });\n            }\n          });\n        }); //attach behavior\n\n        this.button.on('click', function (e) {\n          //prevent action if the click is made inside the form which is a sub part of the button\n          if ($$1(e.target).closest('[data-control=\"qti-comment\"]').length) {\n            return;\n          }\n\n          e.preventDefault();\n          testRunner.trigger('tool-comment');\n        });\n\n        if (testRunnerOptions.allowShortcuts) {\n          if (pluginShortcuts.toggle) {\n            shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n              testRunner.trigger('tool-comment');\n            }, {\n              avoidInput: true\n            });\n          }\n        } //start disabled\n\n\n        togglePlugin();\n        this.disable(); //update plugin state based on changes\n\n        testRunner.on('loaditem', togglePlugin).on('renderitem enabletools', function () {\n          self.enable();\n        }).on('unloaditem disabletools', function () {\n          self.disable();\n        }).on('tool-comment', function () {\n          if (isEnabled()) {\n            toggleComment();\n          }\n        });\n      },\n\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(\".\".concat(this.getName()));\n      },\n\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.button.enable();\n      },\n\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        if (this.$form) {\n          hider.hide(this.$form);\n        }\n\n        this.button.disable();\n        this.button.turnOff();\n      },\n\n      /**\n       * Show the button\n       */\n      show: function show() {\n        this.button.show();\n      },\n\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        if (this.$form) {\n          hider.hide(this.$form);\n        }\n\n        this.button.hide();\n      }\n    });\n\n    return comment;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/documentViewer/documentViewer',['jquery', 'lodash', 'ui/hider', 'ui/documentViewer', 'ui/documentViewer/providers/pdfViewer', 'taoTests/runner/plugin', 'handlebars'], function ($$1, _, hider, viewerFactory, pdfViewer, pluginFactory, Handlebars) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    viewerFactory = viewerFactory && Object.prototype.hasOwnProperty.call(viewerFactory, 'default') ? viewerFactory['default'] : viewerFactory;\n    pdfViewer = pdfViewer && Object.prototype.hasOwnProperty.call(pdfViewer, 'default') ? pdfViewer['default'] : pdfViewer;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n      buffer += \"<div class=\\\"document-viewer-plugin hidden\\\">\\n    <div class=\\\"viewer-overlay\\\"></div>\\n    <div class=\\\"viewer-panel\\\">\\n        <div class=\\\"viewer-header\\\">\\n            <span class=\\\"viewer-title\\\">\";\n      if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n            <span class=\\\"icon icon-close\\\"></span>\\n        </div>\\n        <div class=\\\"viewer-content\\\">\";\n      if (helper = helpers.content) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.content); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n        <div class=\\\"viewer-footer\\\"></div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function panelTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * The name of the plugin\n     * @type {String}\n     */\n\n    var pluginName = 'documentViewer';\n    /**\n     * Shows the panel, trigger the `panelshow` event\n     *\n     * @param plugin\n     */\n\n    function showPanel(plugin) {\n      hider.show(plugin.controls.$panel);\n      plugin.trigger('panelshow');\n      $$1(window).on(\"resize.\".concat(plugin.getName()), _.debounce(_.partial(resizeViewer, plugin), 50));\n    }\n    /**\n     * Hides the panel, trigger the `panelhide` event\n     *\n     * @param plugin\n     */\n\n\n    function hidePanel(plugin) {\n      hider.hide(plugin.controls.$panel);\n      plugin.trigger('panelhide');\n      $$1(window).off(\"resize.\".concat(plugin.getName()));\n    }\n    /**\n     * Hides the panel if it is visible\n     *\n     * @param plugin\n     * @returns {Boolean} Returns `true` if the panel was visible and has been hidden\n     */\n\n\n    function hideIfVisible(plugin) {\n      var isVisible = !hider.isHidden(plugin.controls.$panel, true);\n\n      if (isVisible) {\n        hidePanel(plugin);\n      }\n\n      return isVisible;\n    }\n    /**\n     * Initializes the event handlers for the panel container\n     *\n     * @param plugin\n     */\n\n\n    function initPanelEvents(plugin) {\n      var namespace = \".\".concat(plugin.getName());\n      var stopEvents = ['click', 'mousedown', 'mouseup', 'touchstart', 'touchend', 'keyup', 'keydow', 'keypress', 'scroll', 'drop'].join(\"\".concat(namespace, \" \")) + namespace;\n\n      var hideViewer = _.partial(hidePanel, plugin);\n\n      function stopPropagation(e) {\n        e.stopImmediatePropagation();\n        e.stopPropagation();\n      }\n\n      plugin.controls.$overlay.off(namespace).on(\"click\".concat(namespace), hideViewer).on(stopEvents, stopPropagation);\n      plugin.controls.$panel.off(namespace).on(\"click\".concat(namespace), '.icon-close', hideViewer).on(stopEvents, stopPropagation);\n    }\n    /**\n     * Resizes the viewer to fit the panel content area\n     * @param plugin\n     */\n\n\n    function resizeViewer(plugin) {\n      var $content = plugin.controls.$content;\n      plugin.viewer.setSize($content.width(), $content.height());\n    } // all document viewers need to be registered\n\n\n    viewerFactory.registerProvider('pdf', pdfViewer);\n    /**\n     * Returns the configured plugin\n     */\n\n    var documentViewer = pluginFactory({\n      name: pluginName,\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        var $panel = $$1(panelTpl());\n        /**\n         * @param {Object} data\n         * @param {String} data.label - document title\n         * @param {String} data.document - document url\n         */\n\n        function displayViewer(data) {\n          if (self.getState('enabled') !== false) {\n            showPanel(self);\n            self.controls.$title.text(data.label);\n            resizeViewer(self);\n            self.viewer.load(data.document, 'pdf');\n          }\n        }\n\n        this.controls = {\n          $panel: $panel,\n          $overlay: $panel.find('.viewer-overlay'),\n          $title: $panel.find('.viewer-title'),\n          $content: $panel.find('.viewer-content')\n        };\n        this.viewer = viewerFactory({\n          renderTo: this.controls.$content,\n          replace: true,\n          fitToWidth: true,\n          allowSearch: true\n        }); //update plugin state based on changes\n\n        testRunner.on('renderitem enabletools', function () {\n          self.enable();\n        }).on('renderitem', function () {\n          self.getAreaBroker().getContentArea().append(self.controls.$panel).off(\".\".concat(self.getName())).on(\"viewDocument.\".concat(self.getName()), function (event) {\n            var data = event.originalEvent.detail;\n            displayViewer(data);\n          });\n          initPanelEvents(self);\n        }).on('move', function () {\n          hideIfVisible(self);\n        }).on('skip', function () {\n          hideIfVisible(self);\n        }).on('unloaditem disabletools', function () {\n          self.disable();\n        }).on('tool-documentViewer', function (data) {\n          displayViewer(data);\n        });\n      },\n\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {},\n\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        this.getAreaBroker().getContentArea().off(\".\".concat(this.getName()));\n\n        if (this.viewer) {\n          this.viewer.destroy();\n        }\n\n        if (this.controls.$panel) {\n          this.controls.$panel.remove();\n        }\n\n        this.viewer = null;\n        this.controls = {};\n      },\n\n      /**\n       * Enable the button\n       */\n      enable: function enable() {},\n\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        hideIfVisible(this);\n      },\n\n      /**\n       * Show the button\n       */\n      show: function show() {},\n\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        hideIfVisible(this);\n      }\n    });\n\n    return documentViewer;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/highlighter/highlighter',['lodash', 'jquery', 'core/eventifier', 'ui/highlighter'], function (_, $, eventifier, highlighterFactory) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    eventifier = eventifier && Object.prototype.hasOwnProperty.call(eventifier, 'default') ? eventifier['default'] : eventifier;\n    highlighterFactory = highlighterFactory && Object.prototype.hasOwnProperty.call(highlighterFactory, 'default') ? highlighterFactory['default'] : highlighterFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n     */\n    var prevSelection = [];\n    var selection;\n    if (!window.getSelection) throw new Error('Browser does not support getSelection()');\n    selection = window.getSelection();\n    /**\n     * Returns an array of active ranges.\n     * If browser doesn't support multiple Ranges, returns only the first range\n     * see note on https://w3c.github.io/selection-api/#methods\n     *\n     * @returns {Range[]}\n     */\n\n    function getAllRanges() {\n      var i,\n          allRanges = [];\n\n      for (i = 0; i < selection.rangeCount; i++) {\n        allRanges.push(selection.getRangeAt(i));\n      }\n\n      return allRanges;\n    }\n    /**\n     * Discards the global text selection from the browser (window.selection)\n     */\n\n\n    function discardSelection() {\n      // delay discarding, to allow time for multiple highlighters logic\n      setTimeout(function () {\n        selection.removeAllRanges();\n      }, 250);\n    }\n    /**\n     * The highlighter Factory\n     * @param {Object} options\n     * @param {String} [options.className]\n     * @param {String} [options.containerSelector]\n     * @param {Array} [options.containersBlackList]\n     * @param {String} [options.id]\n     * @returns {Object} the highlighter instance\n     */\n\n\n    function testHighlighterFactory(options) {\n      /**\n       * Is this highlighter enabled or disabled?\n       * @type {boolean}\n       */\n      var enabled = true;\n      /**\n       * Are we in highlight mode, meaning that each new selection is automatically highlighted\n       * without having to press any button\n       * @type {boolean}\n       */\n\n      var isHighlighting = false;\n      /**\n       * The helper that does the highlight magic\n       */\n\n      var highlightHelper = highlighterFactory({\n        className: options.className || 'txt-user-highlight',\n        containerSelector: options.containerSelector || '.qti-itemBody',\n        containersBlackList: options.containersBlackList || [],\n        clearOnClick: true\n      }); //add event to automatically highlight the recently made selection if needed\n\n      $(document).on('mouseup.highlighter', function () {\n        if (isHighlighting && !selection.isCollapsed) {\n          highlightHelper.highlightRanges(getAllRanges());\n          discardSelection();\n        }\n      }); //add event to automatically highlight the recently made selection if needed\n      //added touch event (as from TAO-6578)\n\n      $(document).on('touchend.highlighter', function () {\n        if (isHighlighting && !selection.isCollapsed) {\n          highlightHelper.highlightRanges(getAllRanges());\n        }\n      }); // iOS devices clears selection after click on button,\n      // so we store prev selection for this devices to be able\n      // to use it after click on highlight button\n\n      if (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream) {\n        $(document).on('selectionchange', function () {\n          if (!isHighlighting) {\n            prevSelection = _.clone(getAllRanges(), true);\n          }\n        });\n      }\n      /**\n       * The highlighter instance\n       */\n\n\n      return eventifier({\n        /**\n         * Enable this instance\n         */\n        enable: function enable() {\n          enabled = true;\n        },\n\n        /**\n         * Disable this instance\n         */\n        disable: function disable() {\n          enabled = false;\n        },\n\n        /**\n         * Is this instance currently enabled?\n         * @returns {Boolean}\n         */\n        isEnabled: function isEnabled() {\n          return enabled;\n        },\n\n        /**\n         * toggle highlighting mode on and off\n         * @param {Boolean} bool - wanted state\n         */\n        toggleHighlighting: function toggleHighlighting(bool) {\n          isHighlighting = bool;\n\n          if (isHighlighting) {\n            this.trigger('start');\n            $('.qti-itemBody').toggleClass('highlighter-cursor', true);\n          } else {\n            this.trigger('end');\n            $('.qti-itemBody').toggleClass('highlighter-cursor', false);\n          }\n\n          return this;\n        },\n\n        /**\n         * Either highlight the current or selection, or toggle highlighting mode\n         */\n        highlight: function highlight() {\n          if (!isHighlighting) {\n            if (!selection.isCollapsed) {\n              this.toggleHighlighting(true);\n              highlightHelper.highlightRanges(getAllRanges());\n              this.toggleHighlighting(false);\n              discardSelection();\n            } else if (prevSelection[0] && !prevSelection[0].collapsed) {\n              this.toggleHighlighting(true);\n              highlightHelper.highlightRanges(prevSelection);\n              this.toggleHighlighting(false);\n              discardSelection();\n            } else {\n              this.toggleHighlighting(true);\n            }\n          } else {\n            this.toggleHighlighting(false);\n          }\n        },\n\n        /**\n         * restore the highlight from a given index\n         * @param {Array} index\n         */\n        restoreIndex: function restoreIndex(index) {\n          if (index && index.length > 0) {\n            highlightHelper.highlightFromIndex(index);\n          }\n        },\n\n        /**\n         * Get the current index\n         * @returns {Array} index\n         */\n        getIndex: function getIndex() {\n          return highlightHelper.getHighlightIndex();\n        },\n\n        /**\n         * remove all highlights\n         */\n        clearHighlights: function clearHighlights() {\n          highlightHelper.clearHighlights();\n          selection.removeAllRanges();\n        },\n\n        /**\n         * Getter for the instance's id\n         * @returns {String}\n         */\n        getId: function getId() {\n          return options.id;\n        }\n      });\n    }\n\n    return testHighlighterFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/highlighter/collection',['taoQtiTest/runner/plugins/tools/highlighter/highlighter'], function (highlighterFactory) { 'use strict';\n\n    highlighterFactory = highlighterFactory && Object.prototype.hasOwnProperty.call(highlighterFactory, 'default') ? highlighterFactory['default'] : highlighterFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * @var {Array} highlighters - Highlighters collection\n     * We can run multiple instances of the highlighter plugin on one page:\n     * - one for item-level highlights, which persist for the Test session\n     * - others for stimulus-level highlights, which should persist across multiple sessions (TAO-7617)\n     */\n\n    var highlighters = [];\n    /**\n     * @typedef {highlighterCollection}\n     * @returns {Object}\n     */\n\n    var highlighterCollection = function highlighterCollection() {\n      return {\n        /**\n         * Instantiates new highlighter and adds it to array\n         * @param {Object} options\n         * @param {String} options.className - class applied to highlighted spans\n         * @param {String} options.containerSelector - selector for the unique root DOM node the HL will work on\n         * @param {Array}  options.containersBlackList - list of children which should not receive highlights\n         * @param {String} options.id\n         * @returns {Object} a highlighter instance\n         */\n        addHighlighter: function addHighlighter(options) {\n          var hl = highlighterFactory(options);\n          highlighters.push(hl);\n          return hl;\n        },\n\n        /**\n         * Retrieves one highlighter from the collection by matching its id\n         * @param {String} id\n         * @returns {Object} highlighter instance\n         */\n        getHighlighterById: function getHighlighterById(id) {\n          return highlighters.find(function (hl) {\n            return hl.getId() === id;\n          });\n        },\n\n        /**\n         * Retrieves the full array of highlighters from the collection\n         * @returns {Array}\n         */\n        getAllHighlighters: function getAllHighlighters() {\n          return highlighters;\n        },\n\n        /**\n         * Retrieves the first highlighter in the collection\n         * @returns {Object} highlighter instance\n         */\n        getItemHighlighter: function getItemHighlighter() {\n          return highlighters[0];\n        },\n\n        /**\n         * Retrieves the fully array of highlighter from the collection, minus the first one\n         * @returns {Array} highlighter instance\n         */\n        getNonItemHighlighters: function getNonItemHighlighters() {\n          return highlighters.slice(1);\n        },\n\n        /**\n         * Empties th highlighter collection\n         * @returns {Integer}\n         */\n        getLength: function getLength() {\n          return highlighters.length;\n        },\n\n        /**\n         * Empties the highlighter collection\n         * @returns {Object}\n         */\n        empty: function empty() {\n          highlighters = [];\n          return this;\n        }\n      };\n    };\n\n    return highlighterCollection;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/highlighter/plugin',['jquery', 'lodash', 'i18n', 'core/logger', 'taoTests/runner/plugin', 'util/shortcut', 'util/namespace', 'taoQtiTest/runner/helpers/currentItem', 'taoQtiTest/runner/plugins/tools/highlighter/collection', 'taoQtiTest/runner/helpers/map'], function ($, _, __, loggerFactory, pluginFactory, shortcut, namespaceHelper, itemHelper, highlighterCollection, mapHelper) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    itemHelper = itemHelper && Object.prototype.hasOwnProperty.call(itemHelper, 'default') ? itemHelper['default'] : itemHelper;\n    highlighterCollection = highlighterCollection && Object.prototype.hasOwnProperty.call(highlighterCollection, 'default') ? highlighterCollection['default'] : highlighterCollection;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Returns the configured plugin\n     */\n\n    var plugin = pluginFactory({\n      name: 'highlighter',\n\n      /**\n       * Install plugin's functions\n       *\n       */\n      install: function install() {\n        var testRunner = this.getTestRunner(); //define the \"highlighter\" store as \"volatile\" (removed on browser change).\n\n        testRunner.getTestStore().setVolatile(this.getName());\n      },\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       * @returns {void}\n       */\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        var testRunnerOptions = testRunner.getOptions();\n        var pluginShortcuts = (testRunnerOptions.shortcuts || {})[this.getName()] || {};\n        var hasHighlights = false;\n        var logger = loggerFactory('highlighterPlugin');\n        /**\n         * @var {Object} highlighters - Highlighters collection\n         * See taoQtiTest/views/js/runner/plugins/tools/highlighter/collection.js\n         */\n\n        var highlighters = highlighterCollection(); // Create the first (item-level) highlighter instance:\n\n        highlighters.addHighlighter({\n          className: 'txt-user-highlight',\n          containerSelector: '.qti-itemBody',\n          containersBlackList: ['.qti-include'],\n          id: 'item-highlighter'\n        }); // create buttons\n\n        this.buttonMain = this.getAreaBroker().getToolbox().createEntry({\n          title: __('Highlight Text'),\n          icon: 'text-marker',\n          control: 'highlight-trigger',\n          aria: {\n            pressed: 'false',\n            label: __('(Visual) Highlight Text')\n          },\n          text: __('Highlight')\n        });\n        this.buttonRemove = this.getAreaBroker().getToolbox().createEntry({\n          title: __('Clear all active highlights'),\n          icon: 'result-nok',\n          control: 'highlight-clear',\n          aria: {\n            label: __('(Visual) Clear all active highlights')\n          },\n          text: __('Clear Highlights')\n        }); // attach user events\n\n        this.buttonMain.on('mousedown', function (e) {\n          // using 'mousedown' instead of 'click' to avoid losing current selection\n          e.preventDefault();\n\n          if (isPluginEnabled()) {\n            _.forEach(highlighters.getAllHighlighters(), function (instance) {\n              if (instance.isEnabled()) {\n                instance.highlight();\n              }\n            });\n          }\n        });\n        this.buttonRemove.on('click', function (e) {\n          e.preventDefault();\n\n          if (isPluginEnabled()) {\n            _.forEach(highlighters.getAllHighlighters(), function (instance) {\n              if (instance.isEnabled()) {\n                instance.clearHighlights();\n              }\n            });\n\n            testRunner.trigger('clear');\n          }\n        });\n\n        if (testRunnerOptions.allowShortcuts) {\n          if (pluginShortcuts.toggle) {\n            shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n              if (isPluginEnabled()) {\n                _.forEach(highlighters.getAllHighlighters(), function (instance) {\n                  if (instance.isEnabled()) {\n                    instance.highlight();\n                  }\n                });\n              }\n            }, {\n              avoidInput: true,\n              prevent: true\n            });\n          }\n        } //start disabled\n\n\n        this.disable();\n        /**\n         * Checks if the plugin is currently available\n         * @returns {Boolean}\n         */\n\n        function isPluginEnabled() {\n          //to be activated with the special category x-tao-option-highlighter\n          return mapHelper.hasItemCategory(testRunner.getTestMap(), testRunner.getTestContext().itemIdentifier, 'highlighter', true);\n        }\n        /**\n         * Is plugin activated ? if not, then we hide the plugin\n         */\n\n\n        function togglePlugin() {\n          if (isPluginEnabled()) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        }\n        /**\n         * Gets the browser test store\n         * Can be in volatile or non-volatile mode, depending on config\n         * @returns {Promise}\n         */\n\n\n        function getStore() {\n          return testRunner.getTestStore().getStore(self.getName());\n        }\n        /**\n         * Load the stores and hook the behavior\n         */\n\n\n        return getStore().then(function (highlighterStore) {\n          /**\n           * Saves a highlighter's state to the appropriate store\n           * @param {String} [itemId] - must be provided to save item-level highlights,\n           *                            will be used as store key if no key provided\n           * @param {String} [key] - a key (e.g. a stimulus href) under which we store non-item-level highlights\n           * @returns {Boolean} true if save was done\n           */\n          function saveHighlight(itemId, key) {\n            var instance;\n            var highlightsIndex;\n\n            if (!itemId) {\n              instance = highlighters.getHighlighterById(key);\n            } else {\n              key = itemId;\n              instance = highlighters.getItemHighlighter();\n            }\n\n            if (!instance) return Promise.resolve(false);\n            highlightsIndex = instance.getIndex();\n\n            if (isPluginEnabled() && hasHighlights && key) {\n              logger.debug(\"Saving \".concat(highlightsIndex.length, \" highlights for id \").concat(key));\n              return highlighterStore.setItem(key, highlightsIndex);\n            }\n\n            return false;\n          }\n          /**\n           * Saves all the highlighters states in the store\n           * First the non-item highlighters, then the item highlighter (index 0)\n           * @returns {Promise} resolves once the save is done\n           */\n\n\n          function saveAll() {\n            var nonItemHighlighters = highlighters.getNonItemHighlighters();\n            return Promise.all(_(nonItemHighlighters).filter(function (instance) {\n              return instance.isEnabled();\n            }).map(function (instance) {\n              var key = instance.getId();\n              return saveHighlight(null, key);\n            }).value()).then(function (results) {\n              // Now save the main item highlight\n              // and if every setItem() returned true, return true\n              var itemId = testRunner.getTestContext().itemIdentifier;\n              return saveHighlight(itemId) && _.every(results);\n            });\n          }\n          /**\n           * Retrieves a highlighter's state from a store and applies it to the DOM\n           * @param {String} [itemId] - must be provided to save item-level highlights,\n           *                            will be used as store key if no key provided\n           * @param {String} [key] - a key (e.g. a stimulus href) under which we store non-item-level highlights\n           * @returns {Promise} resolves once the load is done\n           */\n\n\n          function loadHighlight(itemId, key) {\n            var instance;\n\n            if (!itemId) {\n              instance = highlighters.getHighlighterById(key);\n            } else {\n              key = itemId;\n              instance = highlighters.getItemHighlighter();\n            }\n\n            if (!instance) return Promise.resolve(false);\n            return highlighterStore.getItem(key).then(function (index) {\n              if (index) {\n                logger.debug(\"Loading \".concat(index.length, \" highlights for key \").concat(key));\n                hasHighlights = true;\n                instance.restoreIndex(index);\n              }\n            }).then(function () {\n              //save highlighter state during the item session,\n              //when the highlighting ends\n              instance.on('end.save', function () {\n                return saveHighlight(itemId, key);\n              });\n            });\n          } //update plugin state based on changes\n\n\n          testRunner.on('loaditem', togglePlugin).on('enabletools renderitem', function () {\n            self.enable();\n\n            if (isPluginEnabled()) {\n              _.forEach(highlighters.getAllHighlighters(), function (instance) {\n                if (!instance.isEnabled()) {\n                  instance.on('start').toggleHighlighting(false).enable();\n                }\n              });\n            }\n          }).on('renderitem', function () {\n            var textStimuli;\n            var itemId = testRunner.getTestContext().itemIdentifier;\n\n            if (itemId && isPluginEnabled()) {\n              hasHighlights = false;\n              highlighters.getItemHighlighter().enable(); // Load item-level highlights from store:\n\n              loadHighlight(itemId); // Count stimuli in this item:\n\n              textStimuli = itemHelper.getTextStimuliHrefs(testRunner); // NOW we can instantiate the extra highlighters:\n\n              _.forEach(textStimuli, function (textStimulusHref) {\n                var stimHighlighter = highlighters.getHighlighterById(textStimulusHref); // Instantiate, if id not already present in highlighters...\n\n                if (!stimHighlighter) {\n                  stimHighlighter = highlighters.addHighlighter({\n                    className: 'txt-user-highlight',\n                    containerSelector: \".qti-include[data-href=\\\"\".concat(textStimulusHref, \"\\\"]\"),\n                    id: textStimulusHref\n                  });\n                }\n\n                stimHighlighter.enable(); // And load its data:\n\n                loadHighlight(null, textStimulusHref);\n              });\n            }\n          }).after('renderitem', function () {\n            // Attach start/end listeners only to item level highlighter\n            var instance = highlighters.getItemHighlighter();\n\n            if (instance.isEnabled()) {\n              instance.on('start', function () {\n                self.buttonMain.turnOn();\n                self.buttonMain.$component.attr('aria-pressed', 'true');\n                self.trigger('start');\n                hasHighlights = true;\n              }).on('end', function () {\n                self.buttonMain.turnOff();\n                self.buttonMain.$component.attr('aria-pressed', 'false');\n                self.trigger('end');\n              });\n            }\n          }).after('clear.highlighter', function () {\n            saveAll();\n          }).before('skip move timeout', function () {\n            return saveAll();\n          }).on('disabletools unloaditem', function () {\n            self.disable();\n\n            if (isPluginEnabled()) {\n              _.forEach(highlighters.getAllHighlighters(), function (instance) {\n                if (instance.isEnabled()) {\n                  instance.off('end.save end start').toggleHighlighting(false).disable();\n                }\n              });\n            }\n          });\n        });\n      },\n\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(\".\".concat(this.getName()));\n        $(document).off('.highlighter');\n      },\n\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.buttonMain.enable();\n        this.buttonRemove.enable();\n      },\n\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.buttonMain.disable();\n        this.buttonRemove.disable();\n      },\n\n      /**\n       * Show the button\n       */\n      show: function show() {\n        this.buttonMain.show();\n        this.buttonRemove.show();\n      },\n\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        this.buttonMain.hide();\n        this.buttonRemove.hide();\n      }\n    });\n\n    return plugin;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/itemThemeSwitcher/itemThemeSwitcher',['jquery', 'lodash', 'i18n', 'taoTests/runner/plugin', 'ui/hider', 'ui/themes', 'util/shortcut', 'util/namespace', 'ui/themeLoader'], function ($, _, __, pluginFactory, hider, themeHandler, shortcut, namespaceHelper, themeLoader) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    themeHandler = themeHandler && Object.prototype.hasOwnProperty.call(themeHandler, 'default') ? themeHandler['default'] : themeHandler;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    themeLoader = themeLoader && Object.prototype.hasOwnProperty.call(themeLoader, 'default') ? themeLoader['default'] : themeLoader;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Returns the configured plugin\n     */\n\n    var itemThemeSwitcher = pluginFactory({\n      name: 'itemThemeSwitcher',\n\n      /**\n       * Install step, add behavior before the lifecycle.\n       */\n      install: function install() {\n        //define the \"itemThemeSwitcher\" store as \"volatile\" (removed on browser change).\n        this.getTestRunner().getTestStore().setVolatile(this.getName());\n      },\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var pluginName = this.getName();\n        var testRunner = this.getTestRunner();\n        var testRunnerOptions = testRunner.getOptions();\n        var pluginShortcuts = (testRunnerOptions.shortcuts || {})[this.getName()] || {};\n        var pluginConfig = this.getConfig();\n        var oldNamespace = themeHandler.getActiveNamespace();\n        var state = {\n          availableThemes: [],\n          defaultTheme: '',\n          selectedTheme: ''\n        };\n        var allMenuEntries = [];\n\n        if (pluginConfig.activeNamespace) {\n          themeHandler.setActiveNamespace(pluginConfig.activeNamespace);\n        }\n\n        var themesConfig = themeHandler.get('items') || {};\n\n        if (pluginConfig.activeNamespace !== oldNamespace && !_.isEmpty(themesConfig)) {\n          reloadThemes();\n        }\n        /**\n         * Tells if the component is enabled\n         * @returns {Boolean}\n         */\n\n\n        function isPluginAllowed() {\n          return themesConfig && _.size(themesConfig.available) > 1;\n        }\n        /**\n         * Reloads theme config and changes theme\n         */\n\n\n        function reloadThemes() {\n          var themeConfig = themeHandler.get('items');\n          themeLoader(themeConfig).load();\n\n          if (state && state.selectedTheme) {\n            changeTheme(state.selectedTheme);\n          } else {\n            changeTheme(themeConfig.default);\n          }\n        }\n        /**\n         * Load the selected theme\n         * @param themeId\n         */\n\n\n        function changeTheme(themeId) {\n          var $qtiItem = $('.qti-item');\n          var previousTheme = state.selectedTheme;\n          state.selectedTheme = themeId;\n\n          if ($qtiItem) {\n            _.defer(function () {\n              $qtiItem.trigger('themechange', [state.selectedTheme]);\n            });\n          }\n\n          if (self.storage) {\n            self.storage.setItem('itemThemeId', themeId);\n          }\n\n          if (previousTheme !== state.selectedTheme) {\n            testRunner.trigger('themechange', state.selectedTheme, previousTheme);\n          }\n\n          allMenuEntries.forEach(function (menuEntry) {\n            if (menuEntry.getId() === themeId) {\n              menuEntry.turnOn();\n            } else {\n              menuEntry.turnOff();\n            }\n          });\n        } //init plugin state\n\n\n        if (themesConfig) {\n          if (themesConfig.default) {\n            state.defaultTheme = themesConfig.default;\n            state.selectedTheme = themesConfig.default;\n            changeTheme(themesConfig.default);\n          }\n\n          if (themesConfig.available) {\n            _.forEach(themesConfig.available, function (theme) {\n              state.availableThemes.push({\n                id: theme.id,\n                label: __(theme.name)\n              });\n            });\n          }\n        } // register toolbox button\n\n\n        this.menuButton = this.getAreaBroker().getToolbox().createMenu({\n          control: 'color-contrast',\n          title: __('Change the current color preset'),\n          icon: 'contrast',\n          text: __('Contrast')\n        }).after('render', function () {\n          if (!isPluginAllowed()) {\n            self.hide();\n          }\n        }).on('click', function (e) {\n          e.preventDefault();\n          testRunner.trigger('tool-themeswitcher-toggle');\n        }).on('openmenu', function () {\n          testRunner.trigger(\"plugin-open.\".concat(pluginName), state.selectedTheme);\n        }).on('closemenu', function () {\n          testRunner.trigger(\"plugin-close.\".concat(pluginName), state.selectedTheme);\n        }); // register menu entries\n\n        state.availableThemes.forEach(function (theme) {\n          var themeEntry = self.getAreaBroker().getToolbox().createEntry({\n            role: 'option',\n            control: theme.id,\n            title: theme.label,\n            icon: 'preview',\n            text: __(theme.label)\n          });\n          themeEntry.setMenuId('color-contrast');\n          themeEntry.on('click', function (e) {\n            var themeId = this.config.control;\n            e.preventDefault();\n            self.menuButton.turnOffAll();\n            this.turnOn();\n            changeTheme(themeId);\n          });\n\n          if (state.defaultTheme === theme.id) {\n            themeEntry.on('render', function () {\n              this.turnOn();\n            });\n          }\n\n          allMenuEntries.push(themeEntry);\n        });\n\n        if (testRunnerOptions.allowShortcuts) {\n          if (pluginShortcuts.toggle) {\n            shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n              testRunner.trigger('tool-themeswitcher-toggle');\n            }, {\n              avoidInput: true\n            });\n          }\n        }\n\n        if (!isPluginAllowed()) {\n          this.hide();\n        } //start disabled\n\n\n        this.disable(); //update plugin state based on changes\n\n        testRunner.on('loaditem', function () {\n          if (isPluginAllowed()) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        }).on('renderitem', function () {\n          self.enable();\n          changeTheme(state.selectedTheme);\n        }).on('enabletools', function () {\n          self.enable();\n        }).on('disabletools unloaditem', function () {\n          self.disable();\n        }).on('tool-themeswitcher-toggle', function () {\n          if (self.getState('enabled') !== false) {\n            self.menuButton.toggleMenu();\n          }\n        }).on('tool-themeswitcher-setnavtype', function (type) {\n          self.menuButton.setNavigationType(type);\n        });\n        return testRunner.getPluginStore(this.getName()).then(function (itemThemesStore) {\n          self.storage = itemThemesStore;\n          self.storage.getItem('itemThemeId').then(function (itemThemeId) {\n            if (itemThemeId && state.selectedTheme !== itemThemeId) {\n              changeTheme(itemThemeId);\n            }\n          });\n        });\n      },\n\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(\".\".concat(this.getName()));\n        return this.getTestRunner().getPluginStore(this.getName()).then(function (itemThemesStore) {\n          return itemThemesStore.removeItem('itemThemeId');\n        });\n      },\n\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.menuButton.enable();\n      },\n\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.menuButton.disable();\n      },\n\n      /**\n       * Show the button\n       */\n      show: function show() {\n        this.menuButton.show();\n      },\n\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        this.menuButton.hide();\n      }\n    });\n\n    return itemThemeSwitcher;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/lineReader/compoundMask',['jquery', 'lodash', 'core/statifier', 'core/eventifier', 'ui/component', 'ui/component/placeable', 'ui/component/draggable', 'ui/component/resizable', 'ui/component/stackable'], function ($, _, statifier, eventifier, componentFactory, makePlaceable, makeDraggable, makeResizable, makeStackable) { 'use strict';\n\n  $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n  _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n  statifier = statifier && Object.prototype.hasOwnProperty.call(statifier, 'default') ? statifier['default'] : statifier;\n  eventifier = eventifier && Object.prototype.hasOwnProperty.call(eventifier, 'default') ? eventifier['default'] : eventifier;\n  componentFactory = componentFactory && Object.prototype.hasOwnProperty.call(componentFactory, 'default') ? componentFactory['default'] : componentFactory;\n  makePlaceable = makePlaceable && Object.prototype.hasOwnProperty.call(makePlaceable, 'default') ? makePlaceable['default'] : makePlaceable;\n  makeDraggable = makeDraggable && Object.prototype.hasOwnProperty.call(makeDraggable, 'default') ? makeDraggable['default'] : makeDraggable;\n  makeResizable = makeResizable && Object.prototype.hasOwnProperty.call(makeResizable, 'default') ? makeResizable['default'] : makeResizable;\n  makeStackable = makeStackable && Object.prototype.hasOwnProperty.call(makeStackable, 'default') ? makeStackable['default'] : makeStackable;\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var defaultDimensions = {\n    outerWidth: 600,\n    outerHeight: 400,\n    innerWidth: 500,\n    innerHeight: 20\n  };\n  var defaultPosition = {\n    outerX: 0,\n    outerY: 0,\n    innerX: 50,\n    innerY: 50\n  };\n  var defaultOptions = {\n    dragMinWidth: 10,\n    dragMinHeight: 10,\n    resizeHandleSize: 10,\n    innerDragHeight: 20\n  };\n  var stackingOptions = {\n    stackingScope: 'test-runner'\n  };\n  var constrains;\n  /**\n   * @param {Object} options\n   * @param {Number} options.resizeHandleSize - size of the resize handlers on each resizable edge\n   * @param {Number} options.dragMinWidth - minimal width for the draggable area of each component.\n   * @param {Number} options.dragMinHeight - minimal height for the draggable area of each component.\n   * @param {Number} options.innerDragHeight - height of the inner window drag handle\n   * @param {Object} dimensions\n   * @param {Number} dimensions.outerWidth - overall mask width\n   * @param {Number} dimensions.outerHeight - overall mask height\n   * @param {Number} dimensions.innerWidth - inner window width\n   * @param {Number} dimensions.innerHeight - inner window height\n   * @param {Number} position\n   * @param {Number} position.outerX - overall mask x\n   * @param {Number} position.outerY - overall mask y\n   * @param {Number} position.innerX - inner window mask x\n   * @param {Number} position.innerY - inner window mask y\n   */\n\n  function compoundMaskFactory(options, dimensions, position) {\n    var compoundMask,\n        allParts = {},\n        innerDrag,\n        closer,\n        visualGuides = {};\n    /**\n     * ============================================\n     * Definition of Mask & Overlay component types\n     * ============================================\n     */\n\n    /**\n     * Create a mask component. They are used for masking (obviously) but also resizing the compound mask\n     * @param {Object} maskConfig\n     * @param {String} maskConfig.id\n     * @param {Function} maskConfig.place - size and position the mask according to the transform model\n     * @param {Function} maskConfig.placeOverlay - size and position the overlay according to the transform model\n     * @param {Function} maskConfig.beforeResize - used to set the resize limit depending on which edge the resizing occurs\n     * @param {Function} maskConfig.onResize - how the resize affect the transform model\n     * @param {Object} maskConfig.edges - Interact configuration to specify which edges can be used for resizing\n     * @param {Number} maskConfig.minWidth\n     * @param {Number} maskConfig.minHeight\n     */\n\n    function createMask(maskConfig) {\n      var mask,\n          maskAPI = {\n        place: maskConfig.place,\n        placeOverlay: maskConfig.placeOverlay,\n        styleResizableEdges: function styleResizableEdges() {\n          var $element = this.getElement();\n\n          _.forOwn(this.config.edgesBorders, function (isResizable, edgeId) {\n            if (isResizable) {\n              $element.addClass(\"border-\".concat(edgeId));\n            }\n          });\n        },\n        addResizeControll: function addResizeControll() {\n          var $element = this.getElement();\n          var $resizeControll = $('<div>', {\n            class: 'resize-control'\n          });\n          $element.append($resizeControll);\n        }\n      };\n      mask = componentFactory(maskAPI, maskConfig);\n      makeResizable(mask);\n      makeStackable(mask, stackingOptions);\n      return mask.on('render', function () {\n        var $element = this.getElement();\n        this.styleResizableEdges();\n\n        if (this.config.resizeControll) {\n          this.addResizeControll();\n        }\n\n        $element.addClass(\"line-reader-mask \".concat(maskConfig.id)).on('mousedown touchstart', function () {\n          bringAllToFront();\n        }); // uncomment this to see what's going on with masks:\n        // $element.css({ border: '1px solid olive'});\n      }).on('resizestart', function () {\n        innerDrag.hide();\n        closer.hide();\n        invokeOnOverlays('hide');\n        invokeOnMasks('setState', ['resizing', true]);\n        this.setState('resizer', true);\n      }).on('beforeresize', maskConfig.beforeResize || _.noop).on('resize', maskConfig.onResize || _.noop).on('resizeend', function () {\n        applyTransformsToOverlays();\n        applyTransformsToInnerDrag();\n        applyTransformsToCloser();\n        invokeOnMasks('setState', ['resizing', false]);\n        invokeOnOverlays('show');\n        innerDrag.show();\n        closer.show();\n        this.setState('resizer', false);\n      }).init();\n    }\n    /**\n     * Create a overlay component. Overlay are invisible and are used for dragging.\n     * When clicked, the whole mask is hidden and only the overlay is displayed, after being resized to fit the whole mask surface\n     * this allows for performance improvement as well as giving the dragged element proper dragging boundaries.\n     * Also, visual guides are added, like a fake inner window, during the drag\n     * @param {Object} overlayConfig\n     * @param {String} overlayConfig.id\n     */\n\n\n    function createOverlay(overlayConfig) {\n      var overlay,\n          overlayAPI = {\n        transformOverlay: function transformOverlay() {\n          var $element = this.getElement();\n          this._sizeBackup = this.getSize();\n          this._posBackup = this.getPosition();\n          this.setSize(dimensions.outerWidth, dimensions.outerHeight).moveTo(position.outerX, position.outerY);\n          $element.addClass('moving');\n          this.setState('transformed', true);\n        },\n        restoreOverlay: function restoreOverlay() {\n          var $element = this.getElement();\n\n          if (this.is('transformed')) {\n            this.setSize(this._sizeBackup.width, this._sizeBackup.height).moveTo(this._posBackup.x, this._posBackup.y);\n            $element.removeClass('moving');\n            this._sizeBackup = null;\n            this._posBackup = null;\n            this.setState('transformed', false);\n          }\n        },\n        appendVisualGuides: function appendVisualGuides() {\n          var $element = this.getElement(),\n              borderWidth = 1,\n              // this mirror the $lrBorderWidth css variable\n          borderOffset = borderWidth * 2;\n          $element.append(visualGuides.$maskBg);\n          $element.append(visualGuides.$innerWindow);\n          visualGuides.$maskBg.css({\n            width: dimensions.outerWidth - borderOffset,\n            height: dimensions.outerHeight - borderOffset,\n            'border-top-width': dimensions.topHeight - borderOffset,\n            'border-right-width': dimensions.rightWidth - borderOffset,\n            'border-bottom-width': dimensions.bottomHeight - borderOffset,\n            'border-left-width': dimensions.leftWidth - borderOffset\n          });\n          visualGuides.$innerWindow.css({\n            width: dimensions.innerWidth,\n            height: dimensions.innerHeight,\n            left: dimensions.leftWidth - borderOffset,\n            top: dimensions.topHeight - borderOffset\n          });\n        },\n        removeVisualGuides: function removeVisualGuides() {\n          visualGuides.$maskBg.remove();\n          visualGuides.$innerWindow.remove();\n        }\n      };\n      overlay = componentFactory(overlayAPI, overlayConfig);\n      makeDraggable(overlay);\n      makeStackable(overlay, stackingOptions);\n      return overlay.on('render', function () {\n        var self = this,\n            $element = this.getElement(),\n            // captures touch and mouse\n        // also fixes issue with IE not capturing 'mousedown' etc\n        pointerEventsPrefix = window.PointerEvent ? 'pointer' : 'mouse',\n            $moveIcon = $('<div>', {\n          class: 'icon icon-mobile-menu'\n        });\n        $element.addClass(\"line-reader-overlay \".concat(overlayConfig.id)).on(\"\".concat(pointerEventsPrefix, \"down\") + \" touchstart\", function () {\n          bringAllToFront();\n          self.transformOverlay();\n        }).on(\"\".concat(pointerEventsPrefix, \"up\") + \" touchend\", function () {\n          self.restoreOverlay();\n        }).prepend($moveIcon);\n      }).on('dragstart', function () {\n        innerDrag.hide();\n        closer.hide();\n        invokeOnMasks('hide');\n        this.appendVisualGuides();\n      }).on('dragmove', function moveAllPartsTogether(xOffsetRelative, yOffsetRelative) {\n        // update the transform model\n        position.outerX += xOffsetRelative;\n        position.outerY += yOffsetRelative;\n        position.innerX += xOffsetRelative;\n        position.innerY += yOffsetRelative;\n      }).on('dragend', function () {\n        this.removeVisualGuides(); // although they are already display, calling show() again on the overlays\n        // will force their z-Index at the top of the stack\n\n        invokeOnAll('show');\n        innerDrag.show();\n        closer.show(); // apply the new transform model\n\n        applyTransforms();\n      }).init();\n    }\n    /**\n     * ==========================\n     * Inner Drag Handle & Closer\n     * ==========================\n     */\n\n    /**\n     * This handle allows to drag the inner window\n     */\n\n\n    function createInnerDragHandle() {\n      // uncomment this (and a few lines below) if debugging is needed:\n      // var $boundingBox = $('<div>').css({ position: 'fixed', 'box-sizing': 'border-box', border: '1px solid red' });\n      innerDrag = componentFactory();\n      makeStackable(innerDrag, stackingOptions);\n      makeDraggable(innerDrag, {\n        dragRestriction: function dragRestriction() {\n          var fixedXY = allParts.nw.mask.getElement().offset(),\n              rect;\n          rect = {\n            x: fixedXY.left + constrains.minWidth,\n            y: fixedXY.top + (constrains.minTopHeight + dimensions.innerHeight + options.resizeHandleSize),\n            width: dimensions.outerWidth - constrains.minWidth * 2,\n            height: dimensions.outerHeight - (dimensions.innerHeight + constrains.minTopHeight + constrains.minBottomHeight - options.innerDragHeight)\n          }; // uncomment to see what's going on:\n          // allParts.ne.mask.getContainer().append($boundingBox);\n          // $boundingBox.css({ width: rect.width, height: rect.height, top: rect.y, left: rect.x });\n\n          return rect;\n        }\n      }).on('render', function () {\n        var $element = this.getElement(),\n            $dragIcon = $('<div>', {\n          class: 'icon icon-move'\n        });\n        $element.css('touch-action', 'none');\n        $element.addClass('line-reader-inner-drag');\n        $element.css({\n          background: 'none'\n        });\n        $element.append($dragIcon);\n      }).on('dragstart', function () {\n        closer.hide();\n        bringAllToFront();\n        invokeOnMasks('setState', ['resizing', true]);\n      }).on('dragmove', function (xOffsetRelative, yOffsetRelative) {\n        position.innerX += xOffsetRelative;\n        position.innerY += yOffsetRelative;\n        dimensions.leftWidth += xOffsetRelative;\n        dimensions.topHeight += yOffsetRelative;\n        dimensions.rightWidth -= xOffsetRelative;\n        dimensions.bottomHeight -= yOffsetRelative;\n        applyTransformsToMasks();\n      }).on('dragend', function () {\n        innerDrag.bringToFront();\n        closer.show();\n        invokeOnMasks('setState', ['resizing', false]);\n        applyTransformsToOverlays();\n      }).init();\n    }\n    /**\n     * Close button for the compound mask\n     */\n\n\n    function createCloser() {\n      closer = componentFactory();\n      makeStackable(closer, stackingOptions);\n      makePlaceable(closer).on('render', function () {\n        var self = this,\n            $element = this.getElement(),\n            $closeIcon = $('<div>', {\n          class: 'icon icon-result-nok'\n        });\n        $element.append($closeIcon);\n        $element.addClass('line-reader-closer');\n        $element.on('mousedown touchstart', function () {\n          bringAllToFront();\n        });\n        $element.on('click', function (e) {\n          e.stopPropagation();\n          self.trigger('click');\n        });\n      }).init();\n    }\n    /**\n     * =================\n     * Utility functions\n     * =================\n     */\n\n\n    function bringAllToFront() {\n      invokeOnAll('bringToFront');\n      innerDrag.bringToFront();\n      closer.bringToFront();\n    }\n\n    function invokeOnAll(fn, args) {\n      invokeOnMasks(fn, args);\n      invokeOnOverlays(fn, args);\n    }\n\n    function invokeOnMasks(fn, args) {\n      invokeOn('mask', fn, args);\n    }\n\n    function invokeOnOverlays(fn, args) {\n      invokeOn('overlay', fn, args);\n    }\n    /**\n     * Invoke a method on all compound mask parts, whether mask or overlays\n     * @param {String} target - mask | overlay\n     * @param {String} fn - the name of the method to invoke\n     * @param {*[]} args - arguments passed on invoke\n     */\n\n\n    function invokeOn(target, fn, args) {\n      _.forOwn(allParts, function (part) {\n        if (_.isObject(part[target]) && _.isFunction(part[target][fn])) {\n          var _part$target;\n\n          (_part$target = part[target])[fn].apply(_part$target, _toConsumableArray(args || []));\n        }\n      });\n    }\n    /**\n     * =================================\n     * Transform model related functions\n     * =================================\n     */\n\n\n    function applyTransforms() {\n      applyTransformsToMasks();\n      applyTransformsToOverlays();\n      applyTransformsToInnerDrag();\n      applyTransformsToCloser();\n    }\n\n    function applyTransformsToMasks() {\n      invokeOnMasks('place');\n    }\n\n    function applyTransformsToOverlays() {\n      _.forOwn(allParts, function (part) {\n        if (part.overlay) {\n          part.mask.placeOverlay(part.overlay);\n        }\n      });\n    }\n\n    function applyTransformsToInnerDrag() {\n      if (innerDrag) {\n        innerDrag.setSize(dimensions.innerWidth - 20, options.innerDragHeight).moveTo(position.innerX + 10, position.innerY + dimensions.innerHeight + options.resizeHandleSize);\n      }\n    }\n\n    function applyTransformsToCloser() {\n      if (closer) {\n        closer.setSize(constrains.minWidth - options.resizeHandleSize, constrains.minHeight - options.resizeHandleSize).moveTo(position.outerX + dimensions.outerWidth - constrains.minWidth - 5, // manual adjustment so it looks better\n        position.outerY + options.resizeHandleSize - 4);\n      }\n    }\n    /**\n     * Check that the given transform model respect the current constrains.\n     * If not, correct them\n     */\n\n\n    function correctTransforms() {\n      if (dimensions.topHeight < constrains.minTopHeight) {\n        dimensions.topHeight = constrains.minTopHeight;\n        position.innerY = position.outerY + constrains.minTopHeight;\n      }\n\n      if (dimensions.innerHeight < constrains.minHeight) {\n        dimensions.innerHeight = constrains.minHeight;\n      }\n\n      if (dimensions.bottomHeight < constrains.minBottomHeight) {\n        dimensions.bottomHeight = constrains.minBottomHeight;\n      }\n\n      dimensions.outerHeight = dimensions.topHeight + dimensions.innerHeight + dimensions.bottomHeight;\n\n      if (dimensions.leftWidth < constrains.minWidth) {\n        dimensions.leftWidth = constrains.minWidth;\n        position.innerX = position.outerX + constrains.minWidth;\n      }\n\n      if (dimensions.innerWidth < constrains.minWidth) {\n        dimensions.innerWidth = constrains.minWidth;\n      }\n\n      if (dimensions.rightWidth < constrains.minWidth) {\n        dimensions.rightWidth = constrains.minWidth;\n      }\n\n      dimensions.outerWidth = dimensions.leftWidth + dimensions.innerWidth + dimensions.rightWidth;\n    }\n    /**\n     * Update the transform model during a resize affecting the top height\n     * @param {Number} newHeight\n     * @param {Number} newY\n     * @param {Boolean} fromTop - if the resize occurs from the top\n     */\n\n\n    function setTopHeight(newHeight, newY, fromTop) {\n      dimensions.topHeight = newHeight;\n\n      if (fromTop) {\n        dimensions.outerHeight = newHeight + dimensions.innerHeight + dimensions.bottomHeight;\n        position.outerY = newY;\n      } else {\n        dimensions.innerHeight = dimensions.outerHeight - newHeight - dimensions.bottomHeight;\n        position.innerY = position.outerY + newHeight;\n      }\n    }\n    /**\n     * Update the transform model during a resize affecting the right width\n     * @param {Number} newWidth\n     * @param {Number} newX\n     * @param {Boolean} fromLeft - if the resize occurs from the left\n     */\n\n\n    function setRightWidth(newWidth, newX, fromLeft) {\n      dimensions.rightWidth = newWidth;\n\n      if (fromLeft) {\n        dimensions.innerWidth = newX - position.innerX;\n      } else {\n        dimensions.outerWidth = dimensions.leftWidth + dimensions.innerWidth + newWidth;\n      }\n    }\n    /**\n     * Update the transform model during a resize affecting the bottom height\n     * @param {Number} newHeight\n     * @param {Number} newY\n     * @param {Boolean} fromTop - if the resize occurs from the top\n     */\n\n\n    function setBottomHeight(newHeight, newY, fromTop) {\n      dimensions.bottomHeight = newHeight;\n\n      if (fromTop) {\n        dimensions.innerHeight = newY - position.innerY;\n        dimensions.bottomHeight = newHeight;\n      } else {\n        dimensions.outerHeight = dimensions.topHeight + dimensions.innerHeight + newHeight;\n      }\n    }\n    /**\n     * Update the transform model during a resize affecting the left width\n     * @param {Number} newWidth\n     * @param {Number} newX\n     * @param {Boolean} fromLeft - if the resize occurs from the left\n     */\n\n\n    function setLeftWidth(newWidth, newX, fromLeft) {\n      dimensions.leftWidth = newWidth;\n\n      if (fromLeft) {\n        dimensions.outerWidth = newWidth + dimensions.innerWidth + dimensions.rightWidth;\n        position.outerX = newX;\n      } else {\n        dimensions.innerWidth = dimensions.outerWidth - newWidth - dimensions.rightWidth;\n        position.innerX = position.outerX + newWidth;\n      }\n    }\n    /**\n     * Update the transform model during a resize affecting inner height\n     * @param {Number} newHeight\n     */\n\n\n    var setInnerHeight = function setInnerHeight(newHeight) {\n      dimensions.innerHeight = newHeight;\n      dimensions.bottomHeight = dimensions.outerHeight - dimensions.innerHeight - dimensions.topHeight;\n    };\n    /**\n     * ======================================\n     * Mask parts and other elements creation\n     * ======================================\n     */\n\n\n    function createCompoundMask() {\n      // North\n      createPart({\n        id: 'n',\n        edges: {\n          top: false,\n          right: false,\n          bottom: false,\n          left: false\n        },\n        edgesBorders: {\n          top: true,\n          right: false,\n          bottom: true,\n          left: false\n        },\n        addOverlay: true,\n        minHeight: constrains.minTopHeight,\n        // move and dimension the mask\n        place: function place() {\n          this.moveTo(position.innerX, position.outerY).setSize(dimensions.innerWidth, dimensions.topHeight);\n        },\n        // move and dimension the overlay\n        placeOverlay: function placeOverlay(overlay) {\n          var pos = this.getPosition(),\n              size = this.getSize();\n          overlay.moveTo(position.outerX, pos.y).setSize(dimensions.outerWidth, size.height);\n        },\n        // set a resize limit whenever resize happens on an inner edge (here, the top inner edge, eg. the bottom of the mask),\n        // so the min/max width/height limit for \"inner component\" is respected\n        beforeResize: function beforeResize(width, height, fromLeft, fromTop) {\n          this.config.maxHeight = fromTop ? null : dimensions.topHeight + (dimensions.innerHeight - constrains.minHeight);\n        },\n        // set the new transform values (dimension and position) resulting from the current mask resize, and apply them\n        onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n          setTopHeight(height, y, fromTop);\n          applyTransformsToMasks();\n        }\n      }); // North-east\n\n      createPart({\n        id: 'ne',\n        edges: {\n          top: false,\n          right: false,\n          bottom: false,\n          left: false\n        },\n        edgesBorders: {\n          top: true,\n          right: true,\n          bottom: false,\n          left: false\n        },\n        minHeight: constrains.minTopHeight,\n        place: function place() {\n          this.moveTo(position.innerX + dimensions.innerWidth, position.outerY).setSize(dimensions.rightWidth, dimensions.topHeight);\n        },\n        placeOverlay: function placeOverlay(overlay) {\n          var pos = this.getPosition(),\n              size = this.getSize();\n          overlay.moveTo(pos.x, pos.y + options.resizeHandleSize).setSize(size.width - options.resizeHandleSize, size.height - options.resizeHandleSize * 2);\n        },\n        onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n          setTopHeight(height, y, fromTop);\n          setRightWidth(width, x, fromLeft);\n          applyTransformsToMasks();\n        }\n      }); // South east\n\n      createPart({\n        id: 'se',\n        edges: {\n          top: false,\n          right: '.resize-control',\n          bottom: '.resize-control',\n          left: false\n        },\n        edgesBorders: {\n          top: false,\n          right: true,\n          bottom: true,\n          left: false\n        },\n        minHeight: constrains.minBottomHeight,\n        resizeControll: true,\n        place: function place() {\n          this.moveTo(position.innerX + dimensions.innerWidth, position.innerY + dimensions.innerHeight).setSize(dimensions.rightWidth, dimensions.bottomHeight);\n        },\n        placeOverlay: function placeOverlay(overlay) {\n          var pos = this.getPosition(),\n              size = this.getSize();\n          overlay.moveTo(pos.x, pos.y + options.resizeHandleSize).setSize(size.width - options.resizeHandleSize, size.height - options.resizeHandleSize * 2);\n        },\n        onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n          setRightWidth(width, x, fromLeft);\n          setBottomHeight(height, y, fromTop);\n          applyTransformsToMasks();\n        }\n      }); // South\n\n      createPart({\n        id: 's',\n        edges: {\n          top: false,\n          right: false,\n          bottom: false,\n          left: false\n        },\n        edgesBorders: {\n          top: true,\n          right: false,\n          bottom: true,\n          left: false\n        },\n        minHeight: constrains.minBottomHeight,\n        place: function place() {\n          this.moveTo(position.innerX, position.innerY + dimensions.innerHeight).setSize(dimensions.innerWidth, dimensions.bottomHeight);\n        },\n        placeOverlay: function placeOverlay(overlay) {\n          var pos = this.getPosition(),\n              size = this.getSize();\n          overlay.moveTo(pos.x, pos.y + options.resizeHandleSize).setSize(size.width, size.height - options.resizeHandleSize * 2);\n        },\n        beforeResize: function beforeResize(width, height, fromLeft, fromTop) {\n          this.config.maxHeight = fromTop ? dimensions.bottomHeight + (dimensions.innerHeight - constrains.minHeight) : null;\n        },\n        onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n          setBottomHeight(height, y, fromTop);\n          applyTransformsToMasks();\n        }\n      }); // East\n\n      createPart({\n        id: 'e',\n        edges: {\n          top: false,\n          right: false,\n          bottom: '.resize-control',\n          left: '.resize-control'\n        },\n        edgesBorders: {\n          top: false,\n          right: true,\n          bottom: false,\n          left: true\n        },\n        resizeControll: true,\n        place: function place() {\n          this.moveTo(position.innerX + dimensions.innerWidth, position.innerY).setSize(dimensions.rightWidth, dimensions.innerHeight);\n        },\n        placeOverlay: function placeOverlay(overlay) {\n          var pos = this.getPosition(),\n              size = this.getSize();\n          overlay.moveTo(pos.x + options.resizeHandleSize, pos.y - options.resizeHandleSize).setSize(size.width - options.resizeHandleSize * 2, size.height + options.resizeHandleSize * 2);\n        },\n        // eslint-disable-next-line no-unused-vars\n        beforeResize: function beforeResize(width, height, fromLeft) {\n          this.config.maxWidth = dimensions.rightWidth + (dimensions.innerWidth - constrains.minWidth);\n          this.config.minWidth = constrains.minWidth;\n          this.config.maxHeight = dimensions.outerHeight - dimensions.topHeight - constrains.minBottomHeight;\n        },\n        onResize: function onResize(width, height, fromLeft, fromTop, x) {\n          setRightWidth(width, x, fromLeft);\n          setInnerHeight(height);\n          applyTransformsToMasks();\n        }\n      }); // South-west\n\n      createPart({\n        id: 'sw',\n        edges: {\n          top: false,\n          right: false,\n          bottom: false,\n          left: false\n        },\n        edgesBorders: {\n          top: false,\n          right: false,\n          bottom: true,\n          left: true\n        },\n        minHeight: constrains.minBottomHeight,\n        place: function place() {\n          this.moveTo(position.outerX, position.innerY + dimensions.innerHeight).setSize(dimensions.leftWidth, dimensions.bottomHeight);\n        },\n        placeOverlay: function placeOverlay(overlay) {\n          var pos = this.getPosition(),\n              size = this.getSize();\n          overlay.moveTo(pos.x + options.resizeHandleSize, pos.y + options.resizeHandleSize).setSize(size.width - options.resizeHandleSize, size.height - options.resizeHandleSize * 2);\n        },\n        onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n          setBottomHeight(height, y, fromTop);\n          setLeftWidth(width, x, fromLeft);\n          applyTransformsToMasks();\n        }\n      }); // West\n\n      createPart({\n        id: 'w',\n        edges: {\n          top: false,\n          right: false,\n          bottom: false,\n          left: false\n        },\n        edgesBorders: {\n          top: false,\n          right: true,\n          bottom: false,\n          left: true\n        },\n        place: function place() {\n          this.moveTo(position.outerX, position.innerY).setSize(dimensions.leftWidth, dimensions.innerHeight);\n        },\n        placeOverlay: function placeOverlay(overlay) {\n          var pos = this.getPosition(),\n              size = this.getSize();\n          overlay.moveTo(pos.x + options.resizeHandleSize, pos.y - options.resizeHandleSize).setSize(size.width - options.resizeHandleSize * 2, size.height + options.resizeHandleSize * 2);\n        },\n        beforeResize: function beforeResize(width, height, fromLeft) {\n          this.config.maxWidth = fromLeft ? null : dimensions.leftWidth + (dimensions.innerWidth - constrains.minWidth);\n        },\n        onResize: function onResize(width, height, fromLeft, fromTop, x) {\n          setLeftWidth(width, x, fromLeft);\n          applyTransformsToMasks();\n        }\n      }); // North-west\n\n      createPart({\n        id: 'nw',\n        edges: {\n          top: false,\n          right: false,\n          bottom: false,\n          left: false\n        },\n        edgesBorders: {\n          top: true,\n          right: false,\n          bottom: false,\n          left: true\n        },\n        minHeight: constrains.minTopHeight,\n        place: function place() {\n          this.moveTo(position.outerX, position.outerY).setSize(dimensions.leftWidth, dimensions.topHeight);\n        },\n        placeOverlay: function placeOverlay(overlay) {\n          var pos = this.getPosition(),\n              size = this.getSize();\n          overlay.moveTo(pos.x + options.resizeHandleSize, pos.y + options.resizeHandleSize).setSize(size.width - options.resizeHandleSize, size.height - options.resizeHandleSize * 2);\n        },\n        onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n          setTopHeight(height, y, fromTop);\n          setLeftWidth(width, x, fromLeft);\n          applyTransformsToMasks();\n        }\n      });\n    }\n\n    function createPart(partConfig) {\n      allParts[partConfig.id] = {\n        mask: createMask(_.assign({}, constrains, partConfig)),\n        overlay: partConfig.addOverlay ? createOverlay(partConfig) : null\n      };\n    }\n\n    function createVisualGuides() {\n      visualGuides.$maskBg = $('<div>', {\n        class: 'mask-bg'\n      });\n      visualGuides.$innerWindow = $('<div>', {\n        class: 'inner-window'\n      });\n    }\n    /**\n     * =========================\n     * The compoundMask instance\n     * =========================\n     */\n\n\n    dimensions = _.defaults(dimensions || {}, defaultDimensions);\n    position = _.defaults(position || {}, defaultPosition);\n    options = _.defaults(options || {}, defaultOptions);\n    constrains = {\n      minWidth: options.resizeHandleSize * 2 + options.dragMinWidth,\n      minHeight: options.resizeHandleSize * 2 + options.dragMinHeight,\n      minBottomHeight: options.resizeHandleSize * 2 + options.innerDragHeight,\n      minTopHeight: options.resizeHandleSize * 2 + 18 // make sure that top will fit header size\n\n    };\n    compoundMask = {\n      init: function init() {\n        var self = this;\n        this.setTransforms(dimensions, position);\n        createCompoundMask();\n        createVisualGuides();\n        createInnerDragHandle();\n        createCloser();\n        closer.on('click', function () {\n          self.hide();\n          self.trigger('close');\n        });\n        return this;\n      },\n      render: function render($container) {\n        invokeOnAll('render', [$container]);\n        innerDrag.render($container);\n        closer.render($container);\n        applyTransforms();\n        return this;\n      },\n      destroy: function destroy() {\n        invokeOnAll('destroy');\n        visualGuides = null;\n        innerDrag = null;\n        closer = null;\n        return this;\n      },\n      show: function show() {\n        invokeOnAll('show');\n        innerDrag.show();\n        closer.show();\n        this.setState('hidden', false);\n        return this;\n      },\n      hide: function hide() {\n        invokeOnAll('hide');\n        innerDrag.hide();\n        closer.hide();\n        this.setState('hidden', true);\n        return this;\n      },\n\n      /**\n       * Allow updating the transform model\n       * @param {Object} dim\n       * @param {Number} dim.outerWidth - overall mask width\n       * @param {Number} dim.outerHeight - overall mask height\n       * @param {Number} dim.innerWidth - inner window width\n       * @param {Number} dim.innerHeight - inner window height\n       * @param {Number} pos\n       * @param {Number} pos.outerX - overall mask x\n       * @param {Number} pos.outerY - overall mask y\n       * @param {Number} pos.innerX - inner window x\n       * @param {Number} pos.innerY - inner window y\n       */\n      setTransforms: function setTransforms(dim, pos) {\n        dimensions = _.defaults(dim || {}, dimensions);\n        position = _.defaults(pos || {}, position); // automatically complete the dimensions\n\n        dimensions.topHeight = pos.innerY - pos.outerY;\n        dimensions.rightWidth = dim.outerWidth - (pos.innerX - pos.outerX) - dim.innerWidth;\n        dimensions.bottomHeight = dim.outerHeight - (pos.innerY - pos.outerY) - dim.innerHeight;\n        dimensions.leftWidth = pos.innerX - pos.outerX;\n        correctTransforms();\n        applyTransforms();\n      },\n      getDimensions: function getDimensions() {\n        return dimensions;\n      },\n      getPosition: function getPosition() {\n        return position;\n      },\n      getParts: function getParts() {\n        return allParts;\n      }\n    };\n    statifier(compoundMask);\n    eventifier(compoundMask);\n    return compoundMask;\n  }\n\n  return compoundMaskFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/lineReader/plugin',['lodash', 'i18n', 'taoTests/runner/plugin', 'ui/hider', 'util/shortcut', 'util/namespace', 'taoQtiTest/runner/helpers/map', 'taoQtiTest/runner/plugins/tools/lineReader/compoundMask'], function (_, __, pluginFactory, hider, shortcut, namespaceHelper, mapHelper, compoundMaskFactory) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    compoundMaskFactory = compoundMaskFactory && Object.prototype.hasOwnProperty.call(compoundMaskFactory, 'default') ? compoundMaskFactory['default'] : compoundMaskFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n\n    var pluginName = 'line-reader';\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n\n    var actionPrefix = \"tool-\".concat(pluginName, \"-\");\n    /**\n     * Options for the compoundMask factory\n     * @type {Object}\n     */\n\n    var maskOptions = {\n      dragMinWidth: 17,\n      dragMinHeight: 7,\n      resizeHandleSize: 7,\n      innerDragHeight: 20\n    };\n    var dimensions, position;\n    /**\n     * These functions are a first effort to place the mask on the first line on the item\n     * They make a lot of assumptions:\n     * - the item starts with a text\n     * - the padding is set on the .qti-item container\n     * - the padding is consistent with the minWidth/minHeight configuration of the mask\n     * - and some other...\n     * @param {jQuery} $container - where the mask is appended\n     */\n\n    function getDimensions($container) {\n      var $qtiContent = $container.find('#qti-content'),\n          $qtiItem = $qtiContent.find('.qti-item'),\n          lineHeight = Math.ceil(parseFloat($qtiContent.css('line-height'))) || 20; // reasonable default line height\n\n      return {\n        outerWidth: $qtiItem.width() + maskOptions.resizeHandleSize * 4 + maskOptions.dragMinWidth * 2,\n        outerHeight: 175,\n        // reasonable default height\n        innerWidth: $qtiItem.width(),\n        innerHeight: lineHeight\n      };\n    }\n\n    function getPosition($container) {\n      var $qtiContent = $container.find('#qti-content'),\n          $qtiItem = $qtiContent.find('.qti-item'),\n          itemPosition = $qtiItem.position() || {},\n          paddingLeft = parseInt($qtiItem.css('padding-left'), 10),\n          paddingTop = parseInt($qtiItem.css('padding-top'), 10),\n          textPadding = 3,\n          // this is to let the text breathe a bit\n      innerX = parseInt(itemPosition.left, 10) + paddingLeft - textPadding,\n          innerY = parseInt(itemPosition.top, 10) + paddingTop - textPadding;\n      return {\n        outerX: innerX - maskOptions.resizeHandleSize * 2 - maskOptions.dragMinWidth,\n        outerY: 0,\n        innerX: innerX,\n        innerY: innerY\n      };\n    }\n\n    function containerWidthHasChanged($container) {\n      var newDimensions = getDimensions($container);\n      return newDimensions.outerWidth !== dimensions.outerWidth;\n    }\n    /**\n     * Returns the configured plugin\n     */\n\n\n    var plugin = pluginFactory({\n      name: pluginName,\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        var testRunnerOptions = testRunner.getOptions();\n        var pluginShortcuts = (testRunnerOptions.shortcuts || {})[pluginName] || {};\n        var $container = testRunner.getAreaBroker().getContentArea().parent();\n        this.compoundMask = compoundMaskFactory(maskOptions).init().render($container).on('close', function () {\n          closeMask();\n        }).hide();\n        /**\n         * Checks if the plugin is currently available\n         * @returns {Boolean}\n         */\n\n        function isEnabled() {\n          //to be activated with the special category x-tao-option-lineReader\n          return mapHelper.hasItemCategory(testRunner.getTestMap(), testRunner.getTestContext().itemIdentifier, 'lineReader', true);\n        }\n\n        function toggleButton() {\n          if (isEnabled()) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        }\n\n        function toggleMask() {\n          if (self.compoundMask.getState('hidden')) {\n            if (containerWidthHasChanged($container)) {\n              transformMask($container);\n            }\n\n            openMask();\n          } else {\n            closeMask();\n          }\n        }\n\n        function openMask() {\n          self.compoundMask.show();\n          self.trigger('start');\n          self.button.turnOn();\n        }\n\n        function closeMask() {\n          if (!self.compoundMask.getState('hidden')) {\n            self.compoundMask.hide();\n          }\n\n          self.trigger('end');\n          self.button.turnOff();\n        }\n\n        function transformMask($maskContainer) {\n          dimensions = getDimensions($maskContainer);\n          position = getPosition($maskContainer);\n          self.compoundMask.setTransforms(_.clone(dimensions), _.clone(position));\n        } // create button\n\n\n        this.button = this.getAreaBroker().getToolbox().createEntry({\n          title: __('Line Reader'),\n          icon: 'insert-horizontal-line',\n          control: 'line-reader',\n          text: __('Line Reader')\n        }); // attach user events\n\n        this.button.on('click', function (e) {\n          e.preventDefault();\n          testRunner.trigger(\"\".concat(actionPrefix, \"toggle\"));\n        });\n\n        if (testRunnerOptions.allowShortcuts) {\n          if (pluginShortcuts.toggle) {\n            shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n              testRunner.trigger(\"\".concat(actionPrefix, \"toggle\"));\n            }, {\n              avoidInput: true,\n              prevent: true\n            });\n          }\n        } //start disabled\n\n\n        this.disable(); //update plugin state based on changes\n\n        testRunner.on('loaditem', toggleButton).on('renderitem', function () {\n          transformMask($container);\n        }).on('enabletools renderitem', function () {\n          self.enable();\n        }).on('disabletools unloaditem', function () {\n          self.disable();\n          closeMask();\n        }).on(\"\".concat(actionPrefix, \"toggle\"), function () {\n          if (isEnabled()) {\n            toggleMask();\n          }\n        });\n      },\n\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        this.compoundMask.destroy();\n        shortcut.remove(\".\".concat(this.getName()));\n      },\n\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.button.enable();\n      },\n\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.button.disable();\n      },\n\n      /**\n       * Show the button\n       */\n      show: function show() {\n        this.button.show();\n      },\n\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        this.button.hide();\n      }\n    });\n\n    return plugin;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/magnifier/magnifierPanel',['jquery', 'lodash', 'ui/component', 'handlebars', 'ui/dynamicComponent'], function ($$1, _, component, Handlebars, dynamicComponent) { 'use strict';\n\n  $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n  _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n  component = component && Object.prototype.hasOwnProperty.call(component, 'default') ? component['default'] : component;\n  Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n  dynamicComponent = dynamicComponent && Object.prototype.hasOwnProperty.call(dynamicComponent, 'default') ? dynamicComponent['default'] : dynamicComponent;\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n    var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n    buffer += \"<div class=\\\"magnifier\\\">\\n    <div class=\\\"level\\\">\";\n    if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"</div>\\n    <div class=\\\"overlay\\\"></div>\\n    <div class=\\\"inner\\\"></div>\\n    <div class=\\\"controls close\\\">\\n        <a href=\\\"#\\\" class=\\\"control\\\" data-control=\\\"zoomIn\\\" title=\\\"\"\n      + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Magnify more\", options) : helperMissing.call(depth0, \"__\", \"Magnify more\", options)))\n      + \"\\\"><span class=\\\"icon-add\\\"></span></a>\\n        <a href=\\\"#\\\" class=\\\"control\\\"  data-control=\\\"zoomOut\\\" title=\\\"\"\n      + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Magnify less\", options) : helperMissing.call(depth0, \"__\", \"Magnify less\", options)))\n      + \"\\\"><span class=\\\"icon-remove\\\"></span></a>\\n        <a href=\\\"#\\\" class=\\\"closeMagnifier\\\" data-control=\\\"closeMagnifier\\\" title=\\\"\"\n      + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Close Magnifier\", options) : helperMissing.call(depth0, \"__\", \"Close Magnifier\", options)))\n      + \"\\\"><span class=\\\"icon-result-nok\\\"></span></a>\\n    </div>\\n</div>\\n\";\n    return buffer;\n    });\n  function magnifierPanelTpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  /**\n   * The screen pixel ratio\n   * @type {Number}\n   */\n\n  var screenRatio = window.screen.width / window.screen.height;\n  /**\n   * Standard debounce delay for heavy process\n   * @type {Number}\n   */\n\n  var debounceDelay = 50;\n  /**\n   * Standard scrolling throttling for the scrolling\n   * It can be lower than the debounce delay as it is lighter in process and it improves the user experience\n   * @type {Number}\n   */\n\n  var scrollingDelay = 20;\n  /**\n   * The default base size\n   * @type {Number}\n   */\n\n  var defaultBaseSize = 116;\n  /**\n   * The minimum zoom level\n   * @type {Number}\n   */\n\n  var defaultLevelMin = 2;\n  /**\n   * The maximum zoom level\n   * @type {Number}\n   */\n\n  var defaultLevelMax = 8;\n  /**\n   * The default zoom level\n   * @type {Number}\n   */\n\n  var defaultLevel = defaultLevelMin;\n  /**\n   * Some default values\n   * @type {Object}\n   */\n\n  var defaultConfig = {\n    level: defaultLevel,\n    levelMin: defaultLevelMin,\n    levelMax: defaultLevelMax,\n    levelStep: 0.5,\n    baseSize: defaultBaseSize,\n    maxRatio: 0.5\n  };\n  var dynamicComponentDefaultConfig = {\n    draggable: true,\n    resizable: true,\n    preserveAspectRatio: false,\n    width: defaultBaseSize * defaultLevel,\n    height: defaultBaseSize * defaultLevel / screenRatio,\n    minWidth: defaultBaseSize * defaultLevelMin,\n    minHeight: defaultBaseSize * defaultLevelMin / screenRatio,\n    stackingScope: 'test-runner',\n    top: 50,\n    left: 10\n  };\n  /**\n   * Creates a magnifier panel component\n   * @param {Object} config\n   * @param {Number} [config.level] - The default zoom level\n   * @param {Number} [config.levelMin] - The minimum allowed zoom level\n   * @param {Number} [config.levelMax] - The maximum allowed zoom level\n   * @param {Number} [config.levelStep] - The level increment applied when using the controls + and -\n   * @param {Number} [config.baseSize] - The base size used to assign the width and the height according to the zoom level\n   * @param {Number} [config.maxRatio] - The ratio for the maximum size regarding the size of the window\n   * @returns {magnifierPanel} the component (initialized)\n   */\n\n  function magnifierPanelFactory(config) {\n    var initConfig = _.defaults(config || {}, defaultConfig);\n\n    var zoomLevelMin = parseFloat(initConfig.levelMin);\n    var zoomLevelMax = parseFloat(initConfig.levelMax);\n    var zoomLevelStep = parseFloat(initConfig.levelStep);\n    var zoomLevel = adjustZoomLevel(initConfig.level);\n    var maxRatio = parseFloat(initConfig.maxRatio);\n    var $initTarget = null;\n    var controls = null;\n    var observer = null;\n    var targetWidth, targetHeight, dx, dy;\n    var scrolling = [];\n    var dynamicComponentInstance;\n\n    var dynamicComponentConfig = _.defaults(config ? config.component || {} : {}, dynamicComponentDefaultConfig);\n    /**\n     * @typedef {Object} magnifierPanel\n     */\n\n\n    var magnifierPanel = component({\n      /**\n       * Gets the current zoom level\n       * @returns {Number}\n       */\n      getZoomLevel: function getZoomLevel() {\n        return zoomLevel;\n      },\n\n      /**\n       * Gets the targeted content the magnifier will zoom\n       * @returns {jQuery}\n       */\n      getTarget: function getTarget() {\n        return controls && controls.$target;\n      },\n\n      /**\n       * Sets the targeted content the magnifier will zoom\n       * @param {jQuery} $newTarget\n       * @returns {magnifierPanel}\n       * @fires targetchange\n       * @fires update\n       */\n      setTarget: function setTarget($newTarget) {\n        if (controls) {\n          controls.$target = $newTarget;\n          controls.$viewTarget = null;\n          setScrollingListener();\n          /**\n           * @event magnifierPanel#targetchange\n           * @param {jQuery} $target\n           */\n\n          this.trigger('targetchange', controls.$target);\n          this.update();\n        } else {\n          $initTarget = $newTarget;\n        }\n\n        return this;\n      },\n\n      /**\n       * Sets the zoom level of the magnifier\n       * @param {Number} level\n       * @returns {magnifierPanel}\n       * @fires zoom\n       */\n      zoomTo: function zoomTo(level) {\n        if (level && _.isFinite(level)) {\n          zoomLevel = adjustZoomLevel(level);\n        }\n\n        applyZoomLevel();\n        showZoomLevel();\n        updateMaxSize();\n        updateZoom();\n        /**\n         * @event magnifierPanel#zoom\n         * @param {Number} zoomLevel\n         */\n\n        this.trigger('zoom', zoomLevel);\n        return this;\n      },\n\n      /**\n       * Increments the zoom level of the magnifier\n       * @param {Number} step\n       * @returns {magnifierPanel}\n       * @fires zoom\n       */\n      zoomBy: function zoomBy(step) {\n        if (step && _.isFinite(step)) {\n          this.zoomTo(zoomLevel + parseFloat(step));\n        }\n\n        return this;\n      },\n\n      /**\n       * Zoom-in using the configured level step\n       * @returns {magnifierPanel}\n       * @fires zoom\n       */\n      zoomIn: function zoomIn() {\n        return this.zoomBy(zoomLevelStep);\n      },\n\n      /**\n       * Zoom-out using the configured level step\n       * @returns {magnifierPanel}\n       * @fires zoom\n       */\n      zoomOut: function zoomOut() {\n        return this.zoomBy(-zoomLevelStep);\n      },\n\n      /**\n       * Places the magnifier sight at a particular position on the target content\n       * @param {Number} x\n       * @param {Number} y\n       * @returns {magnifierPanel}\n       */\n      zoomAt: function zoomAt(x, y) {\n        var position;\n\n        if (controls) {\n          position = this.translate(x, y);\n          controls.$inner.css({\n            top: -position.top,\n            left: -position.left\n          });\n        }\n      },\n\n      /**\n       * Translates screen coordinates to zoom coordinates\n       * @param {Number} x\n       * @param {Number} y\n       * @returns {Object}\n       */\n      translate: function translate(x, y) {\n        return {\n          top: translateMagnifier(y, targetHeight, dynamicComponentInstance.position.height),\n          left: translateMagnifier(x, targetWidth, dynamicComponentInstance.position.width)\n        };\n      },\n\n      /**\n       * Updates the magnifier with the target content\n       * @returns {magnifierPanel}\n       * @fires update\n       */\n      update: function update() {\n        if (controls && controls.$target) {\n          controls.$clone = controls.$target.clone().removeAttr('id');\n          controls.$clone.find('iframe').remove();\n          controls.$clone.find('[name],[id],[data-serial]').removeAttr('name id data-serial');\n          controls.$inner.empty().append(controls.$clone);\n          controls.$clone.find('audio').prop('muted', true);\n          applySize();\n          applyZoomLevel();\n          updateZoom();\n          updateMaxSize();\n          applyScrolling();\n          /**\n           * @event magnifierPanel#update\n           */\n\n          this.trigger('update');\n        }\n\n        return this;\n      }\n    }, defaultConfig);\n    /**\n     * Will update the magnifier content with the actual content\n     * @type {Function}\n     */\n\n    var updateMagnifier = _.debounce(_.bind(magnifierPanel.update, magnifierPanel), debounceDelay);\n    /**\n     * Will update the magnifier content with the scrolling position\n     * @type {Function}\n     */\n\n\n    var scrollingListenerCallback = _.throttle(function (event) {\n      var $target = $$1(event.target);\n      var scrollingTop = event.target.scrollTop;\n      var scrollLeft = event.target.scrollLeft;\n      var scrollId, scrollData; //check if the element is already known as a scrollable element\n\n      if (controls && controls.$clone && $target.data('magnifier-scroll')) {\n        scrollId = $target.data('magnifier-scroll');\n        scrollData = _.find(scrolling, {\n          id: scrollId\n        });\n        scrollData.scrollTop = scrollingTop;\n        scrollData.scrollLeft = scrollLeft; //if in clone, scroll it\n\n        scrollInClone(scrollData);\n      } else {\n        //if the element is not yet identified as a scrollable element, tag it and register its id\n        scrollId = _.uniqueId('scrolling_');\n        $target.attr('data-magnifier-scroll', scrollId);\n        scrolling.push({\n          id: scrollId,\n          scrollTop: scrollingTop,\n          scrollLeft: scrollLeft\n        }); //update all\n\n        magnifierPanel.update();\n      }\n    }, scrollingDelay);\n    /**\n     * Scroll an element in the clone\n     *\n     * @param {Object} scrollData\n     * @param {String} scrollData.id\n     * @param {Number} [scrollData.scrollTop]\n     * @param {Number} [scrollData.scrollLeft]\n     */\n\n\n    function scrollInClone(scrollData) {\n      var $clonedTarget;\n\n      if (controls && controls.$clone && scrollData && scrollData.id) {\n        $clonedTarget = controls.$clone.find(\"[data-magnifier-scroll=\".concat(scrollData.id, \"]\"));\n\n        if ($clonedTarget.length) {\n          if (_.isNumber(scrollData.scrollTop)) {\n            $clonedTarget[0].scrollTop = scrollData.scrollTop;\n          }\n\n          if (_.isNumber(scrollData.scrollLeft)) {\n            $clonedTarget[0].scrollLeft = scrollData.scrollLeft;\n          }\n        }\n      }\n    }\n    /**\n     * Capture all scroll positions of elements inside current target\n     */\n\n\n    function updateScrollPositions() {\n      if (!controls || !controls.$target) {\n        return;\n      }\n\n      var elements = [controls.$target];\n      var scrollOffsetsChanged = false;\n\n      while (elements.length) {\n        var $currentElement = $$1(elements.shift());\n        var scrollLeft = $currentElement.scrollLeft();\n        var scrollTop = $currentElement.scrollTop();\n        var scrollId = $currentElement.data('magnifier-scroll');\n        elements.push.apply(elements, _toConsumableArray(Array.from($currentElement.children())));\n\n        if (scrollLeft > 0 || scrollTop > 0 || scrollId) {\n          scrollOffsetsChanged = true;\n\n          if (scrollId) {\n            var scrollData = _.find(scrolling, {\n              id: scrollId\n            });\n\n            scrollData.scrollTop = scrollTop;\n            scrollData.scrollLeft = scrollLeft;\n          } else {\n            scrollId = _.uniqueId('scrolling_');\n            $currentElement.attr('data-magnifier-scroll', scrollId);\n            scrolling.push({\n              id: scrollId,\n              scrollTop: scrollTop,\n              scrollLeft: scrollLeft\n            });\n          }\n        }\n      } // If there is any changes to scroll offset inside the target the magnifier should be updated\n\n\n      if (scrollOffsetsChanged) {\n        magnifierPanel.update();\n      }\n    }\n    /**\n     * Initializes the listener for scrolling event and transfer the scrolling\n     */\n\n\n    function setScrollingListener() {\n      updateScrollPositions();\n      window.addEventListener('scroll', scrollingListenerCallback, true);\n    }\n    /**\n     * Stops the listener for scrolling event\n     */\n\n\n    function removeScrollingListener() {\n      window.removeEventListener('scroll', scrollingListenerCallback, true);\n    }\n    /**\n     * Applies scrolling programmatically from the recorded list of elements to be scrolled\n     */\n\n\n    function applyScrolling() {\n      _.forEach(scrolling, scrollInClone);\n    }\n    /**\n     * Adjusts a provided zoom level to fit the constraints\n     * @param {Number|String} level\n     * @returns {Number}\n     */\n\n\n    function adjustZoomLevel(level) {\n      return Math.max(zoomLevelMin, Math.min(parseFloat(level), zoomLevelMax));\n    }\n    /**\n     * Applies the zoom level to the content\n     */\n\n\n    function applyZoomLevel() {\n      if (controls) {\n        controls.$inner.css({\n          transform: \"scale(\".concat(zoomLevel, \")\")\n        });\n      }\n    }\n    /**\n     * Shows the zoom level using a CSS animation\n     */\n\n\n    function showZoomLevel() {\n      var $newZoomLevel;\n\n      if (controls) {\n        $newZoomLevel = controls.$zoomLevel.clone(true).html(zoomLevel);\n        controls.$zoomLevel.before($newZoomLevel).remove();\n        controls.$zoomLevel = $newZoomLevel;\n      }\n    }\n    /**\n     * Updates the max size according to the window's size\n     */\n\n\n    function updateMaxSize() {\n      if (!dynamicComponentInstance) {\n        return;\n      }\n\n      var $window = $$1(window);\n      dynamicComponentInstance.config.maxWidth = $window.width() * maxRatio;\n      dynamicComponentInstance.config.maxHeight = $window.height() * maxRatio;\n    }\n    /**\n     * Forwards the size of the target to the cloned content\n     */\n\n\n    function applySize() {\n      if (controls && controls.$clone) {\n        targetWidth = controls.$target.width();\n        targetHeight = controls.$target.height();\n        controls.$clone.width(targetWidth).height(targetHeight);\n      }\n    }\n    /**\n     * Place the zoom sight at the right place inside the magnifier\n     */\n\n\n    function updateZoom() {\n      var position;\n\n      if (controls && controls.$target) {\n        position = dynamicComponentInstance.position;\n        position.x += dx + controls.$target.scrollLeft();\n        position.y += dy + controls.$target.scrollTop();\n        magnifierPanel.zoomAt(position.x, position.y);\n      }\n    }\n    /**\n     * Creates the observer that will react to DOM changes to update the magnifier\n     */\n\n\n    function createObserver() {\n      observer = new window.MutationObserver(updateMagnifier);\n    }\n    /**\n     * Starts to observe the DOM of the magnifier target\n     */\n\n\n    function startObserver() {\n      if (controls && controls.$target) {\n        observer.observe(controls.$target.get(0), {\n          childList: true,\n          // Set to true if additions and removals of the target node's child elements (including text nodes) are to be observed.\n          attributes: true,\n          // Set to true if mutations to target's attributes are to be observed.\n          characterData: true,\n          // Set to true if mutations to target's data are to be observed.\n          subtree: true // Set to true if mutations to target and target's descendants are to be observed.\n\n        });\n      }\n\n      setScrollingListener();\n    }\n    /**\n     * Stops to observe the DOM of the magnifier target\n     */\n\n\n    function stopObserver() {\n      observer.disconnect();\n      removeScrollingListener();\n    }\n    /**\n     * Translates a screen coordinate into the magnifier\n     * @param {Number} coordinate\n     * @param {Number} actualSize\n     * @param {Number} magnifierSize\n     * @returns {Number}\n     */\n\n\n    function translateMagnifier(coordinate, actualSize, magnifierSize) {\n      var delta = 0;\n      var ratio = zoomLevel;\n\n      if (actualSize) {\n        delta = actualSize * (zoomLevel - 1) / 2;\n        ratio = (actualSize * zoomLevel - magnifierSize) / (actualSize - magnifierSize);\n      }\n\n      return coordinate * ratio - delta;\n    }\n    /**\n     * Gets the top element from a particular absolute point.\n     * @param {Number} x - the page X-coordinate of the point\n     * @param {Number} y - the page Y-coordinate of the point\n     * @returns {HTMLElement}\n     */\n\n\n    function getElementFromPoint(x, y) {\n      var el; // this is done to prevent working with undefined coordinates\n\n      x = x || 0;\n      y = y || 0;\n\n      if (controls) {\n        controls.$overlay.addClass('hidden');\n      }\n\n      el = document.elementFromPoint(x, y);\n\n      if (controls) {\n        controls.$overlay.removeClass('hidden');\n      }\n\n      return el;\n    }\n    /**\n     * Find the related node in the target. The both trees must have the same content.\n     * @param {jQuery|HTMLElement} node - the node for which find a relation\n     * @param {jQuery|HTMLElement} root - the root of the tree that contains the actual node\n     * @param {jQuery|HTMLElement} target - the root of the tree that could contains the related node\n     * @returns {jQuery}\n     */\n\n\n    function findSourceNode(node, root, target) {\n      var $node = $$1(node);\n      var $root = $$1(root);\n      var $target = $$1(target);\n      var indexes = [$node.index()]; // compute map of node's parents indexes\n\n      $node.parents().each(function () {\n        var $this = $$1(this);\n\n        if (!$this.is($root)) {\n          indexes.push($this.index());\n        } else {\n          return false;\n        }\n      }); // the last index is related to the root, so ignore it\n\n      indexes.pop(); // now try to find the same node using the path provided by the indexes map\n\n      if (indexes.length) {\n        $node = $target;\n\n        _.forEachRight(indexes, function (index) {\n          $node = $node.children().eq(index);\n\n          if (!$node.length) {\n            return false;\n          }\n        });\n      } else {\n        // nothing to search for...\n        $node = $$1();\n      }\n\n      return $node;\n    }\n\n    dynamicComponentInstance = dynamicComponent({}).on('rendercontent', function ($content) {\n      // eslint-disable-next-line consistent-this\n      var dynamicComponentContext = this;\n      var $element = this.getElement();\n      $element.addClass('magnifier-container');\n      magnifierPanel.setTemplate(magnifierPanelTpl).on('render', function () {\n        var self = this;\n        var $component = this.getElement();\n        this.setState('hidden', true); // compute the padding of the magnifier content\n\n        dx = ($component.outerWidth() - $component.width()) / 2;\n        dy = ($component.outerHeight() - $component.height()) / 2;\n        controls = {\n          $target: $initTarget,\n          $inner: $$1('.inner', $component),\n          $zoomLevel: $$1('.level', $component),\n          $overlay: $$1('.overlay', $component)\n        };\n        $initTarget = null; // click on zoom-out control\n\n        $component.on('click touchstart', '.control[data-control=\"zoomOut\"]', function (event) {\n          event.preventDefault();\n          self.zoomOut();\n        }); // click on zoom-in control\n\n        $component.on('click touchstart', '.control[data-control=\"zoomIn\"]', function (event) {\n          event.preventDefault();\n          self.zoomIn();\n        }); // click on close controls\n\n        $component.on('click touchstart', '.closeMagnifier', function (event) {\n          event.preventDefault();\n          self.hide();\n          self.trigger('close');\n        }); // interact through the magnifier glass with the zoomed content\n\n        $component.on('click touchstart', '.overlay', function (event) {\n          findSourceNode(getElementFromPoint(event.pageX, event.pageY), controls.$inner, controls.$target).click().focus();\n        });\n        createObserver();\n        updateMaxSize();\n        applyZoomLevel();\n      }).on('show', function () {\n        updateMagnifier();\n        startObserver();\n        dynamicComponentContext.show();\n      }).on('hide', function () {\n        stopObserver();\n        dynamicComponentContext.hide();\n      }).on('destroy', function () {\n        stopObserver();\n        $initTarget = null;\n        controls = null;\n        observer = null;\n        dynamicComponentContext.destroy();\n      }).init(initConfig).render($content);\n    }).on('down move resize', function () {\n      updateZoom();\n    }).on('resize', function () {\n      updateMaxSize();\n    }).init(dynamicComponentConfig);\n    return magnifierPanel;\n  }\n\n  return magnifierPanelFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/magnifier/magnifier',['lodash', 'i18n', 'taoTests/runner/plugin', 'ui/hider', 'util/shortcut', 'util/namespace', 'taoQtiTest/runner/plugins/tools/magnifier/magnifierPanel', 'taoQtiTest/runner/helpers/map'], function (_, __, pluginFactory, hider, shortcut, namespaceHelper, magnifierPanelFactory, mapHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    magnifierPanelFactory = magnifierPanelFactory && Object.prototype.hasOwnProperty.call(magnifierPanelFactory, 'default') ? magnifierPanelFactory['default'] : magnifierPanelFactory;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n\n    var pluginName = 'magnifier';\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n\n    var actionPrefix = \"tool-\".concat(pluginName, \"-\");\n    /**\n     * Some default options for the plugin\n     * @type {Object}\n     */\n\n    var defaultOptions = {\n      zoomMin: 2,\n      // Smallest magnification factor\n      zoomMax: 8,\n      // Biggest magnification factor\n      zoomStep: 0.5 // Increment between min an max\n\n    };\n    /**\n     * Returns the configured plugin\n     */\n\n    var magnifier = pluginFactory({\n      name: pluginName,\n\n      /**\n       * Initializes the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        var testRunnerOptions = testRunner.getOptions();\n        var pluginConfig = Object.assign({}, defaultOptions, this.getConfig());\n        var pluginShortcuts = (testRunnerOptions.shortcuts || {})[pluginName] || {};\n        var magnifierPanel = null;\n        /**\n         * Creates the magnifier panel on demand\n         * @returns {magnifierPanel}\n         * @fires plugin-magnifier-create.magnifier\n         */\n\n        function getMagnifierPanel() {\n          var $container;\n\n          if (!magnifierPanel) {\n            $container = testRunner.getAreaBroker().getContainer();\n            magnifierPanel = magnifierPanelFactory({\n              levelMin: pluginConfig.zoomMin,\n              levelMax: pluginConfig.zoomMax,\n              levelStep: pluginConfig.zoomStep,\n              component: {\n                renderTo: $container.parent(),\n                draggableContainer: $container.parent()\n              }\n            }).on('show', function () {\n              /**\n               * @event plugin-magnifier-show.magnifier\n               */\n              self.trigger('magnifier-show');\n            }).on('hide', function () {\n              /**\n               * @event plugin-magnifier-hide.magnifier\n               */\n              self.trigger('magnifier-hide');\n            }).on('zoom', function (level) {\n              /**\n               * @event plugin-magnifier-zoom.magnifier\n               * @param {Number} zoomLevel\n               */\n              self.trigger('magnifier-zoom', level);\n            }).on('close', function () {\n              hideMagnifier();\n            }).setTarget($container);\n            /**\n             * @event plugin-magnifier-create.magnifier\n             */\n\n            self.trigger('magnifier-create');\n          }\n\n          return magnifierPanel;\n        }\n        /**\n         * Checks if the plugin is currently available\n         * @returns {Boolean}\n         */\n\n\n        function isEnabled() {\n          //to be activated with the special category x-tao-option-magnifier\n          return mapHelper.hasItemCategory(testRunner.getTestMap(), testRunner.getTestContext().itemIdentifier, 'magnifier', true);\n        }\n        /**\n         * Shows/hides the plugin GUI according to context\n         */\n\n\n        function togglePlugin() {\n          if (isEnabled()) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        }\n        /**\n         * Shows/hides the magnifier\n         */\n\n\n        function toggleMagnifier() {\n          if (self.getState('enabled')) {\n            if (self.getState('active')) {\n              hideMagnifier();\n            } else {\n              showMagnifier();\n            }\n          }\n        }\n        /**\n         * Opens the magnifier panel\n         * @fires plugin-magnifier-show.magnifier\n         */\n\n\n        function showMagnifier() {\n          getMagnifierPanel();\n\n          if (magnifierPanel.is('hidden')) {\n            magnifierPanel.show();\n          }\n\n          self.button.turnOn();\n          testRunner.trigger(\"plugin-open.\".concat(pluginName));\n          self.setState('active', true);\n        }\n        /**\n         * Closes the magnifier panel\n         * @fires plugin-magnifier-hide.magnifier\n         */\n\n\n        function hideMagnifier() {\n          self.setState('active', false);\n          self.button.turnOff();\n          testRunner.trigger(\"plugin-close.\".concat(pluginName));\n\n          if (magnifierPanel && !magnifierPanel.is('hidden')) {\n            magnifierPanel.hide();\n          }\n        } // build element\n\n\n        this.button = this.getAreaBroker().getToolbox().createEntry({\n          control: 'magnify',\n          title: __('Displays a customisable magnifier'),\n          text: __('Magnifying Glass'),\n          icon: 'find'\n        }); // attach behavior\n\n        this.button.on('click', function (event) {\n          event.preventDefault();\n          testRunner.trigger(\"\".concat(actionPrefix, \"toggle\"));\n        }); // handle the plugin's shortcuts\n\n        if (testRunnerOptions.allowShortcuts) {\n          _.forEach(pluginShortcuts, function (command, key) {\n            shortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), function () {\n              // just fire the action using the event loop\n              testRunner.trigger(actionPrefix + key);\n            }, {\n              avoidInput: true\n            });\n          });\n        } //start disabled\n\n\n        togglePlugin();\n        this.disable(); //update plugin state based on changes\n\n        testRunner // runner life cycle\n        .on('loaditem', function () {\n          togglePlugin();\n          self.disable();\n        }).on('renderitem', function () {\n          if (magnifierPanel) {\n            magnifierPanel.update().zoomTo(pluginConfig.zoomMin);\n          }\n        }).on('enabletools renderitem', function () {\n          self.enable();\n        }).on('disabletools unloaditem', function () {\n          if (self.getState('active')) {\n            hideMagnifier();\n          }\n\n          self.disable();\n        }).on('destroy', function () {\n          if (magnifierPanel) {\n            magnifierPanel.destroy();\n          }\n\n          magnifierPanel = null;\n        }) // commands that controls the magnifier\n        .on(\"\".concat(actionPrefix, \"toggle\"), function () {\n          if (isEnabled()) {\n            toggleMagnifier();\n          }\n        }).on(\"\".concat(actionPrefix, \"in\"), function () {\n          if (isEnabled() && self.getState('enabled') && self.getState('active')) {\n            getMagnifierPanel().zoomIn();\n          }\n        }).on(\"\".concat(actionPrefix, \"out\"), function () {\n          if (isEnabled() && self.getState('enabled') && self.getState('active')) {\n            getMagnifierPanel().zoomOut();\n          }\n        }).on(\"\".concat(actionPrefix, \"close\"), function () {\n          if (self.getState('active')) {\n            hideMagnifier();\n          }\n        });\n      },\n\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(\".\".concat(pluginName));\n      },\n\n      /**\n       * Enables the button\n       */\n      enable: function enable() {\n        this.button.enable();\n      },\n\n      /**\n       * Disables the button\n       */\n      disable: function disable() {\n        this.button.disable();\n      },\n\n      /**\n       * Shows the button\n       */\n      show: function show() {\n        this.button.show();\n      },\n\n      /**\n       * Hides the button\n       */\n      hide: function hide() {\n        this.button.hide();\n      }\n    });\n\n    return magnifier;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/zoom',['jquery', 'i18n', 'ui/hider', 'ui/transformer', 'util/shortcut', 'util/namespace', 'taoTests/runner/plugin', 'taoQtiTest/runner/helpers/map'], function ($, __, hider, transformer, shortcut, namespaceHelper, pluginFactory, mapHelper) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    transformer = transformer && Object.prototype.hasOwnProperty.call(transformer, 'default') ? transformer['default'] : transformer;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019  (original work) Open Assessment Technologies SA;\n     *\n     * @author dieter <dieter@taotesting.com>\n     * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n     */\n    /**\n     * The standard zoom level, in percentage\n     * @type {Number}\n     */\n\n    var standard = 100;\n    /**\n     * Zoom-In/Zoom-Out steps\n     * @type {Number}\n     */\n\n    var increment = 10;\n    /**\n     * The zoom boundaries, in percentage\n     * @type {Object}\n     */\n\n    var threshold = {\n      lower: 10,\n      upper: 200\n    };\n    /**\n     * Sets the zoom level\n     * @param {jQuery} $target\n     * @param {Number} level - Zoom percentage\n     */\n\n    var _setZoomLevel = function _setZoomLevel($target, level) {\n      var $parent = $target.parent();\n      var newScale = level / standard;\n      var isOverZoom = $parent.outerWidth(true) < $target.width() * newScale;\n\n      if (isOverZoom) {\n        transformer.setTransformOrigin($target, '0 0');\n        $parent.css('margin-left', '0');\n      } else {\n        transformer.setTransformOrigin($target, '50% 0');\n        $parent.css('margin-left', '');\n      }\n\n      transformer.scale($target, newScale);\n    };\n    /**\n     * Restores the standard zoom level\n     * @param {jQuery} $target\n     */\n\n\n    var _resetZoom = function _resetZoom($target) {\n      transformer.reset($target);\n    };\n    /**\n     * Forces a browser repaint\n     * Solution from http://stackoverflow.com/questions/3485365/how-can-i-force-webkit-to-redraw-repaint-to-propagate-style-changes?answertab=votes#tab-top\n     * @param {jQuery} $target\n     */\n\n\n    var forceRepaint = function forceRepaint($target) {\n      var sel = $target[0];\n\n      if (sel) {\n        sel.style.display = 'none';\n        sel.offsetHeight; // no need to store this anywhere, the reference is enough\n\n        sel.style.display = '';\n      }\n    };\n    /**\n     * Returns the configured plugin\n     */\n\n\n    var zoom = pluginFactory({\n      name: 'zoom',\n\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        var testRunnerOptions = testRunner.getOptions();\n        var pluginShortcuts = (testRunnerOptions.shortcuts || {})[this.getName()] || {};\n        /**\n         * Checks if the plugin is currently available\n         * @returns {Boolean}\n         */\n\n        function isConfigured() {\n          //to be activated with the special category x-tao-option-zoom\n          return mapHelper.hasItemCategory(testRunner.getTestMap(), testRunner.getTestContext().itemIdentifier, 'zoom', true);\n        }\n        /**\n         * Is zoom activated ? if not, then we hide the plugin\n         */\n\n\n        function togglePlugin() {\n          if (isConfigured()) {\n            //allow zoom\n            self.show();\n          } else {\n            self.hide();\n          }\n        }\n\n        function zoomAction(dir) {\n          var inc = increment * dir;\n          var el, sx, sy, before, after;\n\n          if (self.$zoomTarget) {\n            el = self.$zoomTarget[0];\n            before = el.getBoundingClientRect();\n            sx = self.$container.scrollLeft();\n            sy = self.$container.scrollTop();\n            self.zoom = Math.max(threshold.lower, Math.min(threshold.upper, self.zoom + inc));\n\n            if (self.zoom === standard) {\n              _resetZoom(self.$zoomTarget);\n            } else {\n              _setZoomLevel(self.$zoomTarget, self.zoom);\n            } // force a browser repaint to fix a scrollbar issue with WebKit\n\n\n            forceRepaint(self.$zoomTarget);\n            after = el.getBoundingClientRect();\n            sx = Math.max(0, sx + (after.width - before.width) / 2);\n            sy = Math.max(0, sy + (after.height - before.height) / 2);\n            self.$container.scrollLeft(sx).scrollTop(sy);\n          }\n        }\n\n        function zoomIn() {\n          if (self.getState('enabled') !== false) {\n            zoomAction(1);\n          }\n        }\n\n        function zoomOut() {\n          if (self.getState('enabled') !== false) {\n            zoomAction(-1);\n          }\n        } //build element (detached)\n\n\n        this.buttonZoomOut = this.getAreaBroker().getToolbox().createEntry({\n          control: 'zoomOut',\n          title: __('Zoom out'),\n          icon: 'remove'\n        });\n        this.buttonZoomIn = this.getAreaBroker().getToolbox().createEntry({\n          control: 'zoomIn',\n          title: __('Zoom in'),\n          icon: 'add'\n        }); //attach behavior\n\n        this.buttonZoomIn.on('click', function (e) {\n          e.preventDefault();\n          testRunner.trigger('tool-zoomin');\n        }); //attach behavior\n\n        this.buttonZoomOut.on('click', function (e) {\n          e.preventDefault();\n          testRunner.trigger('tool-zoomout');\n        });\n\n        if (testRunnerOptions.allowShortcuts) {\n          if (pluginShortcuts.in) {\n            shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.in, this.getName(), true), function () {\n              testRunner.trigger('tool-zoomin');\n            }, {\n              avoidInput: true\n            });\n          }\n\n          if (pluginShortcuts.out) {\n            shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.out, this.getName(), true), function () {\n              testRunner.trigger('tool-zoomout');\n            }, {\n              avoidInput: true\n            });\n          }\n        } //start disabled\n\n\n        togglePlugin();\n        this.disable(); //update plugin state based on changes\n\n        testRunner.on('loaditem', function () {\n          self.zoom = standard;\n          togglePlugin();\n          self.disable();\n        }).on('renderitem', function () {\n          self.$container = $('#qti-content');\n          self.$zoomTarget = $('.qti-item');\n          self.enable();\n        }).on('enabletools', function () {\n          self.enable();\n        }).on('disabletools unloaditem', function () {\n          self.disable();\n        }).on('tool-zoomin', zoomIn).on('tool-zoomout', zoomOut);\n      },\n\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(\".\".concat(this.getName()));\n      },\n\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.buttonZoomIn.enable();\n        this.buttonZoomOut.enable();\n      },\n\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.buttonZoomIn.disable();\n        this.buttonZoomOut.disable();\n      },\n\n      /**\n       * Show the button\n       */\n      show: function show() {\n        this.buttonZoomIn.show();\n        this.buttonZoomOut.show();\n      },\n\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        this.buttonZoomIn.hide();\n        this.buttonZoomOut.hide();\n      }\n    });\n\n    return zoom;\n\n});\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('/*\\nUsage:\\n- linear-gradient((color1, color2, color3)) - returns linear-gradient with evenly distributed colors,\\n   if 3 colors used then the position of each will be 33,33%\\n- linear-gradient((color1 0%, color2 30%, color3 80%)) - returns linear-gradient with manually distributed colors,\\n   first param - color, second - position. Also you can use px or other valid units for set position.\\n*/\\n/* based on \\\"visually-hidden\\\" mixin in LDS for accessibility goals */\\n/* Do not edit */\\n.test-runner-scope .content-wrapper p.key-navigation-group, .test-runner-scope .content-wrapper div.key-navigation-group:not(.select2-container) {\\n    padding: 5px !important;\\n}\\n\\n.test-runner-scope .content-wrapper .key-navigation-group:not(.qti-extendedTextInteraction):not(.qti-textEntryInteraction):not(.qti-customInteraction) {\\n    border-width: 1px !important;\\n    border-style: solid;\\n    border-color: transparent;\\n}\\n\\n.test-runner-scope .content-wrapper .key-navigation-group:not(.qti-extendedTextInteraction):not(.qti-textEntryInteraction):not(.qti-customInteraction).focusin {\\n    border-color: #0e5d91 !important;\\n    outline: none;\\n}\\n\\n.test-runner-scope .content-wrapper .key-navigation-group:not(.qti-extendedTextInteraction):not(.qti-textEntryInteraction):not(.qti-customInteraction).qti-interaction .qti-choice.key-navigation-highlight:not(.tts-content-node) {\\n    background: #e7eff4 !important;\\n}\\n\\n.test-runner-scope .content-wrapper span.key-navigation-group {\\n    border: none !important;\\n}\\n\\n.test-runner-scope .content-wrapper span.key-navigation-group.focusin {\\n    outline: solid #0e5d91 1px !important;\\n    outline-offset: 1px;\\n}\\n\\n.test-runner-scope .test-sidebar .key-navigation-group.focusin {\\n    background: #e7eff4;\\n}\\n\\n.test-runner-scope .test-sidebar .key-navigation-group .qti-navigator-filters .key-navigation-highlight .qti-navigator-tab {\\n    border-width: 2px;\\n}\\n\\n.test-runner-scope .test-sidebar .key-navigation-group .qti-navigator-filters .key-navigation-highlight:focus {\\n    outline: none;\\n}\\n\\n.test-runner-scope .test-sidebar .key-navigation-group .qti-navigator-filters .key-navigation-highlight:focus .qti-navigator-tab {\\n    border-top-color: #222 !important;\\n    border-left-color: #222 !important;\\n    border-right-color: #222 !important;\\n}\\n\\n.test-runner-scope .test-sidebar .key-navigation-group li.qti-navigator-item.key-navigation-highlight {\\n    padding-left: 8px;\\n    border-left: solid 2px #222;\\n}\\n\\n.test-runner-scope .test-sidebar .key-navigation-group li.qti-navigator-item.key-navigation-highlight .key-navigation-highlight:focus {\\n    outline: none;\\n}\\n\\n.test-runner-scope .test-sidebar .qti-navigator-fizzy .key-navigation-group.focusin {\\n    background: #f2f2f2;\\n}\\n\\n.test-runner-scope .bottom-action-bar.content-action-bar.key-navigation-group.focusin {\\n    -ms-box-shadow: 0 0 6px 2px #3e7da7;\\n    -o-box-shadow: 0 0 6px 2px #3e7da7;\\n    box-shadow: 0 0 6px 2px #3e7da7;\\n}\\n\\n.test-runner-scope .bottom-action-bar.content-action-bar.key-navigation-group .key-navigation-highlight:focus {\\n    margin-bottom: 0;\\n    border-bottom-color: #e7eff4 !important;\\n    outline: none;\\n}\\n\\n.test-runner-scope .bottom-action-bar.content-action-bar.key-navigation-group .key-navigation-highlight:focus.active {\\n    border-bottom-color: transparent !important;\\n    background: #e7eff4 !important;\\n}\\n\\n.test-runner-scope .bottom-action-bar.content-action-bar.key-navigation-group .key-navigation-highlight:focus:not(.active):not(:active) .li-inner {\\n    color: #e7eff4;\\n}\\n\\nheader .settings-menu .key-navigation-group {\\n    padding-right: 5px;\\n}\\n\\nheader .settings-menu .key-navigation-group.focusin {\\n    background-color: rgba(14, 93, 145, 0.5);\\n    padding-bottom: 10px;\\n}\\n\\nheader .settings-menu .key-navigation-highlight:focus {\\n    height: 54px;\\n    color: white !important;\\n    border-bottom: solid 2px white !important;\\n}\\n\\n/*# sourceMappingURL=../../../taoQtiTest/views/node_modules/@oat-sa/tao-test-runner-qti/dist/plugins/content/accessibility/css/key-navigation.css.map *//*\\nUsage:\\n- linear-gradient((color1, color2, color3)) - returns linear-gradient with evenly distributed colors,\\n   if 3 colors used then the position of each will be 33,33%\\n- linear-gradient((color1 0%, color2 30%, color3 80%)) - returns linear-gradient with manually distributed colors,\\n   first param - color, second - position. Also you can use px or other valid units for set position.\\n*/\\n/* based on \\\"visually-hidden\\\" mixin in LDS for accessibility goals */\\n/* Do not edit */\\n.countdown {\\n    opacity: 0;\\n    position: relative;\\n    display: inline-block;\\n    overflow: hidden;\\n    text-align: center;\\n    vertical-align: top;\\n    line-height: 1.2;\\n    padding: 0 20px;\\n    margin-top: -1px;\\n    height: 100%;\\n}\\n\\n.countdown.rendered {\\n    opacity: 1;\\n    transition: opacity, 300ms, linear, 0s;\\n}\\n\\n.countdown .label {\\n    max-width: 130px;\\n    display: block;\\n    font-size: 12px;\\n    font-size: 1.2rem;\\n}\\n\\n/*# sourceMappingURL=../../../taoQtiTest/views/node_modules/@oat-sa/tao-test-runner-qti/dist/plugins/controls/timer/component/css/countdown.css.map *//*\\nUsage:\\n- linear-gradient((color1, color2, color3)) - returns linear-gradient with evenly distributed colors,\\n   if 3 colors used then the position of each will be 33,33%\\n- linear-gradient((color1 0%, color2 30%, color3 80%)) - returns linear-gradient with manually distributed colors,\\n   first param - color, second - position. Also you can use px or other valid units for set position.\\n*/\\n/* based on \\\"visually-hidden\\\" mixin in LDS for accessibility goals */\\n/* Do not edit */\\n.timer-box {\\n    opacity: 0;\\n    padding-top: 0;\\n    white-space: nowrap;\\n    /*flex item of control-box */\\n    flex: 1 0 auto;\\n    /* is also a flex container for .qti-timer */\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: nowrap;\\n    justify-content: flex-end;\\n}\\n\\n.timer-box.rendered {\\n    opacity: 1;\\n    transition: opacity, 300ms, linear, 0s;\\n}\\n\\n.timer-box .timer-toggler {\\n    text-decoration: none;\\n    color: white;\\n    line-height: 1.3;\\n    opacity: .68;\\n    padding: 8px 20px;\\n    position: relative;\\n    top: -1px;\\n    left: 20px;\\n    z-index: 2;\\n    transition: opacity, 0.5s, ease-out, 0s;\\n}\\n\\n.timer-box .timer-toggler:hover, .timer-box .timer-toggler:active, .timer-box .timer-toggler:focus {\\n    outline: unset;\\n}\\n\\n.timer-box .timer-toggler:active, .timer-box .timer-toggler:focus {\\n    border: 2px solid white;\\n}\\n\\n.timer-box .timer-toggler:hover {\\n    opacity: .93;\\n    transition: opacity, 0.5s, ease-out, 0s;\\n}\\n\\n.timer-box.zen .timer-toggler {\\n    opacity: .93;\\n    transition: opacity, 0.5s, ease-out, 0s;\\n}\\n\\n.timer-box.zen .countdown .time {\\n    opacity: 0;\\n    transition: opacity, 1s, ease-out, 0s;\\n}\\n\\n.timer-box .countdown::before {\\n    content: \\' \\';\\n    background: rgba(255, 255, 255, 0.3);\\n    width: 1px;\\n    height: 20px;\\n    position: absolute;\\n    left: 0;\\n    top: 5px;\\n}\\n\\n.timer-box .countdown:first-child::before {\\n    content: none;\\n}\\n\\n.timer-box .countdown[data-scope=test][data-type=min] {\\n    order: 5;\\n}\\n\\n.timer-box .countdown[data-scope=test] {\\n    order: 10;\\n}\\n\\n.timer-box .countdown[data-scope=testPart][data-type=min] {\\n    order: 15;\\n}\\n\\n.timer-box .countdown[data-scope=testPart] {\\n    order: 20;\\n}\\n\\n.timer-box .countdown[data-scope=section][data-type=min] {\\n    order: 25;\\n}\\n\\n.timer-box .countdown[data-scope=section] {\\n    order: 30;\\n}\\n\\n.timer-box .countdown[data-scope=item][data-type=min] {\\n    order: 35;\\n}\\n\\n.timer-box .countdown[data-scope=item] {\\n    order: 40;\\n}\\n\\n/*# sourceMappingURL=../../../taoQtiTest/views/node_modules/@oat-sa/tao-test-runner-qti/dist/plugins/controls/timer/component/css/timerbox.css.map */');\n","\ndefine(\"taoQtiTest/loader/testPlugins.bundle\", function(){});\n"]}