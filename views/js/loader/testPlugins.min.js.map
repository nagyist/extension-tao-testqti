{"version":3,"names":["define","_","pluginFactory","ckEditor","isIOSDevice","test","navigator","userAgent","Object","prototype","hasOwnProperty","call","focusOnFirstField","name","init","self","getTestRunner","after","$input","getAreaBroker","getContentArea","find","not","first","$cke","closest","length","delay","instances","attr","replace","focus","exports","__","getJumpElementFactory","broker","container","getContainer","question","navigation","getNavigationArea","toolbox","getToolboxArea","teststatus","getPanelArea","getItemStatus","item","flagged","answered","viewed","isReviewPanelHidden","testRunner","is","defineProperty","value","component","Handlebars","Helpers0","jumplinksTpl","data","options","asString","html","Template","$","jumplinksFactory","config","jumplinksBox","defaults","on","behavior","selector","eventName","eventParam","forEach","linkDescription","$link","getElement","handleLink","trigger","blur","event","activationKeys","includes","keyCode","setTemplate","defer","__initialized","template","depth0","helpers","partials","program1","compilerInfo","merge","buffer","helperMissing","escapeExpression","functionType","stack1","helper","hash","questionStatus","unless","isReviewPanelEnabled","inverse","noop","fn","program","getEmptyStats","questions","total","questionsViewed","map","getJumps","jumps","getParts","parts","getSections","result","part","sections","section","id","getActiveItem","mapWithActive","active","items","getNextSections","sectionId","canList","getJump","position","getPart","partName","getSection","sectionName","getItem","itemIdentifier","jump","identifier","getItemAt","getItemCategories","Array","isArray","categories","hasItemCategory","category","fuzzyMatch","arguments","taoPrefix","exactMatch","startsWith","normalize","elt","toLowerCase","some","itemCategory","getTestStats","stats","getPartStats","getSectionStats","getScopeStats","scope","testStats","currentPartPosition","isLinear","isCurrentPartLinear","values","filter","_ref","partPosition","sort","a","b","linearPartIndex","findIndex","_ref2","inaccessibleParts","slice","countOfInaccessibleUnasweredQestions","reduce","acc","_ref3","countOfInaccessibleFlaggedQestions","_ref4","assign","getScopeMap","scopeMap","cloneDeep","computeItemStats","computeStats","getScopeMapFromContext","context","testPartId","getItemPart","getItemSection","getItemIdentifier","isFinite","each","callback","isFunction","updateItemStats","accStats","informational","collection","patch","currentMap","partialMap","targetMap","isPlainObject","TypeError","partialPart","targetPartId","partialSection","targetSectionId","reindex","offset","offsetPart","offsetSection","lastPartId","lastSectionId","sortBy","index","positionInPart","positionInSection","createJumpTable","mapHelper","runner","reviewEnabled","getTestMap","getTestContext","itemReviewEnabled","getOptions","review","enabled","keyNavigator","navigableDomElement","shortcutsTpl","shortcutsBoxFactory","ESK_KEY_CODE","shortcutsBox","$element","$closeBtn","$keyNavigationItems","e","target","elements","createFromDoms","propagateTab","setCursorAt","isFocused","cursor","navigable","click","destroy","remove","label","shortcuts","program2","shortcut","shortcutsGroups","$$1","shortcutsFactory","namespaceHelper","containerTpl","plugin","getCurrentItem","testRunnerOptions","pluginShortcuts","getName","areaBroker","getJumpElement","shortcutsConfig","appVersion","indexOf","allowShortcuts","goToTop","add","namespaceAll","avoidInput","prevent","goToQuestion","jumplinks","jumpTo","render","getControlArea","update","params","changeReviewPanel","elem","panelJumplink","parent","removeClass","addClass","changeQuesitionStatus","text","currentItem","updatedConfig","announcedText","$announce","append","wasHidden","jumplinksContainer","prepend","groupId","headerNavigation","getConfig","$headerBar","$headerElements","registerHeaderNavigator","group","$elements","defaultPosition","setupItemsNavigator","setupClickableNavigator","keyNavigators","push","flatNavigation","element","getNavigators","toolbarNavigation","$navigationBar","$toolbarElements","reverseBottomToolbar","get","reverse","registerToolbarNavigator","navigableElements","pos","autoFocus","i","topToolbarNavigation","$topToolbar","registerTopToolbarNavigator","initFizzy","$panel","$navigator","managedNavigators","itemsNavigator","$navigatorTree","$enabledItems","navigableItems","getItemFromNavigable","loop","$parent","hasClass","keyNextItem","keyPrevItem","selectors","filters","enabledItems","navigatorNavigation","isFizzyLayout","$testStatusHeader","navigableTestStatus","testStatusNavigation","keepState","keyNextTab","keyPrevTab","itemListingVisited","filtersNavigator","currentFilter","$filters","navigableFilters","keyNextContent","allowedToNavigateFrom","keyPrevContent","last","$trees","navigableTrees","next","previous","pageNavigation","el","rubricsNavigation","scrollHelper","addLabelledByAttribute","removeLabelledByAttribute","removeAttr","manageLabelledByAttribute","itemNavigation","_this","$content","getQtiChoice","addNavigator","addInputsNavigator","scrollTo","$qtiInteractions","node","parents","itemPos","itemElement","$itemElement","$choiceInput","choiceType","navPos","nav","$nav","off","$inputs","flatRadioNavigation","input","checked","wcagBehavior","linearItemNavigation","$qtiChoices","$lastParent","list","setupListNavigator","choicesNavigators","choiceNavigator","stimulusNavigation","isEnabledDecorator","originalIsEnabled","isEnabled","scrollHeight","clientHeight","jumpLinks","$jumpLinksBox","$links","headerNavigationStrategy","toolbarNavigationStrategy","topToolbarNavigationStrategy","navigatorNavigationStrategy","pageNavigationStrategy","rubricsNavigationStrategy","itemNavigationStrategy","linearItemNavigationStrategy","stimulusNavigationStrategy","jumpLinksNavigationStrategy","providerRegistry","strategies","strategyFactory","strategy","getProvider","registerProvider","from","getCursor","ignoredClass","navigateToNextItem","navigateToPrevItem","activateItem","$elt","mousedown","getStrategies","navigationMode","area","flatten","defaultMode","keyNextGroup","keyPrevGroup","linearMode","nativeMode","defaultModeProvider","linearModeProvider","nativeModeProvider","modes","modeFactory","mode","instance","keyNavigationFactory","contentNavigatorType","groupNavigator","navigationConfig","navigators","document","activeElement","eventNS","setMode","newMode","getMode","isActive","keyNavigatorFactory","keyNavigation_css","defaultPluginConfig","pluginConfig","type","headerTpl","getState","state","header","updateTitle","$title","show","updateState","$state","$container","getArea","dialogAlert","dialogConfirm","shortcutRegistry","globalShortcut","pluginName","actionPrefix","defaultOptions","alert","confirm","dialog","closeAccept","hide","closeReject","closeLast","accept","handle","opened","addHandle","namespace","stack","message","reject","doAccept","reason","doReject","disable","dialogShortcut","enable","removeHandle","closeDialogs","alerts","confirms","testOptions","propagate","set","command","key","before","msg","clear","exitMessages","install","leave","dataIsObject","isObject","skipExitMessage","Promise","resolve","disableItem","hider","itemAlertMessage","getContent","dom","modal","itemRunner","$modalsContainer","_item","startClosed","top","navigationHelper","isLeavingSection","testContext","testMap","direction","sectionStats","nbItems","isEmpty","isLeavingTestPart","testPart","testPartStats","isLast","isLastOf","isFirst","isFirstOf","isNumber","getSiblingItems","itemPosition","size","itemId","siblings","itemChain","ref","directions","parseInt","walkDirection","link","times","getNeighbor","getNextItem","getPreviousItem","isMovingToNextItem","action","isMovingToPreviousItem","isJumpingToItem","buttonTpl","className","program3","apply","program5","icon","program6","program8","control","title","aria","buttonData","end","itemInlineMessage","createOkButton","createElement","dataType","$btn","preventDefault","$button","$navigationContainer","$inlineContainer","removeProp","prop","feedback$1","feedback","closeCurrent","currentFeedback","close","setState","err","error","danger","warning","info","typeCaster","itemProperties","connectItemBodyResizeObserver","resizeObserver","ResizeObserver","$itemBody","observe","disconnect","itemScrolling","adaptItemBlockSize","isVerticalWritingMode","getIsItemWritingModeVerticalRl","$itemContainer","$contentArea","contentBlockSize","getItemRunnerBlockSize","getExtraGridRowBlockSize","getSpaceAroundQtiContent","gridRowBlockEndMargin","qtiItemPadding","$item","isScrollable","strToBool","selectedBlockSize","parseFloat","containerParent","containerBlockSize","width","height","overflowCssProp","css","$testRunnerSections","rect","getBoundingClientRect","window","$gridRows","extraBlockSize","$gridRow","outerWidth","outerHeight","$qtiContent","qtiContentRect","testRunnerSectionsRect","loadingBar","loading","start","stop","module","inlineMessage","alertMessage","autoscroll","destroyFeedback","removed","renderedFeedbacks","storedFeedback","found","nextStep","defineMode","inline","inlineMode","messagePlugin","modalFeedback","inlineModalFeedback","createMessages","renderingQueue","bInlineMode","isDestroyed","isBoolean","renderingToken","done","tFeedbacks","overlay","stopImmediatePropagation","stopPropagation","shield","unshield","overlayConfig","full","ns","noLabelCls","noLabelHoverCls","labelHiddenCls","separatorCls","collapseTools","collapseNavigation","collapseInOrder","hover","collapseOrder","$window","collapser","buildCollapsiblesList","allCollapsibles","getCollapsiblesFromConfig","getSortedCollapsiblesFromDom","getUnsortedCollapsiblesFromDom","getExtraWidth","expandedWidth","collapsedWidth","collapseCls","toggleCollapsibles","availableWidth","getAvailableWidth","previousAvailableWidth","expandInOrder","collapsiblesCopy","clone","toCollapse","collapseNeeded","shift","getToolbarWidth","forEachRight","toExpand","expandPossible","extraWidth","$actionsBar","$toolbox","$navigation","getControlsFromDom","$controls","compact","$controlElements","_allCollapsibles","order","ctrl","dataset","substring","search","forOwn","throttle","blankifyLinks","mathify","require","MathJax","Hub","Queue","rubricBlock","rubrics","then","empty","pollingFactory","waitingDialog","connectivityTpl","defaultConfig","checkInterval","indicator","connectivity","proxy","getProxy","isOnline","polling","setInterval","waiting","displayWaitingDialog","pauseResolve","waitContent","proceedContent","endWait","telemetry","catch","interval","autoStart","source","reconnect","isOffline","generalErr","isConnectivityError","loadItem","finish","reasons","comment","itemRef","flags","hasFeedbacks","containsNonPreloadedAssets","hasPci","_len","args","_key","dialogTpl","dialogMessage","dialogConfig","buttons","labels","ok","cancel","pauseContext","subCategory","originalMessage","pauseOnError","returnToHome","reloadPage","processError","location","reload","code","originalCode","loggerFactory","logger","duration","getTestStore","setVolatile","currentUpdatePromise","getItemAttempt","attempt","getPositiveNumber","getPluginStore","durationStore","getItemDuration","attemptId","Error","updateDuration","elapsed","itemAttemptId","setItem","warn","addDurationToCallActionParams","addCallActionParams","itemDuration","getDuration","format","getFixedMap","currentTestPart","fixedTestMap","fixedCurrentItem","reached","completed","updateStats","getCategoriesToMatch","matchSize","getProgressStats","fixedMap","scopedMap","categoriesToMatch","matchedCategories","answerableParts","answerableSections","matchCategories","expectedCategories","minWanted","matched","getRatio","_Mathfloor","Math","floor","getProgressionLabel","patterns","pattern","showTotal","long","short","getPositionProgression","ratio","getRatioProgression","scopes","testSection","indicators","percentage","progress","isMatchedCategories","validCategories","statsComputer","overall","overallCompleted","computeIndicator","indicatorComputer","computeProgress","progressData","progressbar","percentageTpl","percentageIndicatorRenderer","rendererApi","controls","$label","$bar","showLabel","positionTpl","pointTpl","Template$1","positionIndicatorRenderer","count","range","children","progressHelper","percentageRendererFactory","positionRendererFactory","renderers","testRunnerConfig","progressIndicator","rendererFactory","renderer","progressConfig","hiddenByQuestions","hiddenByCategories","isProgressbarHidden","states","testSession","freeze","initial","interacting","suspended","closed","itemSession","solution","notSelected","store","STORE_ID","SEQUENCE_NUMBER","sequenceStore","getSequenceStore","setSequenceNumber","sequenceNumber","getSequenceNumber","getStorageIdentifier","storeId","Date","now","FEATURE_FLAG","preventConcurrency","skipPausedAssessmentDialog","all","featureFlags","lastSequenceNumber","testState","use","qtiFilter","req","res","messages","channel","isLeaving","getTimerMessage","hours","minutes","seconds","unansweredQuestions","timerMessage","timeArr","timeArgArr","unit","idx","answeredMessage","questionsMessage","join","timeEncoder","tooltip","countdown_css","moment","countdownTpl","countdownFactory","$time","$timeScreenreader","countdown","udpate","remainingTime","encodedTime","warningId","warningMessage","encode","time","warnings","findLastKey","shown","threshold","level","warningsForScreenreader","screenreaderWarningId","complete","showBeforeStart","countdownTooltip","isString","displayWarning","create","theme","placement","setTimeout","dispose","warningTimeout","precision","success","timerbox_css","timerboxTpl","timerboxFactory","timerbox","timers","updating","timerIdsToRemove","difference","keys","timerId","removeTimer","timer","addTimer","updateTimer","results","$zenModeToggler","getTimers","$countdownContainer","spread","extraTime","remainingWithoutExtraTime","deindex","omit","toggleZenMode","zenMode","startHidden","ariaHidden","enforcedStayStrategy","getCurrentPart","setUp","tearDown","_Mathmax","max","extraTimeStrategy","applyExtraTime","extraTimeSetup","consumedExtraTime","lastConsumedExtraTime","consumed","guidedNavigationStrategy","guidedNavigation","timeoutStrategy","qtiClassName","timeout","responseCardinalities","single","multiple","ordered","record","interactionMinConstraintProperties","matchInteraction","choiceInteraction","orderInteraction","associateInteraction","hottextInteraction","hotspotInteraction","graphicOrderInteraction","graphicAssociateInteraction","selectPointInteraction","currentItemHelper","getDeclarations","responses","getResponseDeclaration","declaration","attributes","toResponse","baseType","cardinality","mappedCardinality","response","transform","v","split","base","isQtiValueNull","stringyValue","isQuestionAnswered","defaultValue","constraintValue","fullyAnswered","currentCardinality","isUndefined","isEqual","guessInteractionConstraintValues","itemBody","bdy","interactions","constraintValues","interaction","qtiClass","__proto__","constraintProperty","responseIdentifier","isAnswered","partially","getResponses","declarations","isValid","itemState","interactionState","validity","getStimuliHrefs","val","href","getTextStimuliHrefs","stimuli","textStimuli","stimulusHref","domNode","querySelector","childNodes","child","nodeType","TEXT_NODE","getInstantStats","sync","partiallyAnsweredIsAnswered","isItemCurrentlyAnswered","statsHelper","messageHeaderTpl","getExitMessage","submitButtonLabel","itemsCountMessage","messageEnabled","enableUnansweredItemsWarning","getUnansweredItemsWarning","trim","getHeader","getActionMessage","getFlaggedItemsWarning","flaggedCount","toString","unansweredCount","warnSectionLeavingStrategy","leaveTimedSection","isTimeout","itemSessionState","timerConfig","endTestWarning","noExitTimedSectionWarning","movePromise","keepUpToTimeout","exitMessage","cancelMove","getStrategyHandler","actives","applyToStrategies","api","strategyHandler","availableStrategies","defaultAvailableStrategies","availableStrategy","getActives","timeConstraints","constraintsWarnings","qtiScope","getScope","applyMessage","displayRemaining","humanize","warningMessages","constraintsWarningsForScreenreader","warningMessagesForScreenraeder","buildTimer","constraintData","pick","allowLateSubmission","originalTime","minTime","minTimeRemaining","maxTime","maxTimeRemaining","remaining","questionsStats","timeConstraint","newTimer","debug","scopeMapping","assessmentTest","assessmentSection","assessmentItemRef","timersFactory","screenreaderNotificationTpl","screenreaderNotificationTimeout","loadTimers","timeStore","savedConsumedTime","restoreTimerFromClient","saveTimers","loadSavedTimers","handleError","screenreaderNotifcationTimeoutId","contextualWarnings","timerWarning","timerWarningForScreenreader","updatedTimers","timerName","statsScope","$screenreaderWarningContainer","startZen","isZen","debounce","clearTimeout","leading","trailing","titleTpl","attribute","titles","updateTitles","currentPart","isDeepestSectionVisible","sectionTitle","$timer","timestamp","itemTraceVariables","onError","variables","tracesStore","ITEM_START_TIME_CLIENT","ITEM_END_TIME_CLIENT","ITEM_TIMEZONE","utcOffset","callItemAction","traceData","JSON","stringify","allowPartial","allowSkipping","isInteracting","getItemState","enableAllowSkipping","currenItem","toBoolean","nextWarningHelper","shouldWarnBeforeNext","nextItemWarning","itemCanBeTriedAtWill","remainingAttempts","isNextItemInLinearPart","nextPart","isLastOfPart","shouldWarnBeforeEnd","shouldWarnOnTestEnd","shouldWarnBeforeEndPart","shouldWarnOnPartChange","warnBeforeNext","shouldWarnForUnansweredItems","hasUnanswered","hasFlagged","unansweredOnly","nextPartWarning","warnBeforeEnd","warnBeforeEndPart","specificTitle","enableElement","disableElement","updateElement","isAdaptive","isCatAdaptive","nextItem","isLastItem","doNext","nextItemPosition","unansweredWarning","warningScope","enableNav","triggerNextAction","warningHelper","registerShortcut","kbdShortcut","triggerAccessibility","checkboxTpl","dialogConfirmNext","heading","refuse","checkboxParams","dialogOptions","accepted","content","dlg","autoRender","autoDestroy","onOkBtn","$checkbox","submitChecked","submitUnchecked","linearNextItemWarning","getNextItemCategories","nextSectionWarning","getCustomNextMessage","itemPartiallyAnswered","customNextMessage","doNextWarning","testStore","getStore","checkboxValue","enableLinearNextItemWarningCheckbox","forceEnableLinearNextItemWarning","nextSection","getNextSectionCategories","toggle","isWarnSectionLeavingEabled","bind","doPrevious","previousItemWarning","triggerAction","canDoPrevious","currentSection","getCurrentSection","previousSection","previousPart","previousSectionHasTimeConstraint","canMoveBackward","navigatorTpl","navigatorTreeTpl","navigatorFactory","flagItem","_cssCls","setItemFlag","navigatorApi","_defaults","autoScroll","$component","$filterBar","_selectors","filterBar","$tree","tree","$infoAnswered","infoAnswered","$infoViewed","infoViewed","$infoAll","tabInfoAll","$infoUnanswered","showLegend","infoUnanswered","tabInfoUnanswered","$infoFlagged","infoFlagged","tabInfoFlagged","$linearState","linearState","updateConfig","collapseHandle","toggleClass","collapsed","openSelected","infoPanelLabels","togglePanel","infoPanel","partLabels","openOnly","sectionLabels","itemLabels","$target","disabled","canFlag","icons","unseen","select","linearStart","program7","program9","program11","program13","hidden","program4","programWithDepth","program10","depth1","cls","program15","canCollapse","preventsUnseen","collapsible","_iconCls","itemIcons","activeItem","counters","collapsiblePanels","notFlagged","notAnswered","notInformational","_filterMap","unanswered","filtered","flag","getProgressionTotal","progression","jquery","writeCount","criteria","$items","filterCb","$section","$itemsFound","$filtered","scopeClass","getScopedMap","totalQuestions","isSkipaheadEnabled","counter","itm","numberTest","$place","display","min","open","selected","hierarchy","parentsUntil","previousPosition","$previous","root","panel","collapseSelector","componentFactory","itemButtonListFactory","onItemClick","disableUnseenItems","renderItemButtonListComponents","fizzyItemButtonMap","activeItemId","itemButtonListComponents","c","itemButtonListContainer","itemButtonListContainerElem","itemButtonListComponent","scrollContainer","setActiveItem","getFizzyItemButtonMap","displaySectionTitles","displayItemTooltip","nonInformationalCount","fizzyMap","dataSection","fizzySection","dataItem","fizzyItem","numericLabel","ariaLabel","status","updatedMap","updatedItem","updatedScopeMap","updatedFizzyMap","updatedItemData","updateItem","previousItem","$closeButton","closeButton","defaultNavigatorFactory","fizzyNavigatorFactory","isItemFlagged","updateButton","button","turnOff","turnOn","markReviewCategory","setFlag","unsetFlag","setFlagBookmarked","unsetFlagBookmarked","showReview","hideReview","showTestOverview","hideTestOverview","getFlagItemButtonData","getToggleButtonData","getReviewCategories","currentContext","reviewScreen","markReview","isPluginAllowed","navigatorConfig","callTestAction","flagItemButton","flagCurrentItem","flagStatus","forcedState","isHidden","explicitlyHidden","toggleButton","defaultOpen","reviewLayout","previousItemPosition","getToolbox","createEntry","$panelContainer","skip","doSkip","validateResponses","validateOnPreviousMove","enableValidateResponses","warnMessage","warnListener","returnValue","warnBeforeLeaving","addEventListener","removeEventListener","disableRightClick","rightClickEvents","removeEliminationsOnClose","restoreEliminationsOnOpen","eliminator","isPluginEnabled","togglePluginButton","togglePlugin","$choiceInteractions","isEliminable","enableEliminator","disableEliminator","$choices","wasEliminated","classList","setAttribute","contains","removeAttribute","conditionalInit","statifier","maskTpl","answerMaskingFactory","createMask","maskApi","mask","allMasks","reveal","answerMasking","$choice","getMasksState","setMasksState","masked","itemStates","restoreStateOnToggle","restoreStateOnMove","answerMaskingCategory","itemContainsChoiceInteraction","disableMasking","enableMasking","interact","makeStackable","makePlaceable","nouislider","ttsTemplate","maskingComponentFactory","audio","Audio","currentPlayback","mediaContentData","playbackRate","selection","getSelection","spec","clearAPIPElements","elementClass","$contentNodes","handleContentNodeClick","setTTSStateOnContainer","$currentTarget","currentTarget","selectedItemIndex","initNextItem","togglePlayback","initDefaultModeItem","initItemWithTextSelection","initDefaultModePlayback","currentSelection","getRangeAt","commonAncestorContainer","selectedItem","activeElementClass","url","load","play","setMediaContentData","setPlaybackRate","pause","currentTime","isPlaying","toggleSFHMode","isSFHMode","toggleSettings","isSettings","handleResize","offsetFromRight","x","y","getPosition","maxXPosition","innerWidth","moveTo","ttsComponent","stackingOptions","left","maxPlaybackRate","minPlaybackRate","defaultPlaybackRate","$closeElement","$dragElement","$playbackElement","$sfhModeElement","$sliderElement","$settingsElement","interactElement","draggable","manualStart","restrict","restriction","elementRect","right","bottom","onmove","_Mathround","round","xOffset","dx","yOffset","dy","moveBy","noUiSlider","animate","connected","step","stackingScope","getTTSItemData","apipElement","contentLinkInfo","\"@attributes\"","relatedElementInfo","spoken","audioFileInfo","fileHref","audioFile","mimeType","elementId","qtiLinkIdentifierRef","getTTSItemOrder","elementOrder","apipElementOrder","identifierRef","Number","POSITIVE_INFINITY","ttsApipDataProvider","apipData","accessibilityInfo","accessElement","inclusionOrder","textGraphicsDefaultOrder","ttsComponentFactory","ttsApipData","createNavigationGroup","$navigationGroupElement","groupNavigationId","$navigationElements","navigationGroup","$currentElement","getTTSComponent","isConfigured","enablePlugin","disablePlugin","toggleTool","eventKey","endsWith","getData","apipAccessibility","apipItemData","assetManager","dynamicComponent","areaMaskingTpl","dynamicComponentInstance","preview","previewDelay","resizable","preserveAspectRatio","minWidth","maxWidth","minHeight","maskComponent","foo","areaMasking","addMask","masks","without","renderTo","draggableContainer","calculatorFactory","basicCalculatorFactory","scientificCalculatorFactory","calculatorTpl","defaultCalcConfig","proportionalResize","bodmasCalcConfig","scientificCalcConfig","calculator","maths","degree","getCalculatorCategories","bodmas","scientific","buildCalculator","calcTpl","factory","calcConfig","$calculatorContainer","alternativeTemplate","toggleCalculator","allowIn","stackerFactory","commentTpl","allowComment","contextOptions","toggleComment","$form","stacker","bringToFront","appendTo","$cancel","$submit","autoBringToFront","viewerFactory","pdfViewer","panelTpl","showPanel","partial","resizeViewer","hidePanel","hideIfVisible","isVisible","initPanelEvents","stopEvents","hideViewer","$overlay","viewer","setSize","documentViewer","displayViewer","fitToWidth","allowSearch","originalEvent","detail","eventifier","highlighterFactory","getAllRanges","allRanges","rangeCount","discardSelection","removeAllRanges","testHighlighterFactory","isHighlighting","highlightHelper","containerSelector","containersBlackList","clearOnClick","isCollapsed","highlightRanges","MSStream","prevSelection","toggleHighlighting","bool","highlight","restoreIndex","highlightFromIndex","getIndex","getHighlightIndex","clearHighlights","getId","highlighters","highlighterCollection","addHighlighter","hl","getHighlighterById","getAllHighlighters","getItemHighlighter","getNonItemHighlighters","getLength","itemHelper","hasHighlights","buttonMain","pressed","buttonRemove","highlighterStore","saveHighlight","highlightsIndex","saveAll","nonItemHighlighters","every","loadHighlight","textStimulusHref","stimHighlighter","themeHandler","themeLoader","itemThemeSwitcher","themesConfig","available","reloadThemes","themeConfig","selectedTheme","changeTheme","default","themeId","$qtiItem","previousTheme","storage","allMenuEntries","menuEntry","oldNamespace","getActiveNamespace","availableThemes","defaultTheme","activeNamespace","setActiveNamespace","menuButton","createMenu","themeEntry","role","setMenuId","turnOffAll","toggleMenu","setNavigationType","itemThemesStore","itemThemeId","removeItem","makeDraggable","makeResizable","compoundMaskFactory","dimensions","maskConfig","maskAPI","place","placeOverlay","styleResizableEdges","edgesBorders","isResizable","edgeId","addResizeControll","$resizeControll","class","resizeControll","bringAllToFront","innerDrag","closer","invokeOnOverlays","invokeOnMasks","beforeResize","onResize","applyTransformsToOverlays","applyTransformsToInnerDrag","applyTransformsToCloser","createOverlay","overlayAPI","transformOverlay","_sizeBackup","getSize","_posBackup","outerX","outerY","restoreOverlay","appendVisualGuides","borderWidth","borderOffset","visualGuides","$maskBg","$innerWindow","\"border-top-width\"","topHeight","\"border-right-width\"","rightWidth","\"border-bottom-width\"","bottomHeight","\"border-left-width\"","leftWidth","innerHeight","removeVisualGuides","pointerEventsPrefix","PointerEvent","$moveIcon","moveAllPartsTogether","xOffsetRelative","yOffsetRelative","innerX","innerY","invokeOnAll","applyTransforms","createInnerDragHandle","dragRestriction","fixedXY","allParts","nw","constrains","minTopHeight","resizeHandleSize","minBottomHeight","innerDragHeight","$dragIcon","background","applyTransformsToMasks","createCloser","$closeIcon","invokeOn","correctTransforms","setTopHeight","newHeight","newY","fromTop","setRightWidth","newWidth","newX","fromLeft","setBottomHeight","setLeftWidth","createCompoundMask","createPart","edges","addOverlay","maxHeight","setInnerHeight","partConfig","createVisualGuides","compoundMask","defaultDimensions","dragMinWidth","dragMinHeight","setTransforms","dim","getDimensions","lineHeight","ceil","maskOptions","paddingLeft","paddingTop","textPadding","containerWidthHasChanged","newDimensions","toggleMask","transformMask","openMask","closeMask","$maskContainer","_Mathmin","_Mathmax2","magnifierPanelTpl","magnifierPanelFactory","scrollInClone","scrollData","$clonedTarget","$clone","scrollTop","scrollLeft","updateScrollPositions","scrollOffsetsChanged","scrollId","scrolling","uniqueId","magnifierPanel","setScrollingListener","scrollingListenerCallback","removeScrollingListener","applyScrolling","adjustZoomLevel","zoomLevelMin","zoomLevelMax","applyZoomLevel","$inner","zoomLevel","showZoomLevel","$newZoomLevel","$zoomLevel","updateMaxSize","maxRatio","applySize","targetWidth","targetHeight","updateZoom","zoomAt","createObserver","observer","MutationObserver","updateMagnifier","startObserver","childList","characterData","subtree","stopObserver","translateMagnifier","coordinate","actualSize","magnifierSize","delta","getElementFromPoint","elementFromPoint","findSourceNode","$node","$root","indexes","$this","pop","eq","initConfig","levelMin","levelMax","zoomLevelStep","levelStep","$initTarget","dynamicComponentConfig","dynamicComponentDefaultConfig","getZoomLevel","getTarget","setTarget","$newTarget","$viewTarget","zoomTo","zoomBy","zoomIn","zoomOut","translate","scrollingTop","dynamicComponentContext","pageX","pageY","screenRatio","screen","debounceDelay","scrollingDelay","defaultBaseSize","defaultLevelMin","defaultLevelMax","defaultLevel","baseSize","zoomMin","zoomMax","zoomStep","magnifier","getMagnifierPanel","hideMagnifier","toggleMagnifier","showMagnifier","transformer","_Mathmax3","standard","increment","lower","upper","_setZoomLevel","newScale","isOverZoom","setTransformOrigin","scale","_resetZoom","reset","forceRepaint","sel","style","offsetHeight","zoom","testRunnerContainer","zoomAction","dir","inc","$zoomTarget","sx","sy","setProperty","zoomReApply","buttonZoomOut","buttonZoomIn","in","out","d","s","getElementsByTagName","appendChild","styleSheet","cssText","createTextNode"],"sources":["../runner/plugins/content/accessibility/focusOnFirstField.js","../runner/plugins/content/accessibility/jumplinks/helpers.js","../runner/plugins/content/accessibility/jumplinks/jumplinks.js","../runner/helpers/map.js","../runner/helpers/isReviewPanelEnabled.js","../runner/plugins/content/accessibility/jumplinks/shortcuts.js","../runner/plugins/content/accessibility/jumplinks/plugin.js","../runner/plugins/content/accessibility/keyNavigation/strategies/headerNavigation.js","../runner/plugins/content/accessibility/keyNavigation/strategies/toolbarNavigation.js","../runner/plugins/content/accessibility/keyNavigation/strategies/topToolbarNavigation.js","../runner/plugins/content/accessibility/keyNavigation/strategies/navigatorNavigation.js","../runner/plugins/content/accessibility/keyNavigation/strategies/pageNavigation.js","../runner/plugins/content/accessibility/keyNavigation/strategies/rubricsNavigation.js","../runner/plugins/content/accessibility/keyNavigation/strategies/itemNavigation.js","../runner/plugins/content/accessibility/keyNavigation/strategies/linearItemNavigation.js","../runner/plugins/content/accessibility/keyNavigation/strategies/stimulusNavigation.js","../runner/plugins/content/accessibility/keyNavigation/strategies/jumpLinks.js","../runner/plugins/content/accessibility/keyNavigation/strategies/index.js","../runner/plugins/content/accessibility/keyNavigation/strategiesManager.js","../runner/plugins/content/accessibility/keyNavigation/helpers.js","../runner/plugins/content/accessibility/keyNavigation/modes/defaultMode.js","../runner/plugins/content/accessibility/keyNavigation/modes/linearMode.js","../runner/plugins/content/accessibility/keyNavigation/modes/nativeMode.js","../runner/plugins/content/accessibility/keyNavigation/modes/index.js","../runner/plugins/content/accessibility/keyNavigation/modesManager.js","../runner/plugins/content/accessibility/keyNavigation/keyNavigation.js","css!taoQtiTest/runner/plugins/content/accessibility/css/key-navigation","../runner/plugins/content/accessibility/keyNavigation/plugin.js","../runner/plugins/content/accessibility/mainLandmark/header.js","../runner/plugins/content/dialog/dialog.js","../runner/plugins/content/dialog/exitMessages.js","../runner/plugins/content/dialog/itemAlertMessage.js","../runner/helpers/navigation.js","../runner/plugins/content/dialog/itemInlineMessage.js","../runner/plugins/content/feedback/feedback.js","../runner/plugins/content/itemScrolling/itemScrolling.js","../runner/plugins/content/loading/loading.js","../runner/plugins/content/modalFeedback/modalFeedback.js","../runner/plugins/content/overlay/overlay.js","../runner/plugins/content/responsiveness/collapser.js","../runner/plugins/content/rubricBlock/rubricBlock.js","../runner/plugins/controls/connectivity/connectivity.js","../runner/plugins/controls/connectivity/pauseOnError.js","../runner/plugins/controls/duration/duration.js","../runner/plugins/controls/progressbar/progress.js","../runner/plugins/controls/progressbar/renderer/percentage.js","../runner/plugins/controls/progressbar/renderer/position.js","../runner/plugins/controls/progressbar/progressbar.js","../runner/config/states.js","../runner/services/sequenceStore.js","../runner/plugins/controls/session/preventConcurrency.js","../runner/plugins/controls/testState/testState.js","../runner/helpers/getTimerMessage.js","../runner/plugins/controls/timer/component/css/countdown!css","../runner/plugins/controls/timer/component/countdown.js","../runner/plugins/controls/timer/component/css/timerbox!css","../runner/plugins/controls/timer/component/timerbox.js","../runner/plugins/controls/timer/strategy/enforcedStay.js","../runner/plugins/controls/timer/strategy/extraTime.js","../runner/plugins/controls/timer/strategy/guidedNavigation.js","../runner/plugins/controls/timer/strategy/timeout.js","../runner/helpers/currentItem.js","../runner/helpers/stats.js","../runner/helpers/messages.js","../runner/plugins/controls/timer/strategy/warnSectionLeaving.js","../runner/plugins/controls/timer/strategy/strategyHandler.js","../runner/plugins/controls/timer/timers.js","../runner/plugins/controls/timer/plugin.js","../runner/plugins/controls/title/title.js","../runner/plugins/controls/trace/itemTraceVariables.js","../runner/plugins/navigation/allowSkipping.js","../runner/plugins/navigation/next/nextWarningHelper.js","../runner/plugins/navigation/next.js","../runner/plugins/navigation/next/dialogConfirmNext.js","../runner/plugins/navigation/next/linearNextItemWarning.js","../runner/plugins/navigation/nextSection.js","../runner/plugins/navigation/previous.js","../runner/plugins/navigation/review/navigator.js","../runner/plugins/navigation/review/navigatorFizzy.js","../runner/plugins/navigation/review/review.js","../runner/plugins/navigation/skip.js","../runner/plugins/navigation/validateResponses.js","../runner/plugins/navigation/warnBeforeLeaving.js","../runner/plugins/security/disableRightClick.js","../runner/plugins/tools/answerElimination/eliminator.js","../runner/plugins/tools/answerMasking/answerMasking.js","../runner/plugins/tools/answerMasking/plugin.js","../runner/plugins/tools/apipTextToSpeech/textToSpeech.js","../runner/plugins/tools/apipTextToSpeech/ttsApipDataProvider.js","../runner/plugins/tools/apipTextToSpeech/plugin.js","../runner/plugins/tools/areaMasking/mask.js","../runner/plugins/tools/areaMasking/areaMasking.js","../runner/plugins/tools/calculator.js","../runner/plugins/tools/comment/comment.js","../runner/plugins/tools/documentViewer/documentViewer.js","../runner/plugins/tools/highlighter/highlighter.js","../runner/plugins/tools/highlighter/collection.js","../runner/plugins/tools/highlighter/plugin.js","../runner/plugins/tools/itemThemeSwitcher/itemThemeSwitcher.js","../runner/plugins/tools/lineReader/compoundMask.js","../runner/plugins/tools/lineReader/plugin.js","../runner/plugins/tools/magnifier/magnifierPanel.js","../runner/plugins/tools/magnifier/magnifier.js","../runner/plugins/tools/zoom.js","onLayerEnd0.js","module-create.js"],"sourcesContent":["define('taoQtiTest/runner/plugins/content/accessibility/focusOnFirstField',['lodash', 'taoTests/runner/plugin', 'ckeditor'], function (_, pluginFactory, ckEditor) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    ckEditor = ckEditor && Object.prototype.hasOwnProperty.call(ckEditor, 'default') ? ckEditor['default'] : ckEditor;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018 (original work) Open Assessment Technologies SA;\n     */\n\n    /**\n     * Check if client uses the iOS device.\n     *\n     * @returns {*|boolean}\n     */\n    function isIOSDevice() {\n      return /(iPhone|iPad)/i.test(navigator.userAgent);\n    }\n\n    /**\n     * Returns the configured plugin\n     */\n    var focusOnFirstField = pluginFactory({\n      name: 'focusOnFirstField',\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n\n        /**\n         * When an Item is loaded - if we set the focus on any input then the ipad sets the focus on the\n         * keyboard, so the windows lose focus\n         * and we get an error message for the test in fullscreen mode\n         */\n        if (!isIOSDevice()) {\n          this.getTestRunner().after('renderitem', function () {\n            var $input = self.getAreaBroker().getContentArea().find('.qti-itemBody').find('input, textarea, select').not(':input[type=button], :input[type=submit], :input[type=reset]').first();\n            var $cke = $input.closest('.qti-interaction').find('.cke');\n            if ($cke.length) {\n              _.delay(function () {\n                ckEditor.instances[$cke.attr('id').replace(/^cke_/, '')].focus();\n              }, 100);\n            } else {\n              $input.focus();\n            }\n          });\n        }\n      }\n    });\n\n    return focusOnFirstField;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/jumplinks/helpers',['exports', 'i18n'], function (exports, __) { 'use strict';\n\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Returns factory-like object.\n     *\n     * @param {AreaBroker} broker\n     *\n     * @returns {Object} - when you access properties it returns the corresponding element and move the focus on it.\n     *  List of availiable properties\n     *      - question\n     *      - navigation\n     *      - toolbox\n     *      - teststatus\n     */\n    const getJumpElementFactory = broker => ({\n      get container() {\n        return broker.getContainer();\n      },\n      get question() {\n        return broker.getContainer().find('.content-wrapper').first();\n      },\n      get navigation() {\n        return broker.getNavigationArea().find(':not(.hidden)[tabindex]').first();\n      },\n      get toolbox() {\n        return broker.getToolboxArea().find(':not(.hidden)[tabindex]').first();\n      },\n      get teststatus() {\n        return broker.getPanelArea().find(':not(.hidden)[tabindex]').first();\n      }\n    });\n\n    /**\n     * Returns testrunner item status.\n     *\n     * @param {Object} item - testrunner item\n     *\n     * @returns {String} - localized string.\n     */\n    const getItemStatus = item => {\n      if (item.flagged) {\n        return __('Flagged for review');\n      }\n      if (item.answered) {\n        return __('Answered');\n      }\n      if (item.viewed) {\n        return __('Not answered');\n      }\n      return __('Not seen');\n    };\n\n    /**\n     * Detects if review panel hidden or not.\n     *\n     * @param {TestRunner} testRunner\n     *\n     * @returns {Boolean}\n     */\n    const isReviewPanelHidden = testRunner => testRunner.getAreaBroker().getPanelArea().find('.qti-navigator').is('.hidden');\n\n    exports.getItemStatus = getItemStatus;\n    exports.getJumpElementFactory = getJumpElementFactory;\n    exports.isReviewPanelHidden = isReviewPanelHidden;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/jumplinks/jumplinks',['lodash', 'ui/component', 'handlebars', 'lib/handlebars/helpers'], function (_, component, Handlebars, Helpers0) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    component = component && Object.prototype.hasOwnProperty.call(component, 'default') ? component['default'] : component;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\n    function program1(depth0,data) {\n      \n      \n      return \"hidden\";\n      }\n\n      buffer += \"<nav class=\\\"jump-links-box\\\" aria-label=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Jump Menu\", options) : helperMissing.call(depth0, \"__\", \"Jump Menu\", options)))\n        + \"\\\">\\n    <ul>\\n        <li class=\\\"jump-link-item\\\">\\n            <button data-jump=\\\"question\\\" class=\\\"jump-link\\\" >\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Jump to:\", options) : helperMissing.call(depth0, \"__\", \"Jump to:\", options)))\n        + \" <b>\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Question\", options) : helperMissing.call(depth0, \"__\", \"Question\", options)))\n        + \" - \";\n      if (helper = helpers.questionStatus) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.questionStatus); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</b></button>\\n        </li>\\n        <li class=\\\"jump-link-item\\\">\\n            <button data-jump=\\\"navigation\\\" class=\\\"jump-link\\\" >\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Jump to:\", options) : helperMissing.call(depth0, \"__\", \"Jump to:\", options)))\n        + \" <b>\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Navigation\", options) : helperMissing.call(depth0, \"__\", \"Navigation\", options)))\n        + \"</b></button>\\n        </li>\\n        <li class=\\\"jump-link-item\\\">\\n            <button data-jump=\\\"toolbox\\\" class=\\\"jump-link\\\" >\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Jump to:\", options) : helperMissing.call(depth0, \"__\", \"Jump to:\", options)))\n        + \" <b>\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Toolbox\", options) : helperMissing.call(depth0, \"__\", \"Toolbox\", options)))\n        + \"</b></button>\\n        </li>\\n        <li class=\\\"jump-link-item \";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.isReviewPanelEnabled), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" >\\n            <button data-jump=\\\"teststatus\\\" class=\\\"jump-link\\\" >\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Jump to:\", options) : helperMissing.call(depth0, \"__\", \"Jump to:\", options)))\n        + \" <b>\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Test Status and Structure\", options) : helperMissing.call(depth0, \"__\", \"Test Status and Structure\", options)))\n        + \"</b></button>\\n        </li>\\n        <li class=\\\"jump-link-item\\\">\\n            <button data-jump=\\\"shortcuts\\\" class=\\\"jump-link\\\" >\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Jump to:\", options) : helperMissing.call(depth0, \"__\", \"Jump to:\", options)))\n        + \" <b>\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Open Keyboard Shortcuts\", options) : helperMissing.call(depth0, \"__\", \"Open Keyboard Shortcuts\", options)))\n        + \"</b></button>\\n        </li>\\n    </ul>\\n</nav>\\n\";\n      return buffer;\n      });\n    function jumplinksTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Default config values, see below.\n     */\n    const defaults = {};\n\n    /**\n     * Creates and initialize the jumplinks component.\n     * Please not the component IS NOT rendered.\n     * You'll have to render it by yourself.\n     *\n     * @returns {jumplinks} the component, initialized and rendered\n     */\n    function jumplinksFactory(config) {\n      /**\n       * @typedef {Object} jumplinksBox\n       */\n      const jumplinksBox = component({}, defaults).on('render', function () {\n        // handle related Jump Links\n        const behavior = [{\n          selector: '[data-jump=question] ',\n          eventName: 'jump',\n          eventParam: 'question'\n        }, {\n          selector: '[data-jump=navigation]',\n          eventName: 'jump',\n          eventParam: 'navigation'\n        }, {\n          selector: '[data-jump=toolbox]',\n          eventName: 'jump',\n          eventParam: 'toolbox'\n        }, {\n          selector: '[data-jump=teststatus]',\n          eventName: 'jump',\n          eventParam: 'teststatus'\n        }, {\n          selector: '[data-jump=shortcuts]',\n          eventName: 'shortcuts',\n          eventParam: 'shortcuts'\n        }];\n        _.forEach(behavior, linkDescription => {\n          const $link = this.getElement().find(linkDescription.selector);\n          const handleLink = () => {\n            this.trigger(linkDescription.eventName, linkDescription.eventParam);\n            this.getElement().find(':focus').blur();\n          };\n          if ($link) {\n            $link.on('click', handleLink);\n            $link.on('keyup', event => {\n              const activationKeys = [32, 13]; // link can be activated by click or enter/space keys\n              if (activationKeys.includes(event.keyCode)) {\n                handleLink();\n              }\n            });\n          }\n        });\n      });\n      jumplinksBox.setTemplate(jumplinksTpl);\n      _.defer(() => {\n        jumplinksBox.init(config);\n      });\n      return jumplinksBox;\n    }\n\n    return jumplinksFactory;\n\n});\n\n","define('taoQtiTest/runner/helpers/map',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * @typedef {Object} itemStats\n     * @property {Number} questions - the number of questions items\n     * @property {Number} answered - the number of answered questions\n     * @property {Number} flagged - the number of items flagged for review\n     * @property {Number} viewed - the number of viewed items\n     * @property {Number} total - the total number of items\n     * @property {Number} questionsViewed - the number of viewed questions\n     */\n\n    /**\n     * Gets an empty stats record\n     * @returns {itemStats}\n     */\n    function getEmptyStats() {\n      return {\n        questions: 0,\n        answered: 0,\n        flagged: 0,\n        viewed: 0,\n        total: 0,\n        questionsViewed: 0\n      };\n    }\n\n    /**\n     * Defines a helper that provides extractors for an assessment test map\n     */\n    var map = {\n      /**\n       * Gets the jumps table\n       * @param {Object} map - The assessment test map\n       * @returns {Object}\n       */\n      getJumps: function getJumps(map) {\n        return map && map.jumps;\n      },\n      /**\n       * Gets the parts table\n       * @param {Object} map - The assessment test map\n       * @returns {Object}\n       */\n      getParts: function getParts(map) {\n        return map && map.parts;\n      },\n      /**\n       * Get sections table\n       * @param {Object} map - The assessment test map\n       * @returns {Object} the sections\n       */\n      getSections: function getSections(map) {\n        var parts = this.getParts(map),\n          result = {};\n        _.forEach(parts, function (part) {\n          var sections = part.sections;\n          if (sections) {\n            _.forEach(sections, function (section) {\n              result[section.id] = section;\n            });\n          }\n        });\n        return result;\n      },\n      /**\n       * Get active item from the test map\n       * @param {Object} mapWithActive - The assessment test map which has active part/section/item marked\n       * @returns {Object} the active item\n       */\n      getActiveItem: function getActiveItem(mapWithActive) {\n        var parts = this.getParts(mapWithActive),\n          result = {};\n        _.forEach(parts, function (part) {\n          var sections = part.sections;\n          if (sections) {\n            _.forEach(sections, function (section) {\n              if (section.active) {\n                const items = section.items;\n                _.forEach(items, function (item) {\n                  if (item.active) {\n                    result = item;\n                  }\n                });\n              }\n            });\n          }\n        });\n        return result;\n      },\n      /**\n       * Return the list of remaining sections.\n       * @param {Object} map - The assessment test map\n       * @param {String} sectionId - The next sections will be gathered once this sectionId has been reached\n       * @returns {Object} the next sections\n       */\n      getNextSections: function getNextSections(map, sectionId) {\n        var sections = this.getSections(map),\n          result = {},\n          canList = false;\n        _.forEach(sections, function (section) {\n          if (canList) {\n            result[section.id] = section;\n          }\n          if (section.id === sectionId) {\n            canList = true;\n          }\n        });\n        return result;\n      },\n      /**\n       * Gets the jump at a particular position\n       * @param {Object} map - The assessment test map\n       * @param {Number} position - The position of the item\n       * @returns {Object}\n       */\n      getJump: function getJump(map, position) {\n        var jumps = this.getJumps(map);\n        return jumps && jumps[position];\n      },\n      /**\n       * Gets a test part by its identifier\n       * @param {Object} map - The assessment test map\n       * @param {String} partName - The identifier of the test part\n       * @returns {Object}\n       */\n      getPart: function getPart(map, partName) {\n        var parts = this.getParts(map);\n        return parts && parts[partName];\n      },\n      /**\n       * Gets a test section by its identifier\n       * @param {Object} map - The assessment test map\n       * @param {String} sectionName - The identifier of the test section\n       * @returns {Object}\n       */\n      getSection: function getSection(map, sectionName) {\n        var parts = this.getParts(map);\n        var section = null;\n        _.forEach(parts, function (part) {\n          var sections = part.sections;\n          if (sections && sections[sectionName]) {\n            section = sections[sectionName];\n            return false;\n          }\n        });\n        return section;\n      },\n      /**\n       * Gets a test item by its identifier\n       * @param {Object} map - The assessment test map\n       * @param {String} itemIdentifier - The identifier of the test item\n       * @returns {Object}\n       */\n      getItem(map, itemIdentifier) {\n        const jump = _.find(this.getJumps(map), {\n          identifier: itemIdentifier\n        });\n        return this.getItemAt(map, jump && jump.position);\n      },\n      /**\n       * Gets a test item by its identifier\n       * @param {Object} map - The assessment test map\n       * @param {String} itemIdentifier - The identifier of the test item\n       * @returns {String[]} the raw list of categories\n       */\n      getItemCategories(map, itemIdentifier) {\n        const item = this.getItem(map, itemIdentifier);\n        if (item && Array.isArray(item.categories)) {\n          return item.categories;\n        }\n        return [];\n      },\n      /**\n       * Check if an item has a category\n       * @param {Object} map - The assessment test map\n       * @param {String} itemIdentifier - The identifier of the test item\n       * @param {String} category - the category to check\n       * @param {Boolean} [fuzzyMatch=false] - if true the prefix or the case doesn't matter\n       * @returns {String[]} the raw list of categories\n       */\n      hasItemCategory(map, itemIdentifier, category) {\n        let fuzzyMatch = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        const taoPrefix = 'x-tao-option-';\n        const categories = this.getItemCategories(map, itemIdentifier);\n        if (!category || !category.length) {\n          return false;\n        }\n        const exactMatch = categories.includes(category);\n        if (exactMatch) {\n          return true;\n        }\n        if (fuzzyMatch) {\n          //check by adding the prefix first\n          if (!category.startsWith(taoPrefix) && category.includes(`${taoPrefix}${category}`)) {\n            return true;\n          }\n\n          //compare without the prefix and any case system\n          const normalize = elt => elt.replace(taoPrefix, '').replace(/[-_\\s]/g, '').toLowerCase();\n          return categories.some(itemCategory => normalize(itemCategory) === normalize(category));\n        }\n        return false;\n      },\n      /**\n       * Gets the global stats of the assessment test\n       * @param {Object} map - The assessment test map\n       * @returns {itemStats}\n       */\n      getTestStats: function getTestStats(map) {\n        return map && map.stats;\n      },\n      /**\n       * Gets the stats of the test part containing a particular position\n       * @param {Object} map - The assessment test map\n       * @param {String} partName - The identifier of the test part\n       * @returns {itemStats}\n       */\n      getPartStats: function getPartStats(map, partName) {\n        var part = this.getPart(map, partName);\n        return part && part.stats;\n      },\n      /**\n       * Gets the stats of the test section containing a particular position\n       * @param {Object} map - The assessment test map\n       * @param {String} sectionName - The identifier of the test section\n       * @returns {itemStats}\n       */\n      getSectionStats: function getSectionStats(map, sectionName) {\n        var section = this.getSection(map, sectionName);\n        return section && section.stats;\n      },\n      /**\n       * Gets the stats related to a particular scope\n       * @param {Object} map - The assessment test map\n       * @param {Number} position - The current position\n       * @param {String} [scope] - The name of the scope. Can be: test, part, section (default: test)\n       * @returns {itemStats}\n       */\n      getScopeStats: function getScopeStats(map, position, scope) {\n        var jump = this.getJump(map, position);\n        switch (scope) {\n          case 'section':\n          case 'testSection':\n            return this.getSectionStats(map, jump && jump.section);\n          case 'part':\n          case 'testPart':\n            return this.getPartStats(map, jump && jump.part);\n\n          // During calculation stats for this case,\n          // we are considiring all unanswered inaccessible items as answered\n          case 'testWithoutInaccessibleItems':\n            {\n              const testStats = this.getTestStats(map);\n              const {\n                position: currentPartPosition,\n                isLinear: isCurrentPartLinear\n              } = this.getPart(map, jump && jump.part);\n              const parts = Object.values(this.getParts(map)).filter(_ref => {\n                let {\n                  position: partPosition\n                } = _ref;\n                return partPosition < currentPartPosition;\n              }).sort((a, b) => b - a);\n\n              // Find the neirest part to which test taker can not navigate\n              const linearPartIndex = isCurrentPartLinear ? 0 : parts.findIndex(_ref2 => {\n                let {\n                  isLinear\n                } = _ref2;\n                return isLinear;\n              });\n              if (linearPartIndex === -1) {\n                return testStats;\n              }\n\n              // Calculate all unanswered and flagged questions in inaccessible parts\n              const inaccessibleParts = parts.slice(linearPartIndex);\n              const countOfInaccessibleUnasweredQestions = inaccessibleParts.reduce((acc, _ref3) => {\n                let {\n                  stats: {\n                    questions,\n                    answered\n                  }\n                } = _ref3;\n                return acc + (questions - answered);\n              }, 0);\n              const countOfInaccessibleFlaggedQestions = inaccessibleParts.reduce((acc, _ref4) => {\n                let {\n                  stats: {\n                    flagged\n                  }\n                } = _ref4;\n                return acc + flagged;\n              }, 0);\n              return Object.assign({}, testStats, {\n                answered: testStats.answered + countOfInaccessibleUnasweredQestions,\n                flagged: testStats.flagged - countOfInaccessibleFlaggedQestions\n              });\n            }\n          default:\n          case 'test':\n            return this.getTestStats(map);\n        }\n      },\n      /**\n       * Gets the map of a particular scope from a particular position\n       * @param {Object} map - The assessment test map\n       * @param {Number} position - The current position\n       * @param {String} [scope] - The name of the scope. Can be: test, part, section (default: test)\n       * @returns {object} The scoped map\n       */\n      getScopeMap: function getScopeMap(map, position, scope) {\n        // need a clone of the map as we will change some properties\n        var scopeMap = _.cloneDeep(map || {});\n\n        // gets the current part and section\n        var jump = this.getJump(scopeMap, position);\n        var part = this.getPart(scopeMap, jump && jump.part);\n        var section = this.getSection(scopeMap, jump && jump.section);\n\n        // reduce the map to the scope part\n        if (scope && scope !== 'test') {\n          scopeMap.parts = {};\n          if (part) {\n            scopeMap.parts[jump.part] = part;\n          }\n        }\n\n        // reduce the map to the scope section\n        if (part && (scope === 'section' || scope === 'testSection')) {\n          part.sections = {};\n          if (section) {\n            part.sections[jump.section] = section;\n          }\n        }\n\n        // update the stats to reflect the scope\n        if (section) {\n          section.stats = this.computeItemStats(section.items);\n        }\n        if (part) {\n          part.stats = this.computeStats(part.sections);\n        }\n        scopeMap.stats = this.computeStats(scopeMap.parts);\n        return scopeMap;\n      },\n      /**\n       * Gets the map of a particular scope from a current context\n       * @param {Object} map - The assessment test map\n       * @param {Object} context - The current session context\n       * @param {String} [scope] - The name of the scope. Can be: test, part, section (default: test)\n       * @returns {object} The scoped map\n       */\n      getScopeMapFromContext: function getScopeMapFromContext(map, context, scope) {\n        // need a clone of the map as we will change some properties\n        var scopeMap = _.cloneDeep(map || {});\n        var part;\n        var section;\n\n        // gets the current part and section\n        if (context && context.testPartId) {\n          part = this.getPart(scopeMap, context.testPartId);\n        }\n        if (context && context.sectionId) {\n          section = this.getSection(scopeMap, context.sectionId);\n        }\n\n        // reduce the map to the scope part\n        if (scope && scope !== 'test') {\n          scopeMap.parts = {};\n          if (part) {\n            scopeMap.parts[context.testPartId] = part;\n          }\n        }\n\n        // reduce the map to the scope section\n        if (part && (scope === 'section' || scope === 'testSection')) {\n          part.sections = {};\n          if (section) {\n            part.sections[context.sectionId] = section;\n          }\n        }\n\n        // update the stats to reflect the scope\n        if (section) {\n          section.stats = this.computeItemStats(section.items);\n        }\n        if (part) {\n          part.stats = this.computeStats(part.sections);\n        }\n        scopeMap.stats = this.computeStats(scopeMap.parts);\n        return scopeMap;\n      },\n      /**\n       * Gets the test part containing a particular position\n       * @param {Object} map - The assessment test map\n       * @param {Number} position - The position of the item\n       * @returns {Object}\n       */\n      getItemPart: function getItemPart(map, position) {\n        var jump = this.getJump(map, position);\n        return this.getPart(map, jump && jump.part);\n      },\n      /**\n       * Gets the test section containing a particular position\n       * @param {Object} map - The assessment test map\n       * @param {Number} position - The position of the item\n       * @returns {Object}\n       */\n      getItemSection: function getItemSection(map, position) {\n        var jump = this.getJump(map, position);\n        var part = this.getPart(map, jump && jump.part);\n        var sections = part && part.sections;\n        return sections && sections[jump && jump.section];\n      },\n      /**\n       * Gets the item located at a particular position\n       * @param {Object} map - The assessment test map\n       * @param {Number} position - The position of the item\n       * @returns {Object}\n       */\n      getItemAt: function getItemAt(map, position) {\n        var jump = this.getJump(map, position);\n        var part = this.getPart(map, jump && jump.part);\n        var sections = part && part.sections;\n        var section = sections && sections[jump && jump.section];\n        var items = section && section.items;\n        return items && items[jump && jump.identifier];\n      },\n      /**\n       * Gets the identifier of an existing item\n       * @param {Object} map - The assessment test map\n       * @param {Number|String} position - The position of the item, can already be the identifier\n       * @returns {String}\n       */\n      getItemIdentifier: function getItemIdentifier(map, position) {\n        var item;\n        if (_.isFinite(position)) {\n          item = this.getItemAt(map, position);\n        } else {\n          item = this.getItem(map, position);\n        }\n        return item && item.id;\n      },\n      /**\n       * Applies a callback on each item of the provided map\n       * @param {Object} map - The assessment test map\n       * @param {Function} callback(item, section, part, map) - A callback to apply on each item\n       * @returns {Object}\n       */\n      each: function each(map, callback) {\n        if (_.isFunction(callback)) {\n          _.forEach(map && map.parts, function (part) {\n            _.forEach(part && part.sections, function (section) {\n              _.forEach(section && section.items, function (item) {\n                callback(item, section, part, map);\n              });\n            });\n          });\n        }\n        return map;\n      },\n      /**\n       * Update the map stats from a particular item\n       * @param {Object} map - The assessment test map\n       * @param {Number} position - The position of the item\n       * @returns {Object}\n       */\n      updateItemStats: function updateItemStats(map, position) {\n        var jump = this.getJump(map, position);\n        var part = this.getPart(map, jump && jump.part);\n        var sections = part && part.sections;\n        var section = sections && sections[jump && jump.section];\n        if (section) {\n          section.stats = this.computeItemStats(section.items);\n        }\n        if (part) {\n          part.stats = this.computeStats(part.sections);\n        }\n        if (map) {\n          map.stats = this.computeStats(map.parts);\n        }\n        return map;\n      },\n      /**\n       * Computes the stats for a list of items\n       * @param {Object} items\n       * @returns {itemStats}\n       */\n      computeItemStats: function computeItemStats(items) {\n        return _.reduce(items, function accStats(acc, item) {\n          if (!item.informational) {\n            acc.questions++;\n            if (item.answered) {\n              acc.answered++;\n            }\n            if (item.viewed) {\n              acc.questionsViewed++;\n            }\n          }\n          if (item.flagged) {\n            acc.flagged++;\n          }\n          if (item.viewed) {\n            acc.viewed++;\n          }\n          acc.total++;\n          return acc;\n        }, getEmptyStats());\n      },\n      /**\n       * Computes the global stats of a collection of stats\n       * @param {Object} collection\n       * @returns {itemStats}\n       */\n      computeStats: function computeStats(collection) {\n        return _.reduce(collection, function accStats(acc, item) {\n          acc.questions += item.stats.questions;\n          acc.answered += item.stats.answered;\n          acc.flagged += item.stats.flagged;\n          acc.viewed += item.stats.viewed;\n          acc.total += item.stats.total;\n          acc.questionsViewed += item.stats.questionsViewed;\n          return acc;\n        }, getEmptyStats());\n      },\n      /**\n       * Patch a testMap with a partial testMap.\n       *\n       * If the currentMap is null or the scope is test,\n       * we just use the partialMap as it is.\n       *\n       * Indexes, position and stats will be (re)built.\n       *\n       * @param {Object} currentMap - the map to patch\n       * @param {Object} partialMap - the patch\n       * @param {String} partialMap.scope - indicate the scope of the patch (test, part or section)\n       * @returns {Object} the patched testMap\n       * @throws {TypeError} if the partialMap is no a map\n       */\n      patch: function patch(currentMap, partialMap) {\n        var self = this;\n        var targetMap;\n        if (!_.isPlainObject(partialMap) || !partialMap.parts) {\n          throw new TypeError('Invalid test map format');\n        }\n        if (!currentMap || partialMap.scope === 'test') {\n          targetMap = _.cloneDeep(partialMap);\n        } else {\n          targetMap = _.cloneDeep(currentMap);\n          _.forEach(partialMap.parts, function (partialPart, targetPartId) {\n            if (partialMap.scope === 'part') {\n              //replace the target part\n              targetMap.parts[targetPartId] = _.cloneDeep(partialPart);\n            }\n            if (partialMap.scope === 'section') {\n              _.forEach(partialPart.sections, function (partialSection, targetSectionId) {\n                //replace the target section\n                targetMap.parts[targetPartId].sections[targetSectionId] = _.cloneDeep(partialSection);\n\n                //compte new section stats\n                targetMap.parts[targetPartId].sections[targetSectionId].stats = self.computeItemStats(targetMap.parts[targetPartId].sections[targetSectionId].items);\n              });\n            }\n            //compte new/updated part stats\n            targetMap.parts[targetPartId].stats = self.computeStats(targetMap.parts[targetPartId].sections);\n          });\n          //compte updated test stats\n          targetMap.stats = this.computeStats(targetMap.parts);\n        }\n\n        //the updated map can have a different size than the original\n        targetMap = this.reindex(targetMap);\n        return targetMap;\n      },\n      /**\n       * Rebuild the indexes, positions of all map parts.\n       * Then recreate the jump table.\n       *\n       * @param {Object} map - the map to reindex\n       * @returns {Object} the brand new map\n       * @throws {TypeError} if the map is no a map\n       */\n      reindex: function reindex(map) {\n        var offset = 0;\n        var offsetPart = 0;\n        var offsetSection = 0;\n        var lastPartId;\n        var lastSectionId;\n        if (!_.isPlainObject(map) || !map.parts) {\n          throw new TypeError('Invalid test map format');\n        }\n\n        //remove the jump table\n        map.jumps = [];\n\n        //browse the test map, by position\n        _.sortBy(map && map.parts, 'position').forEach(function (part) {\n          _.sortBy(part && part.sections, 'position').forEach(function (section) {\n            _.sortBy(section && section.items, 'position').forEach(function (item) {\n              if (lastPartId !== part.id) {\n                offsetPart = 0;\n                lastPartId = part.id;\n                part.position = offset;\n              }\n              if (lastSectionId !== section.id) {\n                offsetSection = 0;\n                lastSectionId = section.id;\n                section.position = offset;\n              }\n              item.position = offset;\n              item.index = offsetSection + 1;\n              item.positionInPart = offsetPart;\n              item.positionInSection = offsetSection;\n              map.jumps[offset] = {\n                identifier: item.id,\n                section: section.id,\n                part: part.id,\n                position: offset\n              };\n              offset++;\n              offsetSection++;\n              offsetPart++;\n            });\n          });\n        });\n        return map;\n      },\n      /**\n       * Create the jump table for a test map\n       *\n       * @param {Object} map - the map\n       * @returns {Object} the brand new map with a jump table\n       * @throws {TypeError} if the map is no a map\n       */\n      createJumpTable: function createJumpTable(map) {\n        if (!_.isPlainObject(map) || !map.parts) {\n          throw new TypeError('Invalid test map format');\n        }\n        map.jumps = [];\n        this.each(map, function (item, section, part) {\n          var offset = item.position;\n          map.jumps[offset] = {\n            identifier: item.id,\n            section: section.id,\n            part: part.id,\n            position: offset\n          };\n        });\n        return map;\n      }\n    };\n\n    return map;\n\n});\n\n","define('taoQtiTest/runner/helpers/isReviewPanelEnabled',['taoQtiTest/runner/helpers/map'], function (mapHelper) { 'use strict';\n\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n\n    /**\n     * Tells if the review panel is enabled\n     * @returns {Boolean}\n     */\n    function isReviewPanelEnabled(runner) {\n      const reviewEnabled = mapHelper.hasItemCategory(runner.getTestMap(), runner.getTestContext().itemIdentifier, 'reviewScreen', true);\n      const itemReviewEnabled = runner.getOptions().review.enabled;\n      return reviewEnabled && itemReviewEnabled;\n    }\n\n    return isReviewPanelEnabled;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/jumplinks/shortcuts',['i18n', 'lodash', 'ui/component', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'handlebars', 'lib/handlebars/helpers'], function (__, _, component, keyNavigator, navigableDomElement, Handlebars, Helpers0) { 'use strict';\n\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    component = component && Object.prototype.hasOwnProperty.call(component, 'default') ? component['default'] : component;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n        <div class=\\\"shortcuts-group-wrapper\\\">\\n            <h3 class=\\\"shortcuts-group-title\\\">\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</h3>\\n            <ul class=\\\"shortcuts-group-list\\\">\\n                \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.shortcuts), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n            </ul>\\n        </div>\\n        \";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n                <li class=\\\"shortcut-item\\\">\\n                    <span class=\\\"shortcut-item-shortcut\\\">\\n                        <kbd>\";\n      if (helper = helpers.shortcut) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.shortcut); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</kbd>\\n                    </span>\\n                    <span class=\\\"shortcut-item-action\\\">\\n                        \";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\n                    </span>\\n                </li>\\n                \";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"shortcuts-list-wrapper\\\">\\n    <div class=\\\"shortcuts-list\\\" role=\\\"dialog\\\" aria-modal=\\\"true\\\" aria-labelledby=\\\"jumplinks/shortcuts-heading\\\"\\n        aria-describedby=\\\"jumplinks/shortcuts-description\\\">\\n        <h2 class=\\\"shortcuts-list-title\\\" id=\\\"jumplinks/shortcuts-heading\\\">\\n            \"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Keyboard Navigation\", options) : helperMissing.call(depth0, \"__\", \"Keyboard Navigation\", options)))\n        + \"\\n        </h2>\\n        <div id=\\\"jumplinks/shortcuts-description\\\">\\n            <p class=\\\"shortcuts-list-description\\\">\\n                \"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Keyboard shortcuts for the Accessibility Tools are available to the Test-taker.\", options) : helperMissing.call(depth0, \"__\", \"Keyboard shortcuts for the Accessibility Tools are available to the Test-taker.\", options)))\n        + \"\\n            </p>\\n            <p class=\\\"shortcuts-list-description\\\">\\n                \"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"You can magnify the content by up to 200%. Check your browser settings to find out how to do it.\", options) : helperMissing.call(depth0, \"__\", \"You can magnify the content by up to 200%. Check your browser settings to find out how to do it.\", options)))\n        + \"\\n            </p>\\n        </div>\\n        <button aria-label=\\\"Close dialog\\\" class=\\\"btn-close small\\\" data-control=\\\"close-btn\\\" type=\\\"button\\\">\\n            <span class=\\\"icon-close\\\"></span>\\n        </button>\\n        \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.shortcutsGroups), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function shortcutsTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Default config values, see below.\n     */\n    const defaults = {\n      shortcutsGroups: [{\n        id: 'navigation-shortcuts',\n        label: __('Navigation shortcuts'),\n        shortcuts: [{\n          id: 'next',\n          shortcut: 'ALT + Shift + N',\n          label: __('Go to the next question')\n        }, {\n          id: 'previous',\n          shortcut: 'ALT + Shift + P',\n          label: __('Go to the previous question')\n        }, {\n          id: 'current',\n          shortcut: 'ALT + Shift + Q',\n          label: __('Go to the current question')\n        }, {\n          id: 'top',\n          shortcut: 'ALT + Shift + T',\n          label: __('Go to the top of the page')\n        }]\n      }]\n    };\n\n    /**\n     * Creates and initialize the shortcuts component.\n     * Please not the component IS NOT rendered.\n     * You'll have to render it by yourself.\n     *\n     * @param {Object} config\n     * @returns {shortcutsBox} the component, initialized and rendered\n     */\n    function shortcutsBoxFactory(config) {\n      const ESK_KEY_CODE = 27;\n      const shortcutsBox = component({}, defaults).on('render', function () {\n        const $element = this.getElement();\n        const $closeBtn = $element.find('.btn-close');\n        const $keyNavigationItems = this.getElement().find('.shortcuts-list, .btn-close');\n        $closeBtn.on('click', () => this.trigger('close'));\n        // handle overlay click\n        $element.on('click', e => {\n          if ($element.is(e.target)) {\n            this.trigger('close');\n          }\n        });\n        $element.on('keyup', e => {\n          if (e.keyCode === ESK_KEY_CODE) {\n            this.trigger('close');\n          }\n        });\n        this.navigator = keyNavigator({\n          elements: navigableDomElement.createFromDoms($keyNavigationItems),\n          propagateTab: false\n        })\n        // keep cursor at close button\n        .on('tab', function () {\n          this.setCursorAt(1);\n        }).on('shift+tab', function () {\n          this.setCursorAt(1);\n        })\n        // prevent focus move from shortcuts modal\n        .on('blur', () => {\n          _.defer(() => {\n            if (!this.navigator.isFocused()) {\n              this.navigator.focus();\n            }\n          });\n        }).on('activate', function (cursor) {\n          cursor.navigable.getElement().click();\n        });\n        this.navigator.first();\n      }).on('destroy', function () {\n        this.navigator.destroy();\n        this.getElement().remove();\n      });\n      shortcutsBox.setTemplate(shortcutsTpl);\n      shortcutsBox.init(config);\n      return shortcutsBox;\n    }\n\n    return shortcutsBoxFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/jumplinks/plugin',['i18n', 'jquery', 'taoTests/runner/plugin', 'taoQtiTest/runner/helpers/isReviewPanelEnabled', 'taoQtiTest/runner/plugins/content/accessibility/jumplinks/helpers', 'taoQtiTest/runner/plugins/content/accessibility/jumplinks/jumplinks', 'taoQtiTest/runner/plugins/content/accessibility/jumplinks/shortcuts', 'util/shortcut', 'util/namespace', 'handlebars', 'lib/handlebars/helpers'], function (__, $$1, pluginFactory, isReviewPanelEnabled, helpers, jumplinksFactory, shortcutsFactory, shortcut, namespaceHelper, Handlebars, Helpers0) { 'use strict';\n\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    isReviewPanelEnabled = isReviewPanelEnabled && Object.prototype.hasOwnProperty.call(isReviewPanelEnabled, 'default') ? isReviewPanelEnabled['default'] : isReviewPanelEnabled;\n    jumplinksFactory = jumplinksFactory && Object.prototype.hasOwnProperty.call(jumplinksFactory, 'default') ? jumplinksFactory['default'] : jumplinksFactory;\n    shortcutsFactory = shortcutsFactory && Object.prototype.hasOwnProperty.call(shortcutsFactory, 'default') ? shortcutsFactory['default'] : shortcutsFactory;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n      return \"<div class=\\\"jump-links-container\\\"></div>\\n\";\n      });\n    function containerTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Creates the JumpLinks plugin.\n     * adding jumplinks accessibility feature for quick navigation\n     */\n    var plugin = pluginFactory({\n      name: 'jumplinks',\n      /**\n       * Initializes the plugin (called during runner's init)\n       */\n      init() {\n        const testRunner = this.getTestRunner();\n        const item = testRunner.getCurrentItem();\n        const config = {\n          isReviewPanelEnabled: isReviewPanelEnabled(testRunner),\n          questionStatus: helpers.getItemStatus(item)\n        };\n        const testRunnerOptions = testRunner.getOptions();\n        const pluginShortcuts = (testRunnerOptions.shortcuts || {})[this.getName()] || {};\n        const areaBroker = this.getAreaBroker();\n        const getJumpElement = helpers.getJumpElementFactory(areaBroker);\n        const shortcutsConfig = navigator.appVersion.indexOf(\"Mac\") !== -1 ? {\n          shortcutsGroups: [{\n            id: 'navigation-shortcuts',\n            label: __('Navigation shortcuts'),\n            shortcuts: [{\n              id: 'next',\n              shortcut: 'OPTION + Shift + N',\n              label: __('Go to the next question')\n            }, {\n              id: 'previous',\n              shortcut: 'OPTION + Shift + P',\n              label: __('Go to the previous question')\n            }, {\n              id: 'current',\n              shortcut: 'OPTION + Shift + Q',\n              label: __('Go to the current question')\n            }, {\n              id: 'top',\n              shortcut: 'OPTION + Shift + T',\n              label: __('Go to the top of the page')\n            }]\n          }]\n        } : {};\n        if (testRunnerOptions.allowShortcuts) {\n          pluginShortcuts.goToTop && shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.goToTop, this.getName(), true), function () {\n            $$1('[tabindex]').first().focus();\n          }, {\n            avoidInput: true,\n            prevent: true\n          });\n          pluginShortcuts.goToQuestion && shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.goToQuestion, this.getName(), true), function () {\n            getJumpElement.question.focus();\n          }, {\n            avoidInput: true,\n            prevent: true\n          });\n        }\n        this.jumplinks = jumplinksFactory(config).on('render', () => {\n          this.jumplinks.on('jump', jumpTo => {\n            const $element = getJumpElement[jumpTo];\n            $element.focus();\n          });\n          this.jumplinks.on('shortcuts', () => {\n            if (this.shortcuts) {\n              return;\n            }\n            this.shortcuts = shortcutsFactory(shortcutsConfig);\n            this.shortcuts.render(this.getAreaBroker().getControlArea());\n            this.shortcuts.on('close', () => {\n              this.shortcuts.destroy();\n              this.shortcuts = null;\n            });\n          });\n        }).on('update', function update(params) {\n          this.trigger('changeReviewPanel', params.isReviewPanelEnabled);\n          this.trigger('changeQuesitionStatus', params.questionStatus);\n        }).on('changeReviewPanel', function changeReviewPanel(enabled) {\n          const elem = this.getElement();\n          const panelJumplink = elem.find('[data-jump=\"teststatus\"]').parent();\n          if (enabled) {\n            panelJumplink.removeClass('hidden');\n          } else {\n            panelJumplink.addClass('hidden');\n          }\n        }).on('changeQuesitionStatus', function changeQuesitionStatus(questionStatus) {\n          const elem = this.getElement();\n          const text = `${__('Question')} - ${questionStatus}`;\n          elem.find('[data-jump=\"question\"] > b').text(text);\n        });\n        testRunner.on('renderitem', () => {\n          const currentItem = testRunner.getCurrentItem();\n          const updatedConfig = {\n            isReviewPanelEnabled: !helpers.isReviewPanelHidden(testRunner) && isReviewPanelEnabled(testRunner),\n            questionStatus: helpers.getItemStatus(currentItem)\n          };\n          const announcedText = __('Item %s loaded', currentItem.position);\n          let $announce = $$1('[aria-live=polite][role=alert]').first();\n          if ($announce.length !== 1) {\n            $announce = $$1('<div aria-live=\"polite\" role=\"alert\" class=\"visible-hidden\"></div>');\n            $$1('main').first().append($announce);\n          }\n          $announce.text(announcedText);\n          this.jumplinks.trigger('update', updatedConfig);\n        }).on('tool-flagitem', () => {\n          const currentItem = testRunner.getCurrentItem();\n          const questionStatus = helpers.getItemStatus(Object.assign({}, currentItem, {\n            flagged: !currentItem.flagged\n          }));\n          this.jumplinks.trigger('changeQuesitionStatus', questionStatus);\n        }).on('tool-reviewpanel', () => {\n          const wasHidden = helpers.isReviewPanelHidden(testRunner);\n          this.jumplinks.trigger('changeReviewPanel', wasHidden);\n        }).after('renderitem', () => {\n          getJumpElement.question.attr('tabindex', '-1').focus();\n        });\n      },\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        const jumplinksContainer = $$1(containerTpl());\n        $$1('.content-wrap').prepend(jumplinksContainer);\n        this.jumplinks.render(jumplinksContainer);\n      }\n    });\n\n    return plugin;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/headerNavigation',['jquery', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers'], function ($, keyNavigator, navigableDomElement, helpers) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The identifier the keyNavigator group\n     * @type {String}\n     */\n    const groupId = 'header-toolbar';\n\n    /**\n     * Key navigator strategy applying onto the header bar.\n     * @type {Object} keyNavigationStrategy\n     */\n    var headerNavigation = {\n      name: 'header',\n      /**\n       * Builds the header navigation strategy.\n       *\n       * @returns {keyNavigationStrategy}\n       */\n      init() {\n        const config = this.getConfig();\n        // we need a global selector as there is currently no way to access the delivery frame from the test runner\n        const $headerBar = $('header');\n        const $headerElements = $headerBar.find('a:visible');\n        const registerHeaderNavigator = (id, group, $elements) => {\n          const elements = navigableDomElement.createFromDoms($elements);\n          if (elements.length) {\n            const navigator = keyNavigator({\n              id,\n              group,\n              elements,\n              propagateTab: false,\n              defaultPosition: 0\n            });\n            helpers.setupItemsNavigator(navigator, config);\n            helpers.setupClickableNavigator(navigator);\n            this.keyNavigators.push(navigator);\n          }\n        };\n        this.keyNavigators = [];\n        if (config.flatNavigation) {\n          $headerElements.each((index, element) => registerHeaderNavigator(`${groupId}-${index}`, $headerBar, $(element)));\n        } else {\n          registerHeaderNavigator(groupId, $headerBar, $headerElements);\n        }\n        return this;\n      },\n      /**\n       * Gets the list of applied navigators\n       * @returns {keyNavigator[]}\n       */\n      getNavigators() {\n        return this.keyNavigators;\n      },\n      /**\n       * Tears down the keyNavigator strategy\n       * @returns {keyNavigationStrategy}\n       */\n      destroy() {\n        this.keyNavigators.forEach(navigator => navigator.destroy());\n        this.keyNavigators = [];\n        return this;\n      }\n    };\n\n    return headerNavigation;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/toolbarNavigation',['lodash', 'jquery', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers'], function (_, $, keyNavigator, navigableDomElement, helpers) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The identifier the keyNavigator group\n     * @type {String}\n     */\n    const groupId = 'bottom-toolbar';\n\n    /**\n     * Key navigator strategy applying onto the tools bar\n     * @type {Object} keyNavigationStrategy\n     */\n    var toolbarNavigation = {\n      name: 'toolbar',\n      /**\n       * Builds the toolbar navigation strategy.\n       *\n       * @returns {keyNavigationStrategy}\n       */\n      init() {\n        const config = this.getConfig();\n        const $navigationBar = this.getTestRunner().getAreaBroker().getContainer().find('.bottom-action-bar');\n        let $toolbarElements = $navigationBar.find('.action:not(.btn-group):visible, .action.btn-group .li-inner:visible');\n        if (config.reverseBottomToolbar) {\n          $toolbarElements = $($toolbarElements.get().reverse());\n        }\n        const registerToolbarNavigator = (id, group, $elements) => {\n          const elements = navigableDomElement.createFromDoms($elements);\n          if (elements.length) {\n            const navigator = keyNavigator({\n              id,\n              group,\n              elements,\n              propagateTab: false,\n              defaultPosition(navigableElements) {\n                let pos = 0;\n\n                // search for the position of the \"Next\" button if any,\n                // otherwise take the position of the last element\n                if (config.autoFocus) {\n                  pos = navigableElements.length - 1;\n                  _.forEach(navigableElements, (navigable, i) => {\n                    const $element = navigable.getElement();\n                    if ($element.data('control') === 'move-forward' || $element.data('control') === 'move-end') {\n                      pos = i;\n                    }\n                  });\n                }\n                return pos;\n              }\n            });\n            helpers.setupItemsNavigator(navigator, config);\n            helpers.setupClickableNavigator(navigator);\n            this.keyNavigators.push(navigator);\n          }\n        };\n        this.keyNavigators = [];\n        if (config.flatNavigation) {\n          $toolbarElements.each((index, element) => registerToolbarNavigator(`${groupId}-${index}`, $navigationBar, $(element)));\n        } else {\n          registerToolbarNavigator(groupId, $navigationBar, $toolbarElements);\n        }\n        return this;\n      },\n      /**\n       * Gets the list of applied navigators\n       * @returns {keyNavigator[]}\n       */\n      getNavigators() {\n        return this.keyNavigators;\n      },\n      /**\n       * Tears down the keyNavigator strategy\n       * @returns {keyNavigationStrategy}\n       */\n      destroy() {\n        this.keyNavigators.forEach(navigator => navigator.destroy());\n        this.keyNavigators = [];\n        return this;\n      }\n    };\n\n    return toolbarNavigation;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/topToolbarNavigation',['jquery', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers'], function ($, keyNavigator, navigableDomElement, helpers) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The identifier the keyNavigator group\n     * @type {String}\n     */\n    const groupId = 'top-toolbar';\n\n    /**\n     * Key navigator strategy applying onto the top toolbar' bar.\n     * @type {Object} keyNavigationStrategy\n     */\n    var topToolbarNavigation = {\n      name: 'top-toolbar',\n      /**\n       * Builds the top toolbar navigation strategy.\n       *\n       * @returns {keyNavigationStrategy}\n       */\n      init() {\n        const config = this.getConfig();\n        const $topToolbar = this.getTestRunner().getAreaBroker().getContainer().find('.top-action-bar');\n        const $toolbarElements = $topToolbar.find('.timer-toggler');\n        const registerTopToolbarNavigator = (id, group, $elements) => {\n          const elements = navigableDomElement.createFromDoms($elements);\n          if (elements.length) {\n            const navigator = keyNavigator({\n              id,\n              group,\n              elements,\n              propagateTab: false\n            });\n            helpers.setupItemsNavigator(navigator, config);\n            helpers.setupClickableNavigator(navigator);\n            this.keyNavigators.push(navigator);\n          }\n        };\n        this.keyNavigators = [];\n        $toolbarElements.each((index, element) => registerTopToolbarNavigator(`${groupId}-${index}`, $topToolbar, $(element)));\n        return this;\n      },\n      /**\n       * Gets the list of applied navigators\n       * @returns {keyNavigator[]}\n       */\n      getNavigators() {\n        return this.keyNavigators;\n      },\n      /**\n       * Tears down the keyNavigator strategy\n       * @returns {keyNavigationStrategy}\n       */\n      destroy() {\n        this.keyNavigators.forEach(navigator => navigator.destroy());\n        this.keyNavigators = [];\n        return this;\n      }\n    };\n\n    return topToolbarNavigation;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/navigatorNavigation',['lodash', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers'], function (_, keyNavigator, navigableDomElement, helpers) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n\n    /**\n     * List of CSS selectors for the navigables\n     * @type {Object}\n     */\n    const selectors = {\n      filters: '.qti-navigator-filters .qti-navigator-filter',\n      enabledItems: '.qti-navigator-tree .qti-navigator-item:not(.disabled) .qti-navigator-label'\n    };\n\n    /**\n     * For 'fizzy' navigator layout, builds the navigator navigation strategy.\n     *\n     * @returns {keyNavigationStrategy}\n     */\n    function initFizzy(config, $panel, $navigator, keyNavigators, managedNavigators) {\n      let itemsNavigator;\n      const $navigatorTree = $panel.find('.qti-navigator-tree');\n      const $enabledItems = $navigator.find('.qti-navigator-tree .buttonlist-item:not(.disabled) .buttonlist-btn');\n      const navigableItems = navigableDomElement.createFromDoms($enabledItems);\n\n      /**\n       * Get item wrapper from navigable button\n       * (`navigable`: '.buttonlist-btn'; `parent()`: '.buttonlist-item')\n       * @returns {jQuery}\n       */\n      const getItemFromNavigable = navigable => {\n        return navigable.getElement().parent();\n      };\n      if (navigableItems.length) {\n        itemsNavigator = keyNavigator({\n          id: 'navigator-items',\n          elements: navigableItems,\n          group: $navigatorTree,\n          loop: true,\n          defaultPosition(navigableElements) {\n            let pos = _.findIndex(navigableElements, navigable => {\n              const $parent = getItemFromNavigable(navigable);\n              if ($parent.hasClass('buttonlist-item-active') && $parent.is(':visible')) {\n                return true;\n              }\n            });\n            return pos >= 0 ? pos : 0;\n          }\n        }).on('focus', cursor => {\n          getItemFromNavigable(cursor.navigable).addClass('key-navigation-highlight');\n        }).on('blur', cursor => {\n          getItemFromNavigable(cursor.navigable).removeClass('key-navigation-highlight');\n        });\n        helpers.setupItemsNavigator(itemsNavigator, {\n          keyNextItem: config.keyNextItem,\n          keyPrevItem: config.keyPrevItem\n        });\n        helpers.setupClickableNavigator(itemsNavigator);\n        keyNavigators.push(itemsNavigator);\n        managedNavigators.push(itemsNavigator);\n      }\n    }\n\n    /**\n     * Key navigator strategy applying onto the navigation panel.\n     * @type {Object} keyNavigationStrategy\n     */\n    var navigatorNavigation = {\n      name: 'navigator',\n      /**\n       * Builds the navigator navigation strategy.\n       *\n       * @returns {keyNavigationStrategy}\n       */\n      init() {\n        const config = this.getConfig();\n        const $panel = this.getTestRunner().getAreaBroker().getPanelArea();\n        const $navigator = $panel.find('.qti-navigator');\n        const isFizzyLayout = $navigator.hasClass('qti-navigator-fizzy');\n        this.managedNavigators = [];\n        this.keyNavigators = [];\n        if ($navigator.length && !$navigator.hasClass('disabled')) {\n          if (isFizzyLayout) {\n            initFizzy(config, $panel, $navigator, this.keyNavigators, this.managedNavigators);\n          } else {\n            const $testStatusHeader = $navigator.find('.qti-navigator-info.collapsible > .qti-navigator-label');\n            const navigableTestStatus = navigableDomElement.createFromDoms($testStatusHeader);\n            $testStatusHeader.addClass('key-navigation-actionable');\n            if (navigableTestStatus.length) {\n              const testStatusNavigation = keyNavigator({\n                keepState: config.keepState,\n                id: 'navigator-test-status',\n                propagateTab: false,\n                elements: navigableTestStatus,\n                group: $testStatusHeader\n              });\n              helpers.setupItemsNavigator(testStatusNavigation, {\n                keyNextItem: config.keyNextTab || config.keyNextItem,\n                keyPrevItem: config.keyPrevTab || config.keyPrevItem\n              });\n              this.keyNavigators.push(testStatusNavigation);\n              this.managedNavigators.push(testStatusNavigation);\n            }\n            let filtersNavigator;\n            let itemsNavigator;\n            //the tag to identify if the item listing has been browsed, to only \"smart jump\" to active item only on the first visit\n            let itemListingVisited = false;\n            //the position of the filter in memory, to only \"smart jump\" to active item only on the first visit\n            let currentFilter;\n            const $filters = $navigator.find(selectors.filters);\n            const navigableFilters = navigableDomElement.createFromDoms($filters);\n            if (navigableFilters.length) {\n              filtersNavigator = keyNavigator({\n                keepState: config.keepState,\n                id: 'navigator-filters',\n                propagateTab: false,\n                elements: navigableFilters,\n                group: $navigator.find('.qti-navigator-filters')\n              });\n              helpers.setupItemsNavigator(filtersNavigator, {\n                keyNextItem: config.keyNextTab || config.keyNextItem,\n                keyPrevItem: config.keyPrevTab || config.keyPrevItem\n              });\n              helpers.setupClickableNavigator(filtersNavigator);\n              if (config.keepState) {\n                filtersNavigator.on('focus', cursor => {\n                  if (config.keepState) {\n                    const $element = cursor.navigable.getElement();\n                    const filter = $element.data('mode');\n                    $element.click();\n                    if (currentFilter !== filter) {\n                      itemListingVisited = false;\n                    }\n                    currentFilter = filter;\n                  }\n                });\n              }\n              if (config.keyNextContent) {\n                filtersNavigator.on(config.keyNextContent, elem => {\n                  if (helpers.allowedToNavigateFrom(elem) && itemsNavigator) {\n                    _.defer(() => {\n                      if (itemListingVisited) {\n                        itemsNavigator.first();\n                      } else {\n                        itemsNavigator.focus();\n                      }\n                    });\n                  }\n                });\n              }\n              if (config.keyPrevContent) {\n                filtersNavigator.on(config.keyPrevContent, elem => {\n                  if (helpers.allowedToNavigateFrom(elem) && itemsNavigator) {\n                    _.defer(() => {\n                      itemsNavigator.last();\n                    });\n                  }\n                });\n              }\n              this.keyNavigators.push(filtersNavigator);\n              this.managedNavigators.push(filtersNavigator);\n            }\n            const $navigatorTree = $panel.find('.qti-navigator-tree');\n            const $trees = $navigator.find(selectors.enabledItems);\n            const navigableTrees = navigableDomElement.createFromDoms($trees);\n            $trees.first().addClass('key-navigation-scrollable-up');\n            $trees.last().addClass('key-navigation-scrollable-down');\n            if (navigableTrees.length) {\n              //instantiate a key navigator but do not add it to the returned list of navigators as this is not supposed to be reached with tab key\n              itemsNavigator = keyNavigator({\n                id: 'navigator-items',\n                elements: navigableTrees,\n                group: $navigatorTree,\n                defaultPosition(navigableElements) {\n                  let pos = 0;\n                  if (config.flatNavigation || currentFilter !== 'flagged') {\n                    pos = _.findIndex(navigableElements, navigable => {\n                      const $parent = navigable.getElement().parent('.qti-navigator-item');\n                      if ($parent.hasClass('active') && $parent.is(':visible')) {\n                        return true;\n                      }\n                    });\n                  }\n                  return pos;\n                }\n              }).on('focus', cursor => {\n                itemListingVisited = true;\n                cursor.navigable.getElement().parent().addClass('key-navigation-highlight');\n              }).on('blur', cursor => {\n                cursor.navigable.getElement().parent().removeClass('key-navigation-highlight');\n              });\n              helpers.setupItemsNavigator(itemsNavigator, {\n                keyNextItem: config.keyNextContent || config.keyNextItem,\n                keyPrevItem: config.keyPrevContent || config.keyPrevItem\n              });\n              helpers.setupClickableNavigator(itemsNavigator);\n              if (config.keepState) {\n                itemsNavigator.on('lowerbound upperbound', () => {\n                  if (filtersNavigator) {\n                    filtersNavigator.focus();\n                  }\n                });\n              }\n              if (config.keyNextTab && config.keyPrevTab) {\n                itemsNavigator.on(config.keyNextTab, function (elem) {\n                  if (helpers.allowedToNavigateFrom(elem) && filtersNavigator) {\n                    filtersNavigator.focus().next();\n                  }\n                });\n                itemsNavigator.on(config.keyPrevTab, function (elem) {\n                  if (helpers.allowedToNavigateFrom(elem) && filtersNavigator) {\n                    filtersNavigator.focus().previous();\n                  }\n                });\n              } else {\n                this.keyNavigators.push(itemsNavigator);\n              }\n              this.managedNavigators.push(itemsNavigator);\n            }\n          }\n        }\n        return this;\n      },\n      /**\n       * Gets the list of applied navigators\n       * @returns {keyNavigator[]}\n       */\n      getNavigators() {\n        return this.keyNavigators;\n      },\n      /**\n       * Tears down the keyNavigator strategy\n       * @returns {keyNavigationStrategy}\n       */\n      destroy() {\n        this.managedNavigators.forEach(navigator => navigator.destroy());\n        this.managedNavigators = [];\n        this.keyNavigators = [];\n        return this;\n      }\n    };\n\n    return navigatorNavigation;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/pageNavigation',['jquery', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers'], function ($, keyNavigator, navigableDomElement, helpers) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The identifier the keyNavigator group\n     * @type {String}\n     */\n    const groupId = 'item-content-wrapper';\n\n    /**\n     * Key navigator strategy applying onto the page.\n     * @type {Object} keyNavigationStrategy\n     */\n    var pageNavigation = {\n      name: 'page',\n      /**\n       * Builds the page navigation strategy.\n       *\n       * @returns {keyNavigationStrategy}\n       */\n      init() {\n        const config = this.getConfig();\n        this.keyNavigators = [];\n        this.getTestRunner().getAreaBroker().getContainer().find('.content-wrapper').addClass('key-navigation-scrollable').each((i, el) => {\n          const $element = $(el);\n          const navigator = keyNavigator({\n            id: `${groupId}-${this.keyNavigators.length}`,\n            elements: navigableDomElement.createFromDoms($element),\n            group: $element,\n            propagateTab: false\n          });\n          helpers.setupItemsNavigator(navigator, config);\n          this.keyNavigators.push(navigator);\n        });\n        return this;\n      },\n      /**\n       * Gets the list of applied navigators\n       * @returns {keyNavigator[]}\n       */\n      getNavigators() {\n        return this.keyNavigators;\n      },\n      /**\n       * Tears down the keyNavigator strategy\n       * @returns {keyNavigationStrategy}\n       */\n      destroy() {\n        this.keyNavigators.forEach(navigator => navigator.destroy());\n        this.keyNavigators = [];\n        return this;\n      }\n    };\n\n    return pageNavigation;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/rubricsNavigation',['jquery', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers'], function ($, keyNavigator, navigableDomElement, helpers) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The identifier the keyNavigator group\n     * @type {String}\n     */\n    const groupId = 'rubric-element-navigation-group';\n\n    /**\n     * Key navigator strategy applying onto the rubric blocks.\n     * @type {Object} keyNavigationStrategy\n     */\n    var rubricsNavigation = {\n      name: 'rubrics',\n      /**\n       * Builds the rubric blocks navigation strategy.\n       *\n       * @returns {keyNavigationStrategy}\n       */\n      init() {\n        const config = this.getConfig();\n        this.keyNavigators = [];\n        this.getTestRunner().getAreaBroker().getContainer().find('.qti-rubricBlock').addClass('key-navigation-scrollable').each((i, el) => {\n          const $element = $(el);\n          const navigator = keyNavigator({\n            id: `${groupId}-${this.keyNavigators.length}`,\n            elements: navigableDomElement.createFromDoms($element),\n            group: $element,\n            propagateTab: false\n          });\n          helpers.setupItemsNavigator(navigator, config);\n          this.keyNavigators.push(navigator);\n        });\n        return this;\n      },\n      /**\n       * Gets the list of applied navigators\n       * @returns {keyNavigator[]}\n       */\n      getNavigators() {\n        return this.keyNavigators;\n      },\n      /**\n       * Tears down the keyNavigator strategy\n       * @returns {keyNavigationStrategy}\n       */\n      destroy() {\n        this.keyNavigators.forEach(navigator => navigator.destroy());\n        this.keyNavigators = [];\n        return this;\n      }\n    };\n\n    return rubricsNavigation;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/itemNavigation',['jquery', 'ui/scroller', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers'], function ($, scrollHelper, keyNavigator, navigableDomElement, helpers) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    scrollHelper = scrollHelper && Object.prototype.hasOwnProperty.call(scrollHelper, 'default') ? scrollHelper['default'] : scrollHelper;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Add aria-labelledby attribute to choice interaction\n     *\n     * @param {Navigator} cursor\n     */\n    const addLabelledByAttribute = cursor => {\n      const $element = cursor.navigable.getElement();\n      const value = $element.attr('value');\n      const name = $element.attr('name');\n      if (name) {\n        $element.attr('aria-labelledby', `${name.replace('response-', 'choice-')}-${value}`);\n      }\n    };\n\n    /**\n     * Add aria-labelledby attribute from choice interaction\n     *\n     * @param {Navigator} cursor\n     */\n    const removeLabelledByAttribute = cursor => {\n      const $element = cursor.navigable.getElement();\n      $element.removeAttr('aria-labelledby', '');\n    };\n\n    /**\n     * Adds attributes on navigation focus and blur\n     *\n     * @param {Navigator} navigator\n     */\n    const manageLabelledByAttribute = navigator => {\n      if (navigator) {\n        navigator.on('focus', addLabelledByAttribute);\n        navigator.on('blur', removeLabelledByAttribute); // applies WCAG behavior for the radio buttons\n      }\n    };\n\n    /**\n     * Key navigator strategy applying inside the item.\n     * Navigable item content are interaction choices and body element with the special class \"key-navigation-focusable\".\n     * @type {Object} keyNavigationStrategy\n     */\n    var itemNavigation = {\n      name: 'item',\n      /**\n       * Builds the item navigation strategy.\n       *\n       * @returns {keyNavigationStrategy}\n       */\n      init() {\n        var _this = this;\n        this.keyNavigators = [];\n        const config = this.getConfig();\n        const $content = this.getTestRunner().getAreaBroker().getContentArea();\n\n        /**\n         * Gets the QTI choice element from the current position in the keyNavigation\n         * @param {Object} cursor - The cursor definition supplied by the keyNavigator\n         * @returns {jQuery} - The selected choice element\n         */\n        const getQtiChoice = function (cursor) {\n          return cursor && cursor.navigable.getElement().closest('.qti-choice');\n        };\n\n        /**\n         * Creates and registers a keyNavigator for the supplied list of elements\n         * @param {jQuery} $elements - The list of navigable elements\n         * @param {jQuery} group - The group container\n         * @param {Boolean} [loop=false] - Allow cycling the list when a boundary is reached\n         * @param {Number|Function} [defaultPosition=0] - The default position the group should set the focus on\n         * @returns {keyNavigator} - the created navigator, if the list of element is not empty\n         */\n        const addNavigator = function ($elements, group) {\n          let loop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          let defaultPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n          const elements = navigableDomElement.createFromDoms($elements);\n          if (elements.length) {\n            const navigator = keyNavigator({\n              elements,\n              group,\n              loop,\n              defaultPosition,\n              propagateTab: false\n            });\n            _this.keyNavigators.push(navigator);\n            return navigator;\n          }\n        };\n\n        /**\n         * Creates and setups a keyNavigator for the interaction inputs.\n         * @param {jQuery} $elements - The list of navigable elements\n         * @param {jQuery} group - The group container\n         * @param {Boolean} [loop=false] - Allow cycling the list when a boundary is reached\n         * @param {Number|Function} [defaultPosition=0] - The default position the group should set the focus on\n         * @returns {keyNavigator} - The supplied keyNavigator\n         */\n        const addInputsNavigator = function ($elements, group, loop) {\n          let defaultPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n          const navigator = addNavigator($elements, group, loop, defaultPosition);\n          if (navigator) {\n            helpers.setupItemsNavigator(navigator, config);\n            helpers.setupClickableNavigator(navigator);\n\n            // each choice is represented by more than the input, the style must be spread to the actual element\n            navigator.on('focus', cursor => scrollHelper.scrollTo(getQtiChoice(cursor).addClass('key-navigation-highlight'), $content.closest('.content-wrapper'))).on('blur', cursor => getQtiChoice(cursor).removeClass('key-navigation-highlight'));\n          }\n          return navigator;\n        };\n\n        // list the navigable areas inside the item. This could be either the interactions choices or the prompts\n        const $qtiInteractions = $content.find('.key-navigation-focusable,.qti-interaction')\n        //filter out interaction as it will be managed separately\n        .filter((i, node) => !$(node).parents('.qti-interaction').length);\n\n        // the item focusable body elements are considered scrollable\n        $content.find('.key-navigation-focusable').addClass('key-navigation-scrollable');\n\n        // each navigable area will get its own keyNavigator\n        $qtiInteractions.each((itemPos, itemElement) => {\n          const $itemElement = $(itemElement);\n\n          // detect the type of choices: checkbox or radio\n          const $choiceInput = $itemElement.find('.qti-choice input');\n          const choiceType = $choiceInput.attr('type');\n          if ($itemElement.hasClass('qti-interaction')) {\n            //add navigable elements from prompt\n            $itemElement.find('.key-navigation-focusable').each((navPos, nav) => {\n              const $nav = $(nav);\n              if (!$nav.closest('.qti-choice').length) {\n                addNavigator($nav, $nav);\n              }\n            });\n\n            //reset interaction custom key navigation to override the behaviour with the new one\n            $itemElement.off('.keyNavigation');\n\n            //search for inputs that represent the interaction focusable choices\n            const $inputs = $itemElement.is(':input') ? $itemElement : $itemElement.find(':input');\n            if (config.flatNavigation && (config.flatRadioNavigation || choiceType !== 'radio')) {\n              $inputs.each((i, input) => {\n                const navigator = addInputsNavigator($(input), $itemElement);\n                manageLabelledByAttribute(navigator);\n              });\n            } else {\n              const navigator = addInputsNavigator($inputs, $itemElement, true, () => {\n                // keep default positioning for now\n                let position = -1;\n\n                // autofocus the selected radio button if any\n                $inputs.each((index, input) => {\n                  if (input.checked) {\n                    position = index;\n                  }\n                });\n                return position;\n              });\n              manageLabelledByAttribute(navigator);\n\n              // applies WCAG behavior for the radio buttons\n              if (navigator && config.wcagBehavior) {\n                navigator.on('focus', cursor => {\n                  const $element = cursor.navigable.getElement();\n                  if (!$element.is(':checked')) {\n                    $element.click();\n                  }\n                });\n              }\n            }\n          } else {\n            addNavigator($itemElement, $itemElement);\n          }\n        });\n        return this;\n      },\n      /**\n       * Gets the list of applied navigators\n       * @returns {keyNavigator[]}\n       */\n      getNavigators() {\n        return this.keyNavigators;\n      },\n      /**\n       * Tears down the keyNavigator strategy\n       * @returns {keyNavigationStrategy}\n       */\n      destroy() {\n        this.keyNavigators.forEach(navigator => navigator.destroy());\n        this.keyNavigators = [];\n        return this;\n      }\n    };\n\n    return itemNavigation;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/linearItemNavigation',['jquery', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers'], function ($, keyNavigator, navigableDomElement, helpers) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Key navigator strategy applying inside the item.\n     * Navigable item content are interaction choices with the special class \"key-navigation-focusable\".\n     * @type {Object} keyNavigationStrategy\n     */\n    var linearItemNavigation = {\n      name: 'linearItem',\n      /**\n       * Builds the item navigation strategy.\n       *\n       * @returns {keyNavigationStrategy}\n       */\n      init() {\n        const config = this.getConfig();\n        const $content = this.getTestRunner().getAreaBroker().getContentArea();\n        const $qtiInteractions = $content.find('.key-navigation-focusable,.qti-interaction')\n        //filter out interaction as it will be managed separately\n        .filter((i, node) => !$(node).parents('.qti-interaction').length);\n        const $qtiChoices = $qtiInteractions.find('.qti-choice');\n        let $lastParent = null;\n        let list = [];\n        const setupListNavigator = () => {\n          const navigator = keyNavigator({\n            elements: list,\n            propagateTab: false\n          });\n          helpers.setupItemsNavigator(navigator, config);\n          this.choicesNavigators.push(navigator);\n        };\n\n        // this strategy manages 2 navigators:\n        // - keyNavigators lists all elements separately, allowing to navigate among them as identified groups\n        // - choicesNavigators lists elements with the same parent, allowing to navigate \"horizontally\" among them\n        this.keyNavigators = [];\n        this.choicesNavigators = [];\n\n        // the item focusable body elements are considered scrollable\n        $content.find('.key-navigation-focusable').addClass('key-navigation-scrollable');\n        $qtiChoices.each((i, el) => {\n          const $itemElement = $(el);\n          const $parent = $itemElement.parent();\n          const choiceNavigator = keyNavigator({\n            elements: navigableDomElement.createFromDoms($itemElement),\n            group: $itemElement,\n            propagateTab: false\n          });\n          helpers.setupClickableNavigator(choiceNavigator);\n          if ($lastParent && !$parent.is($lastParent)) {\n            setupListNavigator();\n            list = [];\n          }\n          this.keyNavigators.push(choiceNavigator);\n          list.push(choiceNavigator);\n          $lastParent = $parent;\n        });\n        if (list.length) {\n          setupListNavigator();\n          list = [];\n        }\n        return this;\n      },\n      /**\n       * Gets the list of applied navigators\n       * @returns {keyNavigator[]}\n       */\n      getNavigators() {\n        return this.keyNavigators;\n      },\n      /**\n       * Tears down the keyNavigator strategy\n       * @returns {keyNavigationStrategy}\n       */\n      destroy() {\n        this.keyNavigators.forEach(navigator => navigator.destroy());\n        this.choicesNavigators.forEach(navigator => navigator.destroy());\n        this.choicesNavigators = [];\n        this.keyNavigators = [];\n        return this;\n      }\n    };\n\n    return linearItemNavigation;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/stimulusNavigation',['jquery', 'i18n', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers'], function ($, __, keyNavigator, navigableDomElement, helpers) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n\n    /**\n    * The identifier the keyNavigator group\n    * @type {String}\n    */\n    const groupId = 'stimulus-element-navigation-group';\n\n    /**\n     * Key navigator strategy applying on stimulus items with scrollbar.\n     * Navigable item content are body elements with the special class \"stimulus-container\".\n     * @type {Object} keyNavigationStrategy\n     */\n    var stimulusNavigation = {\n      name: 'stimulus',\n      /**\n       * Builds the item navigation strategy.\n       *\n       * @returns {keyNavigationStrategy}\n       */\n      init() {\n        const config = this.getConfig();\n        const $content = this.getTestRunner().getAreaBroker().getContentArea();\n        this.keyNavigators = [];\n\n        // decorate isEnabled navigableDomElement method to check for dom node height\n        const isEnabledDecorator = element => {\n          const originalIsEnabled = element.isEnabled;\n          element.isEnabled = function isEnabled() {\n            if (originalIsEnabled.call(this)) {\n              const node = this.getElement().get(0);\n              return node.scrollHeight > node.clientHeight;\n            }\n            return false;\n          };\n          return element;\n        };\n        $content.find('.stimulus-container').addClass('key-navigation-scrollable').each((i, el) => {\n          const $element = $(el);\n          const elements = navigableDomElement.createFromDoms($element).map(isEnabledDecorator);\n\n          // assign aria attributes\n          $element.attr('aria-label', __('Passage'));\n          const navigator = keyNavigator({\n            id: `${groupId}-${i}`,\n            elements,\n            group: $element,\n            propagateTab: false\n          });\n          helpers.setupItemsNavigator(navigator, config);\n          this.keyNavigators.push(navigator);\n        });\n        return this;\n      },\n      /**\n       * Gets the list of applied navigators\n       * @returns {keyNavigator[]}\n       */\n      getNavigators() {\n        return this.keyNavigators;\n      },\n      /**\n       * Tears down the keyNavigator strategy\n       * @returns {keyNavigationStrategy}\n       */\n      destroy() {\n        this.keyNavigators.forEach(navigator => navigator.destroy());\n        this.keyNavigators = [];\n        return this;\n      }\n    };\n\n    return stimulusNavigation;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/jumpLinks',['jquery', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers'], function ($, keyNavigator, navigableDomElement, helpers) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The identifier the keyNavigator group\n     * @type {String}\n     */\n    const groupId = 'jump-links';\n\n    /**\n     * Key navigator strategy applying onto the top toolbar' bar.\n     * @type {Object} keyNavigationStrategy\n     */\n    var jumpLinks = {\n      name: 'jump-links',\n      /**\n       * Builds the top toolbar navigation strategy.\n       *\n       * @returns {keyNavigationStrategy}\n       */\n      init() {\n        const config = this.getConfig();\n        const $jumpLinksBox = $('.content-wrap');\n        const $links = $jumpLinksBox.find('.jump-link');\n        this.keyNavigators = [];\n        const registerTopToolbarNavigator = (id, group, $elements) => {\n          const elements = navigableDomElement.createFromDoms($elements);\n          if (elements.length) {\n            const navigator = keyNavigator({\n              id,\n              group,\n              elements,\n              propagateTab: false\n            });\n            helpers.setupItemsNavigator(navigator, config);\n            helpers.setupClickableNavigator(navigator);\n            this.keyNavigators.push(navigator);\n          }\n        };\n        $links.each((index, element) => registerTopToolbarNavigator(`${groupId}-${index}`, $jumpLinksBox, $(element)));\n        return this;\n      },\n      /**\n       * Gets the list of applied navigators\n       * @returns {keyNavigator[]}\n       */\n      getNavigators() {\n        return this.keyNavigators;\n      },\n      /**\n       * Tears down the keyNavigator strategy\n       * @returns {keyNavigationStrategy}\n       */\n      destroy() {\n        this.keyNavigators.forEach(navigator => navigator.destroy());\n        this.keyNavigators = [];\n        return this;\n      }\n    };\n\n    return jumpLinks;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/index',['exports', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/headerNavigation', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/toolbarNavigation', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/topToolbarNavigation', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/navigatorNavigation', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/pageNavigation', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/rubricsNavigation', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/itemNavigation', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/linearItemNavigation', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/stimulusNavigation', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/jumpLinks'], function (exports, headerNavigation, toolbarNavigation, topToolbarNavigation, navigatorNavigation, pageNavigation, rubricsNavigation, itemNavigation, linearItemNavigation, stimulusNavigation, jumpLinks) { 'use strict';\n\n\theaderNavigation = headerNavigation && Object.prototype.hasOwnProperty.call(headerNavigation, 'default') ? headerNavigation['default'] : headerNavigation;\n\ttoolbarNavigation = toolbarNavigation && Object.prototype.hasOwnProperty.call(toolbarNavigation, 'default') ? toolbarNavigation['default'] : toolbarNavigation;\n\ttopToolbarNavigation = topToolbarNavigation && Object.prototype.hasOwnProperty.call(topToolbarNavigation, 'default') ? topToolbarNavigation['default'] : topToolbarNavigation;\n\tnavigatorNavigation = navigatorNavigation && Object.prototype.hasOwnProperty.call(navigatorNavigation, 'default') ? navigatorNavigation['default'] : navigatorNavigation;\n\tpageNavigation = pageNavigation && Object.prototype.hasOwnProperty.call(pageNavigation, 'default') ? pageNavigation['default'] : pageNavigation;\n\trubricsNavigation = rubricsNavigation && Object.prototype.hasOwnProperty.call(rubricsNavigation, 'default') ? rubricsNavigation['default'] : rubricsNavigation;\n\titemNavigation = itemNavigation && Object.prototype.hasOwnProperty.call(itemNavigation, 'default') ? itemNavigation['default'] : itemNavigation;\n\tlinearItemNavigation = linearItemNavigation && Object.prototype.hasOwnProperty.call(linearItemNavigation, 'default') ? linearItemNavigation['default'] : linearItemNavigation;\n\tstimulusNavigation = stimulusNavigation && Object.prototype.hasOwnProperty.call(stimulusNavigation, 'default') ? stimulusNavigation['default'] : stimulusNavigation;\n\tjumpLinks = jumpLinks && Object.prototype.hasOwnProperty.call(jumpLinks, 'default') ? jumpLinks['default'] : jumpLinks;\n\n\n\n\texports.headerNavigationStrategy = headerNavigation;\n\texports.toolbarNavigationStrategy = toolbarNavigation;\n\texports.topToolbarNavigationStrategy = topToolbarNavigation;\n\texports.navigatorNavigationStrategy = navigatorNavigation;\n\texports.pageNavigationStrategy = pageNavigation;\n\texports.rubricsNavigationStrategy = rubricsNavigation;\n\texports.itemNavigationStrategy = itemNavigation;\n\texports.linearItemNavigationStrategy = linearItemNavigation;\n\texports.stimulusNavigationStrategy = stimulusNavigation;\n\texports.jumpLinksNavigationStrategy = jumpLinks;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategiesManager',['core/providerRegistry', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategies/index'], function (providerRegistry, strategies) { 'use strict';\n\n    providerRegistry = providerRegistry && Object.prototype.hasOwnProperty.call(providerRegistry, 'default') ? providerRegistry['default'] : providerRegistry;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Defines the strategies API\n     * @typedef {Object} keyNavigationStrategy\n     * @property {Function} init\n     * @property {Function} destroy\n     * @property {Function} getNavigators\n     * @property {Function} getName\n     * @property {Function} getConfig\n     * @property {Function} getTestRunner\n     */\n\n    /**\n     * Defines the config structure for the navigation strategies\n     * @typedef {Object} keyNavigationStrategyConfig\n     * @property {Boolean} autoFocus - auto select the main action when available in a group\n     * @property {Boolean} wcagBehavior - apply WCAG recommended behavior for radio buttons and similar elements\n     * @property {Boolean} keepState - for strategies able to keep the state, allow to keep the position of the focused\n     * element when moving away from the group and restore it when the group retrieves the focus\n     * @property {Boolean} propagateTab - propagate the Tab key to the upper level\n     * @property {Boolean} flatNavigation - flatten the navigation between groups, allowing to forward the focus to the\n     * following group when a group boundary is reached. If disabled, the only way to move between groups is to use the\n     * related key combination\n     * @property {String} keyNextItem - the keyboard shortcut to move to the next item (inside the scope)\n     * @property {String} keyPrevItem - the keyboard shortcut to move to the previous item (inside the scope)\n     * @property {String} keyNextGroup - the keyboard shortcut to move to the next group (outside the scope)\n     * @property {String} keyPrevGroup - the keyboard shortcut to move to the previous group (outside the scope)\n     * @property {String} keyNextTab - the keyboard shortcut to move to the next tab of the bar\n     * @property {String} keyPrevTab - the keyboard shortcut to move to the previous tab of the bar\n     * @property {String} keyNextContent - the keyboard shortcut to move to the next content element\n     * @property {String} keyPrevContent - the keyboard shortcut to move to the previous content element\n     */\n\n    /**\n     * Builds a key navigator strategies manager.\n     *\n     * @param {String} name - the name of the strategy to build\n     * @param {testRunner} testRunner - the test runner instance to control\n     * @param {keyNavigationStrategyConfig} config - the config to apply\n     * @returns {keyNavigationStrategy}\n     */\n    function strategyFactory(name, testRunner, config) {\n      const strategy = strategyFactory.getProvider(name);\n\n      /**\n       * @type {Object} keyNavigationStrategy\n       */\n      return {\n        /**\n         * Setup the keyNavigator strategy\n         * @returns {keyNavigationStrategy}\n         */\n        init() {\n          strategy.init.call(this);\n          return this;\n        },\n        /**\n         * Gets the name of the applied strategy\n         * @returns {String}\n         */\n        getName() {\n          return name;\n        },\n        /**\n         * Gets the config of the strategy\n         * @returns {keyNavigationStrategyConfig}\n         */\n        getConfig() {\n          return config;\n        },\n        /**\n         * Gets the test runner\n         * @returns {testRunner}\n         */\n        getTestRunner() {\n          return testRunner;\n        },\n        /**\n         * Gets the list of applied navigators\n         * @returns {keyNavigator[]}\n         */\n        getNavigators() {\n          if ('function' === typeof strategy.getNavigators) {\n            return strategy.getNavigators.call(this);\n          }\n          return [];\n        },\n        /**\n         * Tears down the keyNavigator strategy\n         * @returns {keyNavigationStrategy}\n         */\n        destroy() {\n          if ('function' === typeof strategy.destroy) {\n            strategy.destroy.call(this);\n          }\n          return this;\n        }\n      };\n    }\n\n    // bootstrap the manager and register the strategies\n    providerRegistry(strategyFactory);\n    Object.values(strategies).forEach(strategy => strategyFactory.registerProvider(strategy.name, strategy));\n\n    return strategyFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers',['exports', 'jquery', 'lodash', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/strategiesManager'], function (exports, $, _, strategyFactory) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    strategyFactory = strategyFactory && Object.prototype.hasOwnProperty.call(strategyFactory, 'default') ? strategyFactory['default'] : strategyFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2020 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * When either an element or its parents have this class - navigation from it would be disabled.\n     *\n     * @type {String}\n     */\n    const ignoredClass = 'no-key-navigation';\n\n    /**\n     * Checks whether element is navigable from\n     *\n     * @param {HTMLElement|keyNavigator} from\n     * @returns {boolean}\n     */\n    function allowedToNavigateFrom(from) {\n      let element = from;\n      if (element && 'function' === typeof element.getCursor) {\n        const {\n          navigable\n        } = element.getCursor();\n        element = navigable;\n      }\n      if (element && 'function' === typeof element.getElement) {\n        element = element.getElement();\n      }\n      const $element = $(element);\n      if ($element.hasClass(ignoredClass) || $element.parents(`.${ignoredClass}`).length > 0) {\n        return false;\n      }\n      return true;\n    }\n\n    /**\n     * Applies an items' navigation scheme on a keyNavigator.\n     * @param {keyNavigator} navigator\n     * @param {keyNavigationStrategyConfig} config - the config to apply\n     * @returns {keyNavigator}\n     */\n    function setupItemsNavigator(navigator, config) {\n      return navigator.on(config.keyNextItem, function navigateToNextItem(elem) {\n        if (allowedToNavigateFrom(elem)) {\n          this.next();\n        }\n      }).on(config.keyPrevItem, function navigateToPrevItem(elem) {\n        if (allowedToNavigateFrom(elem)) {\n          this.previous();\n        }\n      });\n    }\n\n    /**\n     * Applies an items' navigation scheme on a keyNavigator.\n     * @param {keyNavigator} navigator\n     * @returns {keyNavigator}\n     */\n    function setupClickableNavigator(navigator) {\n      return navigator.on('activate', function activateItem(cursor) {\n        const $elt = cursor.navigable.getElement();\n\n        // jQuery <= 1.9.0\n        // the checkbox values are set after the click event if triggered with jQuery\n        if ($elt.is(':checkbox')) {\n          $elt.each(function () {\n            this.click();\n          });\n        } else {\n          $elt.click().mousedown();\n        }\n      });\n    }\n\n    /**\n     * Build the strategies related to a key navigation mode\n     * @param {keyNavigationMode} navigationMode\n     * @param {testRunner} testRunner\n     * @returns {keyNavigationStrategy[]}\n     */\n    function getStrategies(navigationMode, testRunner) {\n      return navigationMode.strategies.map(area => strategyFactory(area, testRunner, navigationMode.config).init());\n    }\n\n    /**\n     * Gets the key navigators from the provided strategies\n     * @param {keyNavigationStrategy[]} strategies\n     * @returns {keyNavigator[]}\n     */\n    function getNavigators(strategies) {\n      return _.flatten(strategies.map(strategy => strategy.getNavigators()));\n    }\n\n    exports.allowedToNavigateFrom = allowedToNavigateFrom;\n    exports.getNavigators = getNavigators;\n    exports.getStrategies = getStrategies;\n    exports.setupClickableNavigator = setupClickableNavigator;\n    exports.setupItemsNavigator = setupItemsNavigator;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/modes/defaultMode',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Default key navigation mode\n     */\n    var defaultMode = {\n      name: 'default',\n      /**\n       * Builds the key navigation config for the \"default\" mode\n       * @param {keyNavigationStrategyConfig} config - additional config to set\n       * @returns {keyNavigationMode}\n       */\n      init() {\n        let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return {\n          strategies: ['rubrics', 'stimulus', 'item', 'toolbar', 'header', 'top-toolbar', 'navigator', 'page'],\n          config: Object.assign({\n            autoFocus: true,\n            wcagBehavior: false,\n            keepState: true,\n            propagateTab: false,\n            flatNavigation: false,\n            keyNextGroup: 'tab',\n            keyPrevGroup: 'shift+tab',\n            keyNextItem: 'right down',\n            keyPrevItem: 'left up',\n            keyNextTab: 'right',\n            keyPrevTab: 'left',\n            keyNextContent: 'down',\n            keyPrevContent: 'up'\n          }, config)\n        };\n      }\n    };\n\n    return defaultMode;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/modes/linearMode',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Linear key navigation mode\n     */\n    var linearMode = {\n      name: 'linear',\n      /**\n       * Builds the key navigation config for the \"linear\" mode\n       * @param {keyNavigationStrategyConfig} config - additional config to set\n       * @returns {keyNavigationMode}\n       */\n      init() {\n        let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return {\n          strategies: ['rubrics', 'stimulus', 'linearItem', 'toolbar', 'header', 'top-toolbar', 'navigator', 'page'],\n          config: Object.assign({\n            autoFocus: true,\n            wcagBehavior: false,\n            keepState: true,\n            propagateTab: false,\n            flatNavigation: false,\n            keyNextGroup: 'tab',\n            keyPrevGroup: 'shift+tab',\n            keyNextItem: 'right down',\n            keyPrevItem: 'left up',\n            keyNextTab: 'right',\n            keyPrevTab: 'left',\n            keyNextContent: 'down',\n            keyPrevContent: 'up'\n          }, config)\n        };\n      }\n    };\n\n    return linearMode;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/modes/nativeMode',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Native key navigation mode\n     */\n    var nativeMode = {\n      name: 'native',\n      /**\n       * Builds the key navigation config for the \"native\" mode\n       * @param {keyNavigationStrategyConfig} config - additional config to set\n       * @returns {keyNavigationMode}\n       */\n      init() {\n        let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return {\n          // todo: add access to the page and the rubric blocks\n          strategies: ['jump-links', 'header', 'top-toolbar', 'navigator', 'page', 'rubrics', 'stimulus', 'item', 'toolbar'],\n          config: Object.assign({\n            autoFocus: false,\n            wcagBehavior: false,\n            keepState: false,\n            propagateTab: true,\n            flatNavigation: true,\n            keyNextGroup: 'tab',\n            keyPrevGroup: 'shift+tab',\n            keyNextItem: 'right down',\n            keyPrevItem: 'left up',\n            keyNextTab: '',\n            keyPrevTab: '',\n            keyNextContent: '',\n            keyPrevContent: ''\n          }, config)\n        };\n      }\n    };\n\n    return nativeMode;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/modes/index',['exports', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/modes/defaultMode', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/modes/linearMode', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/modes/nativeMode'], function (exports, defaultMode, linearMode, nativeMode) { 'use strict';\n\n\tdefaultMode = defaultMode && Object.prototype.hasOwnProperty.call(defaultMode, 'default') ? defaultMode['default'] : defaultMode;\n\tlinearMode = linearMode && Object.prototype.hasOwnProperty.call(linearMode, 'default') ? linearMode['default'] : linearMode;\n\tnativeMode = nativeMode && Object.prototype.hasOwnProperty.call(nativeMode, 'default') ? nativeMode['default'] : nativeMode;\n\n\n\n\texports.defaultModeProvider = defaultMode;\n\texports.linearModeProvider = linearMode;\n\texports.nativeModeProvider = nativeMode;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/modesManager',['core/providerRegistry', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/modes/index'], function (providerRegistry, modes) { 'use strict';\n\n    providerRegistry = providerRegistry && Object.prototype.hasOwnProperty.call(providerRegistry, 'default') ? providerRegistry['default'] : providerRegistry;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Defines the mode config\n     * @typedef {Object} keyNavigationMode\n     * @property {String[]} strategies\n     * @property {keyNavigationStrategyConfig} config\n     */\n\n    /**\n     * Builds a key navigator modes manager.\n     *\n     * @param {String} mode - the name of the mode to get\n     * @param {keyNavigationStrategyConfig} config - additional config to set\n     * @returns {keyNavigationMode}\n     */\n    function modeFactory(mode) {\n      let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      const instance = modeFactory.getProvider(mode);\n      return instance.init(config);\n    }\n\n    // bootstrap the manager and register the strategies\n    providerRegistry(modeFactory);\n    Object.values(modes).forEach(mode => modeFactory.registerProvider(mode.name, mode));\n\n    return modeFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/keyNavigation',['ui/keyNavigation/navigator', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/helpers', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/modesManager', 'util/shortcut'], function (keyNavigator, helpers, modeFactory, shortcut) { 'use strict';\n\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    modeFactory = modeFactory && Object.prototype.hasOwnProperty.call(modeFactory, 'default') ? modeFactory['default'] : modeFactory;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2020 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The event namespace used to register removable listeners\n     * @type {String}\n     */\n    const eventNS = '.keyNavigation';\n\n    /**\n     * Builds a key navigator that can apply onto a test runner\n     * @param {testRunner} testRunner - the test runner instance to control\n     * @param {Object} config - the config to apply\n     * @param {String} config.contentNavigatorType - the keyboard navigation mode\n     * @returns {testRunnerKeyNavigator}\n     */\n    function keyNavigationFactory(testRunner) {\n      let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let {\n        contentNavigatorType\n      } = config;\n      let groupNavigator = null;\n      let strategies = [];\n\n      /**\n       * @typedef {Object} testRunnerKeyNavigator\n       */\n      return {\n        /**\n         * Setup the keyNavigator\n         * @returns {testRunnerKeyNavigator}\n         */\n        init() {\n          const navigationMode = modeFactory(contentNavigatorType, config);\n          const navigationConfig = navigationMode.config;\n          strategies = helpers.getStrategies(navigationMode, testRunner);\n          const navigators = helpers.getNavigators(strategies);\n\n          //blur current focused element, to reinitialize keyboard navigation\n          if (document.activeElement) {\n            document.activeElement.blur();\n          }\n          groupNavigator = keyNavigator({\n            id: 'test-runner',\n            loop: true,\n            elements: navigators,\n            propagateTab: navigationConfig.propagateTab\n          });\n          helpers.setupItemsNavigator(groupNavigator, {\n            keyNextItem: navigationConfig.keyNextGroup,\n            keyPrevItem: navigationConfig.keyPrevGroup\n          });\n          shortcut.remove(eventNS).add(`tab${eventNS} shift+tab${eventNS}`, function (e) {\n            if (!helpers.allowedToNavigateFrom(e.target)) {\n              return false;\n            }\n            if (!groupNavigator.isFocused()) {\n              groupNavigator.focus();\n            }\n          });\n          return this;\n        },\n        /**\n         * Gets the attached testRunner\n         * @returns {testRunner}\n         */\n        getTestRunner() {\n          return testRunner;\n        },\n        /**\n         * Switches the navigation mode\n         * @param {String} newMode\n         * @returns {testRunnerKeyNavigator}\n         */\n        setMode(newMode) {\n          contentNavigatorType = newMode;\n          return this;\n        },\n        /**\n         * Gets the active navigation mode\n         * @returns {String}\n         */\n        getMode() {\n          return contentNavigatorType;\n        },\n        /**\n         * Returns keyNavigation active state\n         * @returns {Boolean}\n         */\n        isActive() {\n          return groupNavigator !== null;\n        },\n        /**\n         * Tears down the keyNavigator\n         * @returns {testRunnerKeyNavigator}\n         */\n        destroy() {\n          shortcut.remove(eventNS);\n          strategies.forEach(strategy => strategy.destroy());\n          if (groupNavigator) {\n            groupNavigator.destroy();\n          }\n          groupNavigator = null;\n          strategies = [];\n          return this;\n        }\n      };\n    }\n\n    return keyNavigationFactory;\n\n});\n\n","\ndefine('css!taoQtiTest/runner/plugins/content/accessibility/css/key-navigation',[],function(){});\n","define('taoQtiTest/runner/plugins/content/accessibility/keyNavigation/plugin',['lodash', 'taoQtiTest/runner/plugins/content/accessibility/keyNavigation/keyNavigation', 'taoTests/runner/plugin', 'css!taoQtiTest/runner/plugins/content/accessibility/css/key-navigation.css'], function (_, keyNavigatorFactory, pluginFactory, keyNavigation_css) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    keyNavigatorFactory = keyNavigatorFactory && Object.prototype.hasOwnProperty.call(keyNavigatorFactory, 'default') ? keyNavigatorFactory['default'] : keyNavigatorFactory;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2020 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * If we have now config from backend side - we set this default dataset\n     *\n     * @typedef {object}\n     * @properties {string} contentNavigatorType - ('default' | 'linear') - type of content navigation\n     */\n    const defaultPluginConfig = {\n      contentNavigatorType: 'default'\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    var plugin = pluginFactory({\n      name: 'keyNavigation',\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init() {\n        const testRunner = this.getTestRunner();\n        const pluginConfig = _.defaults(this.getConfig(), defaultPluginConfig);\n        const keyNavigator = keyNavigatorFactory(testRunner, pluginConfig);\n\n        /**\n         *  Update plugin state based on changes\n         */\n        testRunner.after('renderitem', () => {\n          // make sure that keyNavigator is destroyed\n          // to preevent multiple instances to be active at the same time\n          if (keyNavigator.isActive()) {\n            keyNavigator.destroy();\n          }\n          keyNavigator.init();\n        }).on('unloaditem', () => {\n          keyNavigator.destroy();\n        })\n\n        /**\n         * @param {string} type - type of content tab navigation,\n         * can be: 'default', 'linear', 'native'\n         */.on('setcontenttabtype', type => {\n          keyNavigator.setMode(type);\n          pluginConfig.contentNavigatorType = type;\n        });\n      }\n    });\n\n    return plugin;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/accessibility/mainLandmark/header',['jquery', 'i18n', 'taoTests/runner/plugin', 'handlebars', 'lib/handlebars/helpers'], function ($$1, __, pluginFactory, Handlebars, Helpers0) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n      return \"<span data-control=\\\"qti-test-item-title\\\"></span>\\n<span data-control=\\\"qti-test-item-state\\\"></span>\\n\";\n      });\n    function headerTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n     */\n    function getState(item) {\n      let state = __('Unseen');\n      if (item.flagged) {\n        state = __('Flagged');\n      } else if (item.answered) {\n        state = __('Answered');\n      } else if (item.viewed) {\n        state = __('Viewed');\n      }\n      return state;\n    }\n    var header = pluginFactory({\n      name: 'mainLandmark',\n      init() {\n        const testRunner = this.getTestRunner();\n        const updateTitle = item => {\n          this.$title.text(`${item.label}`).show();\n        };\n        const updateState = item => {\n          this.$state.text(`${getState(item)}`).show();\n        };\n        testRunner.after('renderitem', () => {\n          const item = testRunner.getCurrentItem();\n          updateTitle(item);\n          updateState(item);\n        }).on('tool-flagitem', () => {\n          let item = testRunner.getCurrentItem();\n          item = Object.assign({}, item, {\n            flagged: !item.flagged\n          });\n          updateState(item);\n        });\n      },\n      render() {\n        const $container = this.getAreaBroker().getArea('mainLandmark');\n        this.$element = $$1(headerTpl());\n        $container.append(this.$element);\n        this.$title = $container.find(`[data-control=\"qti-test-item-title\"]`);\n        this.$state = $container.find(`[data-control=\"qti-test-item-state\"]`);\n      }\n    });\n\n    return header;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/dialog/dialog',['jquery', 'lodash', 'taoTests/runner/plugin', 'ui/dialog/alert', 'ui/dialog/confirm', 'util/shortcut/registry', 'util/shortcut', 'util/namespace'], function ($, _, pluginFactory, dialogAlert, dialogConfirm, shortcutRegistry, globalShortcut, namespaceHelper) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    dialogAlert = dialogAlert && Object.prototype.hasOwnProperty.call(dialogAlert, 'default') ? dialogAlert['default'] : dialogAlert;\n    dialogConfirm = dialogConfirm && Object.prototype.hasOwnProperty.call(dialogConfirm, 'default') ? dialogConfirm['default'] : dialogConfirm;\n    shortcutRegistry = shortcutRegistry && Object.prototype.hasOwnProperty.call(shortcutRegistry, 'default') ? shortcutRegistry['default'] : shortcutRegistry;\n    globalShortcut = globalShortcut && Object.prototype.hasOwnProperty.call(globalShortcut, 'default') ? globalShortcut['default'] : globalShortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n    var pluginName = 'dialog';\n\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n    var actionPrefix = `tool-${pluginName}-`;\n\n    /**\n     * Some default options for the plugin\n     * @type {Object}\n     */\n    var defaultOptions = {\n      alert: {\n        focus: 'ok'\n      },\n      confirm: {\n        focus: 'ok'\n      }\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    var dialog = pluginFactory({\n      name: pluginName,\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var testRunner = this.getTestRunner();\n        var testOptions = testRunner.getOptions();\n        var pluginConfig = Object.assign({}, defaultOptions, this.getConfig());\n        var pluginShortcuts = (testOptions.shortcuts || {})[pluginName] || {};\n        var alerts = [];\n        var confirms = [];\n        var opened = [];\n        var dialogShortcut = shortcutRegistry($('body'), {\n          propagate: false,\n          prevent: true\n        });\n\n        /**\n         * Closes a dialog with accept\n         * @param {dialog} dialog - The instance of the dialog\n         */\n        function closeAccept(dialog) {\n          // TODO: improve the dialog implementation in order to provide a better API\n          dialog.trigger('okbtn.modal').hide();\n        }\n\n        /**\n         * Closes a dialog with rejection\n         * @param {dialog} dialog - The instance of the dialog\n         */\n        function closeReject(dialog) {\n          dialog.hide();\n        }\n\n        /**\n         * Closes the last opened dialog\n         * @param {Boolean} accept Whether the dialog should be accepted or not\n         * @param {String} [shortcut] The shortcut that caused the action\n         */\n        function closeLast(accept, shortcut) {\n          var handle = opened.length && opened[opened.length - 1];\n          if (handle) {\n            handle.shortcut = shortcut;\n            if (accept) {\n              closeAccept(handle.dialog);\n            } else {\n              closeReject(handle.dialog);\n            }\n          }\n        }\n\n        /**\n         * Add dialog on top of the provided stack\n         * @param {String} namespace - The event namespace that scope the dialog\n         * @param {Array} stack - The dialogs stack on which push the new instance\n         * @param {Function} dialog - The constructor of the dialog\n         * @param {String} message - The message to display\n         * @param {Function} accept - The callback for accept\n         * @param {Function} reject - The callback for reject\n         * @param {Object} options - Dialog options\n         */\n        function addHandle(namespace, stack, dialog, message, accept, reject, options) {\n          var handle = {\n            context: namespace,\n            dialog: dialog(message, doAccept, doReject, options)\n          };\n          function doAccept(e, reason) {\n            if (_.isFunction(accept)) {\n              accept(handle.shortcut || reason);\n            }\n          }\n          function doReject(e, reason) {\n            if (_.isFunction(reject)) {\n              reject(handle.shortcut || reason);\n            }\n          }\n\n          // prevents all registered shortcuts to be triggered\n          // and brings back the dialog shortcuts\n          globalShortcut.disable();\n          dialogShortcut.enable();\n          stack.push(handle);\n          opened.push(handle);\n          handle.dialog.focus(options.focus);\n          handle.dialog.on('closed.modal', function () {\n            removeHandle(stack, handle.dialog);\n            removeHandle(opened, handle.dialog);\n\n            // if all dialogs have been closed allows all registered shortcuts to be triggered\n            // also disables the dialog shortcuts\n            if (!opened.length) {\n              globalShortcut.enable();\n              dialogShortcut.disable();\n            }\n          });\n        }\n\n        /**\n         * Remove a dialog from the provided stack\n         * @param {Array} stack - The dialogs stack from which remove the dialog instance\n         * @param {dialog} dialog - The instance of the dialog\n         */\n        function removeHandle(stack, dialog) {\n          if (dialog) {\n            _.remove(stack, function (handle) {\n              if (handle && dialog === handle.dialog) {\n                return true;\n              }\n            });\n          }\n        }\n\n        /**\n         * Closes all dialogs within the provided stack\n         * @param {String} namespace - The event namespace that scope the dialogs to close\n         * @param {Boolean} accept - Whether (`true`) or not (`false`) to close the dialogs with accept\n         * @param {Array} stack - The dialogs stack in which close the dialogs\n         */\n        function closeDialogs(namespace, accept, stack) {\n          if (stack) {\n            _.forEach(stack, function (handle) {\n              if (handle && (namespace === '@' || namespace === handle.context)) {\n                if (accept) {\n                  closeAccept(handle.dialog);\n                } else {\n                  closeReject(handle.dialog);\n                }\n              }\n            });\n          } else {\n            closeDialogs(namespace, accept, alerts);\n            closeDialogs(namespace, accept, confirms);\n          }\n        }\n\n        // starts with shortcuts disabled, prevents the TAB key to be used to move outside the dialog box\n        dialogShortcut.disable().set('Tab Shift+Tab');\n\n        // handle the plugin's shortcuts\n        if (testOptions.allowShortcuts) {\n          _.forEach(pluginShortcuts, function (command, key) {\n            dialogShortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), function (e, shortcut) {\n              // just fire the action using the event loop\n              testRunner.trigger(actionPrefix + key, shortcut);\n            });\n          });\n        }\n\n        //change plugin state\n        testRunner.before('alert.*', function (e, msg, accept, options) {\n          addHandle(e.namespace, alerts, dialogAlert, msg, accept, accept, _.merge({}, pluginConfig.alert, options));\n        }).before('confirm.*', function (e, msg, accept, reject, options) {\n          addHandle(e.namespace, confirms, dialogConfirm, msg, accept, reject, _.merge({}, pluginConfig.confirm, options));\n        }).before('closedialog.*', function (e, accept) {\n          closeDialogs(e.namespace, accept);\n        }).on(`${actionPrefix}accept`, function (shortcut) {\n          closeLast(true, shortcut);\n        }).on(`${actionPrefix}reject`, function (shortcut) {\n          closeLast(false, shortcut);\n        }).on('destroy', function () {\n          closeDialogs('.@');\n          dialogShortcut.clear();\n          dialogShortcut = null;\n        });\n      }\n    });\n\n    return dialog;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/dialog/exitMessages',['lodash', 'taoTests/runner/plugin'], function (_, pluginFactory) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Creates the testState plugin.\n     * Displays exit message, then leaves the runner once the user has acknowledged\n     */\n    var exitMessages = pluginFactory({\n      name: 'exitMessages',\n      /**\n       * Initializes the plugin (called during runner's init)\n       */\n      init: function init() {\n        // this function is mandatory\n      },\n      /**\n       * Installs the plugin (called when the runner bind the plugin)\n       */\n      install: function install() {\n        var testRunner = this.getTestRunner();\n\n        // intercepts the `leave` event,\n        // then if a message needs to be displayed displays it and waits the user acknowledges it\n        testRunner.before('leave', function leave(e, data) {\n          const dataIsObject = _.isObject(data);\n          if (dataIsObject && data.skipExitMessage) {\n            return;\n          }\n          if (dataIsObject && data.message) {\n            return new Promise(function (resolve) {\n              var context = testRunner.getTestContext();\n\n              // the leave can occurs when the runner is in inconsistent state (i.e. error)\n              // prevent side error with item disabling\n              if (context && context.itemIdentifier) {\n                testRunner.disableItem(context.itemIdentifier);\n              }\n              // wait for the message acknowledge before leaving the runner\n              testRunner.trigger('disablefeedbackalerts').trigger('alert.leave', data.message, function () {\n                testRunner.trigger('enablefeedbackalerts');\n                resolve();\n              });\n            });\n          }\n        });\n      }\n    });\n\n    return exitMessages;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/dialog/itemAlertMessage',['jquery', 'ui/hider', 'taoTests/runner/plugin'], function ($, hider, pluginFactory) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019  (original work) Open Assessment Technologies SA;\n     *\n     * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n     */\n\n    /**\n     * Returns the configured plugin\n     */\n    var itemAlertMessage = pluginFactory({\n      name: 'itemAlertMessage',\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        this.$element = $(this.getContent().dom);\n        this.$element\n        // for GUI actions\n        .on('closed.modal', function () {\n          $(this).modal('destroy');\n        }).on('destroyed.modal', function () {\n          self.$element = null;\n          self.trigger('resume', self);\n        });\n      },\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        var testRunner = this.getTestRunner();\n        var itemRunner = testRunner.itemRunner;\n        var $modalsContainer = this.getContent().$container;\n        if (!$modalsContainer) {\n          $modalsContainer = $('#modalFeedbacks', itemRunner._item.container);\n        }\n        $modalsContainer.append(this.$element);\n        this.$element.modal({\n          startClosed: false,\n          top: 200\n        });\n      },\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        if (this.$element && this.$element.length) {\n          this.$element.modal('close');\n        }\n      }\n    });\n\n    return itemAlertMessage;\n\n});\n\n","define('taoQtiTest/runner/helpers/navigation',['lodash', 'taoQtiTest/runner/helpers/map'], function (_, mapHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * @typedef {Object} navigationHelper\n     */\n    var navigationHelper = {\n      /**\n       * Check whether the test taker is leaving a section\n       *\n       * @param {Object} testContext - the actual test context\n       * @param {String} testContext.itemIdentifier - the id of the current item\n       * @param {String} testContext.sectionId - the id of the current section\n       * @param {Object} testMap - the actual test map\n       * @param {String} direction - the move direction (next, previous or jump)\n       * @param {String} scope - the move scope (item, section, testPart)\n       * @param {Number} [position] - the position in case of jump\n       * @returns {Boolean} true if the action leads to a section leave\n       * @throws {TypeError} if the context or the map are incorrect\n       */\n      isLeavingSection: function isLeavingSection(testContext, testMap, direction, scope, position) {\n        var section;\n        var sectionStats;\n        var nbItems;\n        var item;\n        if (_.isPlainObject(testContext) && _.isPlainObject(testMap) && !_.isEmpty(testContext.sectionId) && !_.isEmpty(testContext.itemIdentifier)) {\n          section = mapHelper.getSection(testMap, testContext.sectionId);\n          sectionStats = mapHelper.getSectionStats(testMap, testContext.sectionId);\n          nbItems = sectionStats && sectionStats.total;\n          item = mapHelper.getItem(testMap, testContext.itemIdentifier);\n          return scope === 'section' || scope === 'testPart' || direction === 'next' && item.positionInSection + 1 === nbItems || direction === 'previous' && item.positionInSection === 0 || direction === 'jump' && position > 0 && (position < section.position || position >= section.position + nbItems);\n        }\n        throw new TypeError('Invalid test context and test map');\n      },\n      /**\n       * Check whether the test taker is leaving a test part\n       *\n       * @param {Object} testContext - the actual test context\n       * @param {String} testContext.itemIdentifier - the id of the current item\n       * @param {String} testContext.sectionId - the id of the current section\n       * @param {String} testContext.testPartId - the id of the current testPart\n       * @param {Object} testMap - the actual test map\n       * @param {String} direction - the move direction (next, previous or jump)\n       * @param {String} scope - the move scope (item, section, testPart)\n       * @param {Number} [position] - the position in case of jump\n       * @returns {Boolean} true if the action leads to a section leave\n       * @throws {TypeError} if the context or the map are incorrect\n       */\n      isLeavingTestPart: function isLeavingTestPart(testContext, testMap, direction, scope, position) {\n        var testPart;\n        var testPartStats;\n        var nbItems;\n        var item;\n        var section;\n        var sectionStats;\n        if (_.isPlainObject(testContext) && _.isPlainObject(testMap) && !_.isEmpty(testContext.testPartId) && !_.isEmpty(testContext.sectionId) && !_.isEmpty(testContext.itemIdentifier)) {\n          testPart = mapHelper.getPart(testMap, testContext.testPartId);\n          testPartStats = mapHelper.getPartStats(testMap, testContext.testPartId);\n          nbItems = testPartStats && testPartStats.total;\n          item = mapHelper.getItem(testMap, testContext.itemIdentifier);\n          if (scope === 'section') {\n            section = mapHelper.getSection(testMap, testContext.sectionId);\n            sectionStats = mapHelper.getSectionStats(testMap, testContext.sectionId);\n          }\n          return scope === 'testPart' || direction === 'next' && scope === 'item' && item.positionInPart + 1 === nbItems || direction === 'next' && scope === 'section' && section.position + sectionStats.total >= nbItems || direction === 'previous' && scope === 'item' && item.positionInPart === 0 || direction === 'previous' && scope === 'section' && section.position === testPart.position || direction === 'jump' && position > 0 && (position < testPart.position || position >= testPart.position + nbItems);\n        }\n        throw new TypeError('Invalid test context and test map');\n      },\n      /**\n       * Check if the given  item is the last of the test\n       * @param {Object} testMap - the test map\n       * @param {String} itemIdentifier - the identifier of the item\n       * @returns {Boolean} true if the item is the last one\n       */\n      isLast: function isLast(testMap, itemIdentifier) {\n        return this.isLastOf(testMap, itemIdentifier, 'test');\n      },\n      /**\n       * Check if the given  item is the first of a test\n       * @param {Object} testMap - the test map\n       * @param {String} itemIdentifier - the identifier of the item\n       * @returns {Boolean} true if the item is the first one\n       */\n      isFirst: function isFirst(testMap, itemIdentifier) {\n        return this.isFirstOf(testMap, itemIdentifier, 'test');\n      },\n      /**\n       * Check if the given  item is the last of a the given scope\n       * @param {Object} testMap - the test map\n       * @param {String} itemIdentifier - the identifier of the item\n       * @param {String} [scope = 'test'] - the target scope\n       * @returns {Boolean} true if the item is the last one\n       */\n      isLastOf: function isLastOf(testMap, itemIdentifier, scope) {\n        var item;\n        var stats;\n        if (!_.isPlainObject(testMap)) {\n          throw new TypeError('Invalid test map');\n        }\n        if (_.isEmpty(itemIdentifier)) {\n          throw new TypeError('Invalid item identifier');\n        }\n        scope = scope || 'test';\n        item = mapHelper.getItem(testMap, itemIdentifier);\n        stats = mapHelper.getScopeStats(testMap, item.position, scope);\n        if (stats && _.isNumber(stats.total)) {\n          if (scope === 'test') {\n            return item.position + 1 === stats.total;\n          }\n          if (scope === 'section' || scope === 'assessmentSection' || scope === 'testSection') {\n            return item.positionInSection + 1 === stats.total;\n          }\n          if (scope === 'part' || scope === 'testPart') {\n            return item.positionInPart + 1 === stats.total;\n          }\n        }\n        return false;\n      },\n      /**\n       * Check if the given  item is the first of a the given scope\n       * @param {Object} testMap - the test map\n       * @param {String} itemIdentifier - the identifier of the item\n       * @param {String} [scope = 'test'] - the target scope\n       * @returns {Boolean} true if the item is the first one\n       */\n      isFirstOf: function isFirstOf(testMap, itemIdentifier, scope) {\n        var item;\n        if (!_.isPlainObject(testMap)) {\n          throw new TypeError('Invalid test map');\n        }\n        if (_.isEmpty(itemIdentifier)) {\n          throw new TypeError('Invalid item identifier');\n        }\n        scope = scope || 'test';\n        item = mapHelper.getItem(testMap, itemIdentifier);\n        if (scope === 'test') {\n          return item.position === 0;\n        }\n        if (scope === 'section' || scope === 'assessmentSection' || scope === 'testSection') {\n          return item.positionInSection === 0;\n        }\n        if (scope === 'part' || scope === 'testPart') {\n          return item.positionInPart === 0;\n        }\n        return false;\n      },\n      /**\n       * Gets the map descriptors of the sibling items\n       * @param {Object} testMap\n       * @param {Number|String} itemPosition - (could be also the item id)\n       * @param {String} [direction='both'] - previous/next/both\n       * @param {Number} [size=3] - will be 2xsize if direction is both\n       * @returns {Object[]} the collections of items\n       */\n      getSiblingItems: function getSiblingItems(testMap, itemPosition, direction, size) {\n        var itemId = mapHelper.getItemIdentifier(testMap, itemPosition);\n        var previous = null;\n        var siblings = [];\n        var directions;\n        var itemChain = _.reduce(testMap && testMap.jumps, function (map, jump) {\n          var ref = jump.identifier;\n          if (previous) {\n            map[previous].next = ref;\n          }\n          map[ref] = {\n            identifier: ref,\n            previous: previous,\n            next: null\n          };\n          previous = ref;\n          return map;\n        }, {});\n        size = _.isFinite(size) ? parseInt(size, 10) : 3;\n        if (!direction || direction === 'both') {\n          directions = ['previous', 'next'];\n        } else {\n          directions = [direction];\n        }\n        _.forEach(directions, function walkDirection(link) {\n          var id = itemId;\n          _.times(size, function getNeighbor() {\n            id = itemChain[id] && itemChain[id][link];\n            if (id) {\n              siblings.push(mapHelper.getItem(testMap, id));\n            } else {\n              return false;\n            }\n          });\n        });\n        return siblings;\n      },\n      /**\n       * Gets the map descriptor of the next item\n       * @param {Object} testMap\n       * @param {Number|String} itemPosition - (could be also the item id)\n       * @returns {Object}\n       */\n      getNextItem: function getNextItem(testMap, itemPosition) {\n        var siblings = navigationHelper.getSiblingItems(testMap, itemPosition, 'next', 1);\n        if (siblings.length) {\n          return siblings[0];\n        }\n        return null;\n      },\n      /**\n       * Gets the map descriptor of the previous item\n       * @param {Object} testMap\n       * @param {Number|String} itemPosition - (could be also the item id)\n       * @returns {Object}\n       */\n      getPreviousItem: function getPreviousItem(testMap, itemPosition) {\n        var siblings = navigationHelper.getSiblingItems(testMap, itemPosition, 'previous', 1);\n        if (siblings.length) {\n          return siblings[0];\n        }\n        return null;\n      },\n      /**\n       * Checks if an action will move forward.\n       * @param {String} action - the name of the action that will be performed\n       * @param {Object} [params] - some optional parameters that apply to the action\n       * @returns {Boolean}\n       */\n      isMovingToNextItem: function isMovingToNextItem(action, params) {\n        params = params || {};\n        return action === 'timeout' || action === 'skip' || action === 'move' && params.direction === 'next' && params.scope === 'item';\n      },\n      /**\n       * Checks if an action will move backward.\n       * @param {String} action - the name of the action that will be performed\n       * @param {Object} [params] - some optional parameters that apply to the action\n       * @returns {Boolean}\n       */\n      isMovingToPreviousItem: function isMovingToPreviousItem(action, params) {\n        params = params || {};\n        return action === 'move' && params.direction === 'previous' && params.scope === 'item';\n      },\n      /**\n       * Checks if an action will jump on another item.\n       * @param {String} action - the name of the action that will be performed\n       * @param {Object} [params] - some optional parameters that apply to the action\n       * @returns {Boolean}\n       */\n      isJumpingToItem: function isJumpingToItem(action, params) {\n        params = params || {};\n        return action === 'move' && params.direction === 'jump' && params.scope === 'item';\n      }\n    };\n\n    return navigationHelper;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/dialog/itemInlineMessage',['jquery', 'i18n', 'ui/hider', 'taoTests/runner/plugin', 'handlebars', 'lib/handlebars/helpers', 'taoQtiTest/runner/helpers/navigation'], function ($$1, __, hider, pluginFactory, Handlebars, Helpers0, navigationHelper) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    navigationHelper = navigationHelper && Object.prototype.hasOwnProperty.call(navigationHelper, 'default') ? navigationHelper['default'] : navigationHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \" \";\n      if (helper = helpers.className) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.className); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n        aria-\"\n        + escapeExpression(((stack1 = (data == null || data === false ? data : data.key)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"=\\\"\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\"\\n    \";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span class=\\\"icon icon-\";\n      if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"></span>\";\n      return buffer;\n      }\n    function program6(depth0,data) {\n      \n      \n      return \" no-label\";\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span class=\\\"text\\\">\";\n      if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\";\n      return buffer;\n      }\n\n      buffer += \"<li\\n    data-control=\\\"\";\n      if (helper = helpers.control) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.control); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    class=\\\"small btn-info action\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.className), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n    title=\\\"\";\n      if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    role=\\\"button\\\"\\n    \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.aria), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\" onclick=\\\"return false\\\" aria-hidden=\\\"true\\\" >\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.icon), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </a>\\n</li>\\n\";\n      return buffer;\n      });\n    function buttonTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016  (original work) Open Assessment Technologies SA;\n     *\n     * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n     */\n\n    /**\n     * The display of the next button\n     */\n    var buttonData = {\n      next: {\n        control: 'move-forward',\n        title: __('Submit and go to the next item'),\n        icon: 'forward',\n        text: __('OK')\n      },\n      end: {\n        control: 'move-end',\n        title: __('Submit and go to the end of the test'),\n        icon: 'fast-forward',\n        text: __('OK & End test')\n      }\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    var itemInlineMessage = pluginFactory({\n      name: 'itemInlineMessage',\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n\n        /**\n         * Create the button based on the current context\n         * @returns {*|jQuery|HTMLElement} the button\n         */\n        var createOkButton = function createElement() {\n          const testContext = testRunner.getTestContext();\n          const testMap = testRunner.getTestMap();\n          const dataType = navigationHelper.isLast(testMap, testContext.itemIdentifier) ? 'end' : 'next';\n          const $btn = $$1(buttonTpl(buttonData[dataType]));\n          $btn.addClass('modalFeedback-button');\n\n          //plugin behavior\n          $btn.on('click', function (e) {\n            e.preventDefault();\n            self.disable();\n            if ($$1(this).data('control') === 'move-end') {\n              self.trigger('end');\n            }\n            $btn.remove();\n            self.$element.remove();\n            self.trigger('resume', self);\n          });\n          return $btn;\n        };\n        this.$button = createOkButton();\n        this.$element = $$1(this.getContent().dom);\n      },\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        var $navigationContainer = this.getAreaBroker().getNavigationArea();\n        var testRunner = this.getTestRunner();\n        var itemRunner = testRunner.itemRunner;\n        var $inlineContainer = this.getContent().$container;\n        if (!$inlineContainer && itemRunner._item.container) {\n          $inlineContainer = $$1('.qti-itemBody', itemRunner._item.container);\n        }\n        $inlineContainer.append(this.$element);\n\n        // hide all navigation buttons, create new instead of\n        if (!$$1('.modalFeedback-button', $navigationContainer).length) {\n          $navigationContainer.append(this.$button);\n        }\n      },\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.$button.removeProp('disabled').removeClass('disabled');\n      },\n      disable: function disable() {\n        this.$button.prop('disabled', true).addClass('disabled');\n      },\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        this.$button.click();\n      }\n    });\n\n    return itemInlineMessage;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/feedback/feedback',['i18n', 'taoTests/runner/plugin', 'ui/feedback'], function (__, pluginFactory, feedback$1) { 'use strict';\n\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    feedback$1 = feedback$1 && Object.prototype.hasOwnProperty.call(feedback$1, 'default') ? feedback$1['default'] : feedback$1;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Returns the configured plugin\n     */\n    var feedback = pluginFactory({\n      name: 'feedback',\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n\n        //keep a ref of the feedbacks\n        var currentFeedback;\n        var testRunner = this.getTestRunner();\n\n        /**\n         * Close the current feedback\n         */\n        var closeCurrent = function closeCurrent() {\n          if (currentFeedback) {\n            currentFeedback.close();\n          }\n        };\n        this.setState('enabled', true);\n\n        //change plugin state\n        testRunner.on('error', function (err) {\n          var message = err;\n          var type = 'error';\n          if (self.getState('enabled')) {\n            if ('object' === typeof err) {\n              message = err.message;\n              type = err.type;\n            }\n            if (!message) {\n              switch (type) {\n                case 'TestState':\n                  message = __('The test has been closed/suspended!');\n                  break;\n                case 'FileNotFound':\n                  message = __('File not found!');\n                  break;\n                default:\n                  message = __('An error occurred!');\n              }\n            }\n            currentFeedback = feedback$1().error(message);\n          }\n        }).on('danger', function (message) {\n          if (self.getState('enabled')) {\n            currentFeedback = feedback$1().danger(message);\n          }\n        }).on('warning', function (message) {\n          if (self.getState('enabled')) {\n            currentFeedback = feedback$1().warning(message);\n          }\n        }).on('info', function (message) {\n          if (self.getState('enabled')) {\n            currentFeedback = feedback$1().info(message);\n          }\n        }).on('alert.* confirm.* unloaditem', closeCurrent).on('disablefeedbackalerts', function () {\n          closeCurrent();\n          self.setState('enabled', false);\n        }).on('enablefeedbackalerts', function () {\n          self.setState('enabled', true);\n        });\n      }\n    });\n\n    return feedback;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/itemScrolling/itemScrolling',['jquery', 'util/typeCaster', 'taoTests/runner/plugin', 'taoQtiItem/qtiCommonRenderer/helpers/itemProperties'], function ($, typeCaster, pluginFactory, itemProperties) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    typeCaster = typeCaster && Object.prototype.hasOwnProperty.call(typeCaster, 'default') ? typeCaster['default'] : typeCaster;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA;\n     */\n\n    /**\n     * @fires 'resized-itembody' when item body is resized\n     * @param {Object} testRunner\n     */\n    function connectItemBodyResizeObserver(testRunner) {\n      const resizeObserver = new ResizeObserver(() => {\n        testRunner.trigger('resized-itembody');\n      });\n      testRunner.on('renderitem', function () {\n        const $itemBody = $('.qti-itemBody');\n        resizeObserver.observe($itemBody.get(0));\n      }).on('unloaditem', function () {\n        resizeObserver.disconnect();\n      }).on('destroy', function () {\n        resizeObserver.disconnect();\n      });\n    }\n\n    /**\n     * Creates the loading bar plugin.\n     * Displays a loading bar when a blocking task is running\n     */\n    var itemScrolling = pluginFactory({\n      name: 'itemScrolling',\n      /**\n       * Initializes the plugin (called during runner's init)\n       */\n      init: function init() {\n        const testRunner = this.getTestRunner();\n        const $contentArea = testRunner.getAreaBroker().getContentArea();\n        const gridRowBlockEndMargin = 12,\n          qtiItemPadding = 30 * 2;\n        connectItemBodyResizeObserver(testRunner);\n        testRunner.on('resized-itembody', function () {\n          adaptItemBlockSize();\n        });\n        function adaptItemBlockSize() {\n          const isVerticalWritingMode = itemProperties.getIsItemWritingModeVerticalRl();\n          const $itemContainer = $contentArea.find('[data-scrolling=\"true\"]');\n          const contentBlockSize = getItemRunnerBlockSize(isVerticalWritingMode) - getExtraGridRowBlockSize(isVerticalWritingMode) - getSpaceAroundQtiContent(isVerticalWritingMode) - gridRowBlockEndMargin - qtiItemPadding;\n          $itemContainer.each(function () {\n            const $item = $(this);\n            const isScrollable = typeCaster.strToBool($item.attr('data-scrolling') || 'false');\n            const selectedBlockSize = parseFloat($item.attr('data-scrolling-height')) || 100;\n            const containerParent = $item.parent().closest('[data-scrolling=\"true\"]');\n            const containerBlockSize = isVerticalWritingMode ? containerParent.width() : containerParent.height();\n            const overflowCssProp = isVerticalWritingMode ? 'overflow-x' : 'overflow-y';\n            if ($item.length && isScrollable) {\n              $item.data('scrollable', true);\n              $item.css({\n                [overflowCssProp]: 'scroll'\n              });\n              if (containerParent.length > 0) {\n                $item.css('max-block-size', `${containerBlockSize * (selectedBlockSize * 0.01)}px`);\n              } else {\n                $item.css('max-block-size', `${contentBlockSize * (selectedBlockSize * 0.01)}px`);\n              }\n            }\n          });\n        }\n        // depending on the context (item preview, new/old test runner...) available height is computed differently\n        function getItemRunnerBlockSize(isVerticalWritingMode) {\n          var $testRunnerSections = $('.test-runner-sections');\n\n          // exists only in the new test runner\n          if ($testRunnerSections.length) {\n            const rect = $testRunnerSections.get(0).getBoundingClientRect();\n            return isVerticalWritingMode ? rect.width : rect.height;\n          }\n          // otherwise, we assume that we are in an iframe with all space available (= item preview, old test runner)\n          return isVerticalWritingMode ? $(window).width() : $(window).height();\n        }\n\n        // extra grid row are there in case of a vertical layout (item on top/bottom of the question)\n        function getExtraGridRowBlockSize(isVerticalWritingMode) {\n          var $gridRows = $('.qti-itemBody > .grid-row'),\n            extraBlockSize = 0;\n          $gridRows.each(function () {\n            var $gridRow = $(this),\n              $itemContainer = $gridRow.find('[data-scrolling=\"true\"]');\n            if (!$itemContainer.length) {\n              extraBlockSize += isVerticalWritingMode ? $gridRow.outerWidth(true) : $gridRow.outerHeight(true);\n            }\n          });\n          return extraBlockSize;\n        }\n\n        // most of the time this will be rubrick's block height in the new test runner;\n        // if vertical-writing, can also be review-panel on the left\n        function getSpaceAroundQtiContent(isVerticalWritingMode) {\n          var $testRunnerSections = $('.test-runner-sections'),\n            $qtiContent = $('#qti-content');\n          if ($testRunnerSections.length && $qtiContent.length) {\n            const qtiContentRect = $qtiContent.get(0).getBoundingClientRect();\n            const testRunnerSectionsRect = $testRunnerSections.get(0).getBoundingClientRect();\n            if (isVerticalWritingMode) {\n              return testRunnerSectionsRect.width - qtiContentRect.width;\n            }\n            return qtiContentRect.top - testRunnerSectionsRect.top;\n          }\n          return 0;\n        }\n      }\n    });\n\n    return itemScrolling;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/loading/loading',['layout/loading-bar', 'taoTests/runner/plugin'], function (loadingBar, pluginFactory) { 'use strict';\n\n    loadingBar = loadingBar && Object.prototype.hasOwnProperty.call(loadingBar, 'default') ? loadingBar['default'] : loadingBar;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Creates the loading bar plugin.\n     * Displays a loading bar when a blocking task is running\n     */\n    var loading = pluginFactory({\n      name: 'loading',\n      /**\n       * Initializes the plugin (called during runner's init)\n       */\n      init: function init() {\n        var testRunner = this.getTestRunner();\n        testRunner.on('unloaditem', function () {\n          loadingBar.start();\n        }).on('renderitem', function () {\n          loadingBar.stop();\n        });\n      }\n    });\n\n    return loading;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/modalFeedback/modalFeedback',['jquery', 'lodash', 'module', 'taoTests/runner/plugin', 'taoQtiTest/runner/plugins/content/dialog/itemInlineMessage', 'taoQtiTest/runner/plugins/content/dialog/itemAlertMessage', 'ui/autoscroll'], function ($, _, module, pluginFactory, inlineMessage, alertMessage, autoscroll) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    inlineMessage = inlineMessage && Object.prototype.hasOwnProperty.call(inlineMessage, 'default') ? inlineMessage['default'] : inlineMessage;\n    alertMessage = alertMessage && Object.prototype.hasOwnProperty.call(alertMessage, 'default') ? alertMessage['default'] : alertMessage;\n    autoscroll = autoscroll && Object.prototype.hasOwnProperty.call(autoscroll, 'default') ? autoscroll['default'] : autoscroll;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016  (original work) Open Assessment Technologies SA;\n     *\n     * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n     */\n\n    /**\n     * Modal or inline type of the messages\n     */\n    var inlineMode;\n\n    /**\n     * Form of the feedback\n     * by default dialog (modal) form\n     */\n    var messagePlugin;\n\n    /**\n     * All feedback messages\n     */\n    var renderedFeedbacks;\n\n    /**\n     * modalFeedback was resolved and all components were destroyed\n     */\n    var isDestroyed;\n\n    /**\n     * Method which should be halted after modalFeedbacks confirmation action\n     */\n    var nextStep;\n    function destroyFeedback(feedback) {\n      var removed = false;\n      _.remove(renderedFeedbacks, function (storedFeedback) {\n        var found = storedFeedback === feedback;\n        if (found) {\n          removed = true;\n        }\n        return found;\n      });\n      if (removed) {\n        feedback.destroy();\n        if (!renderedFeedbacks.length) {\n          nextStep();\n        }\n      }\n    }\n    function defineMode(inline) {\n      inlineMode = inline;\n      messagePlugin = inlineMode ? inlineMessage : alertMessage;\n    }\n\n    /**\n     * Returns the configured plugin\n     */\n    var modalFeedback = pluginFactory({\n      name: 'QtiModalFeedback',\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        nextStep = function () {};\n        defineMode(!!module.config().inlineModalFeedback);\n      },\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        var createMessages = function createMessages(renderingQueue, inline) {\n          var bInlineMode = inlineMode;\n          isDestroyed = false;\n          renderedFeedbacks = [];\n          if (_.isBoolean(inline)) {\n            defineMode(inline);\n          }\n          if (renderingQueue.length) {\n            _.forEach(renderingQueue, function (renderingToken) {\n              var feedback = messagePlugin(testRunner, testRunner.getAreaBroker());\n              feedback.init({\n                dom: renderingToken.feedback.render({\n                  inline: inlineMode\n                }),\n                // for alerts will be used #modalMessages container\n                $container: inlineMode ? renderingToken.$container : null\n              });\n              feedback.render();\n              renderedFeedbacks.push(feedback);\n            });\n\n            // auto scroll to the first feedback, only for the \"inline\" mode\n            if (inlineMode && renderedFeedbacks) {\n              autoscroll($('.qti-modalFeedback', testRunner.getAreaBroker().getContentArea()).first(), testRunner.getAreaBroker().getContentArea().parents('.content-wrapper'));\n            }\n          } else {\n            nextStep();\n          }\n\n          // restore global feedback mode\n          defineMode(bInlineMode);\n        };\n        if (inlineMode) {\n          testRunner.off('plugin-resume.itemInlineMessage').on('plugin-resume.itemInlineMessage', function () {\n            self.destroy();\n          });\n        } else {\n          testRunner.off('plugin-resume.itemAlertMessage').on('plugin-resume.itemAlertMessage', function (feedback) {\n            destroyFeedback(feedback);\n          });\n        }\n        testRunner.on('modalFeedbacks', function (renderingQueue, done, inline) {\n          nextStep = done;\n          createMessages(renderingQueue, inline);\n        });\n      },\n      /**\n       * Called during the runner's destroy phase\n       * allow to run that function only once\n       */\n      destroy: function destroy() {\n        var tFeedbacks, i;\n        if (!isDestroyed) {\n          isDestroyed = true;\n          if (!renderedFeedbacks) {\n            nextStep();\n          } else {\n            tFeedbacks = renderedFeedbacks.slice(0);\n            for (i in tFeedbacks) {\n              destroyFeedback(tFeedbacks[i]);\n            }\n          }\n        }\n      }\n    });\n\n    return modalFeedback;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/overlay/overlay',['jquery', 'taoTests/runner/plugin'], function ($, pluginFactory) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Returns the configured plugin\n     */\n    var overlay = pluginFactory({\n      name: 'overlay',\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        this.$element = $('<div />');\n        this.$element.on('click mousedown mouseup touchstart touchend keyup keydow keypress scroll drop', function (e) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n        });\n        const shield = function shield() {\n          self.enable();\n        };\n        const unshield = function unshield() {\n          self.disable();\n        };\n\n        //change plugin state\n        testRunner.on('disableitem', shield).on('enableitem unloaditem modalFeedbacks', unshield);\n      },\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        var $contentArea = this.getTestRunner().getAreaBroker().getContentArea();\n        $contentArea.after(this.$element);\n      },\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        this.$element.remove();\n      },\n      /**\n       * Enable the overlay\n       */\n      enable() {\n        const overlayConfig = this.getConfig();\n        this.$element.addClass('overlay');\n        if (overlayConfig.full) {\n          this.$element.addClass('overlay-full');\n        }\n      },\n      /**\n       * Disable the overlay\n       */\n      disable: function disable() {\n        this.$element.removeClass('overlay overlay-full');\n      },\n      /**\n       * Show the overlay\n       */\n      show: function show() {\n        this.enable();\n      },\n      /**\n       * Hide the overlay\n       */\n      hide: function hide() {\n        this.disable();\n      }\n    });\n\n    return overlay;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/responsiveness/collapser',['lodash', 'jquery', 'taoTests/runner/plugin'], function (_, $, pluginFactory) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Event namespace\n     * @type {String}\n     */\n    var ns = '.collapser';\n\n    /**\n     * Name of the CSS class used to collapse the buttons\n     * @type {String}\n     */\n    var noLabelCls = 'tool-label-collapsed';\n\n    /**\n     * Name of the CSS class used to collapse the buttons and allow to expand on mouse over\n     * @type {String}\n     */\n    var noLabelHoverCls = 'tool-label-collapsed-hover';\n\n    /**\n     * Name of the  CSS class used to hide the label of the button independently of responsiveness\n     * @type {string}\n     */\n    var labelHiddenCls = 'no-tool-label';\n\n    /**\n     * Name of the  CSS class for separators\n     * @type {string}\n     */\n    var separatorCls = 'separator';\n\n    /**\n     * Default plugin options\n     * @type {Object}\n     */\n    var defaults = {\n      collapseTools: true,\n      // collapse the tools buttons\n      collapseNavigation: false,\n      // collapse the navigation buttons\n      collapseInOrder: false,\n      // collapse any button in the given order\n      hover: false,\n      // expand when the mouse is over a button,\n\n      /**\n       * Allow to set manually which buttons should collapse and in which order.\n       * This can be set by triggering the \"collapser-set-order\" event on the testRunner.\n       * Given as an array of jQuery selectors: first index will be the first to be collapsed, and so on.\n       * If no selector is given for a button, then this one will never collapse.\n       * ex:\n       * var collapseOrder = [\n       *      '[data-control=\"highlight-clear\"],[data-control=\"highlight-trigger\"]',  // those will collapse first...\n       *      '[data-control=\"hide-review\"]',                                         // this one second...\n       *      '[data-control=\"set-item-flag\"]',                                       // third...\n       *      ...                                                                     // ...\n       * ];\n       * @type {String[]}\n       */\n      collapseOrder: []\n    };\n    var $window = $(window);\n\n    /**\n     * Creates the responsiveness collapser plugin.\n     * Reduce the size of the action bar tools when the available space is below the needed one.\n     */\n    var collapser = pluginFactory({\n      name: 'collapser',\n      /**\n       * Installs the plugin (called when the runner bind the plugin)\n       */\n      init: function init() {\n        const testRunner = this.getTestRunner();\n        const config = Object.assign({}, defaults, this.getConfig());\n        const collapseCls = config.hover ? noLabelHoverCls : noLabelCls;\n        var areaBroker = testRunner.getAreaBroker();\n        var $actionsBar = areaBroker.getArea('actionsBar'),\n          $toolbox = areaBroker.getToolboxArea(),\n          $navigation = areaBroker.getNavigationArea();\n        var allCollapsibles, availableWidth, previousAvailableWidth;\n\n        /**\n         * Get a reference of all collapsibles\n         */\n        function buildCollapsiblesList() {\n          // use the given order to build the collapsibles list or generate on in natural order\n          if (config.collapseInOrder && config.collapseOrder.length) {\n            allCollapsibles = getCollapsiblesFromConfig();\n          }\n          // get values from DOM, grouped by prefix\n          else if (config.collapseInOrder) {\n            allCollapsibles = getSortedCollapsiblesFromDom();\n          }\n          // get all in one chunk\n          else {\n            allCollapsibles = getUnsortedCollapsiblesFromDom();\n          }\n        }\n\n        /**\n         * @param {jQuery} $element\n         * @returns {number} Size difference, in pixels, between collapsed and expanded state of $element\n         */\n        function getExtraWidth($element) {\n          var expandedWidth, collapsedWidth;\n          $element.removeClass(collapseCls);\n          expandedWidth = $element.outerWidth(true);\n          $element.addClass(collapseCls);\n          collapsedWidth = $element.outerWidth(true);\n          $element.removeClass(collapseCls);\n          return expandedWidth - collapsedWidth;\n        }\n\n        /**\n         * Expand or collapse elements\n         */\n        function toggleCollapsibles() {\n          availableWidth = getAvailableWidth();\n          availableWidth < previousAvailableWidth ? collapseInOrder() : expandInOrder();\n          previousAvailableWidth = availableWidth;\n        }\n        function collapseInOrder() {\n          var collapsiblesCopy = _.clone(allCollapsibles),\n            toCollapse;\n          while (collapseNeeded() && collapsiblesCopy.length) {\n            toCollapse = collapsiblesCopy.shift();\n            toCollapse.$elements.addClass(collapseCls);\n          }\n        }\n        function collapseNeeded() {\n          return getToolbarWidth() > getAvailableWidth();\n        }\n        function expandInOrder() {\n          _.forEachRight(allCollapsibles, function (toExpand) {\n            if (toExpand.$elements.hasClass(collapseCls)) {\n              if (expandPossible(toExpand.extraWidth)) {\n                toExpand.$elements.removeClass(collapseCls);\n              } else {\n                return false;\n              }\n            }\n          });\n        }\n        function expandPossible(extraWidth) {\n          return getToolbarWidth() + extraWidth < getAvailableWidth();\n        }\n        function getAvailableWidth() {\n          // Scrollbars are commonly between ~12px and ~18px in width. Subtracting 20px from the available width\n          // makes sure that scrollbars are always taken in account. The worst case scenario is that the buttons\n          // start to collapse, although they would still have had 20px available.\n          return $actionsBar.width() - 20;\n        }\n        function getToolbarWidth() {\n          return $toolbox.outerWidth(true) + $navigation.outerWidth(true);\n        }\n\n        /**\n         * Parse DOM for controls that can be collapsed\n         * @returns {*|jQuery|HTMLElement}\n         */\n        function getControlsFromDom() {\n          var $controls = $(),\n            selector = '>ul>[data-control]';\n          if (config.collapseTools) {\n            $controls = $controls.add($toolbox.find(selector).not(`.${labelHiddenCls}`).not(`.${separatorCls}`));\n          }\n          if (config.collapseNavigation) {\n            $controls = $controls.add($navigation.find(selector).not(`.${labelHiddenCls}`).not(`.${separatorCls}`));\n          }\n          return $controls;\n        }\n\n        /**\n         * Get allCollapsibles based on configuration\n         *\n         * @returns {Array}\n         */\n        function getCollapsiblesFromConfig() {\n          return _.compact(config.collapseOrder.map(function (selector) {\n            // some buttons are collapsed by configuration, some other are only separators: we should leave them alone\n            var $elements = $(selector).not(`.${labelHiddenCls}`).not(`.${separatorCls}`);\n            var extraWidth = 0;\n            if ($elements.length) {\n              $elements.each(function () {\n                extraWidth += getExtraWidth($(this));\n              });\n              return {\n                $elements: $elements,\n                extraWidth: extraWidth\n              };\n            }\n            return false;\n          }));\n        }\n\n        /**\n         * Get allCollapsibles based on DOM\n         * Build the collapse order from the left to the right, related elements are grouped.\n         *\n         * @returns {Array}\n         */\n        function getSortedCollapsiblesFromDom() {\n          var $controlElements = getControlsFromDom(),\n            _allCollapsibles = [],\n            order = {};\n\n          // group items by prefix\n          // eg. zoomIn and zoomOut -> zoom\n          $controlElements.each(function () {\n            var ctrl = this.dataset.control,\n              // re makes group `foo` from `foo-bar`, `fooBar` and `foo_bar`\n              // if we do not have a prefix use the control name as key to ensure uniqueness\n              key = ctrl.substring(0, ctrl.search(/[A-Z-_]/)) || ctrl;\n            order[key] = order[key] || $();\n            order[key] = order[key].add($(this));\n          });\n\n          // move items to allCollapsibles\n          _.forOwn(order, function ($elements) {\n            var extraWidth = 0;\n            $elements.each(function () {\n              extraWidth += getExtraWidth($(this));\n            });\n            _allCollapsibles.push({\n              $elements: $elements,\n              extraWidth: extraWidth\n            });\n          });\n          return _.compact(_allCollapsibles);\n        }\n\n        /**\n         * Get allCollapsibles based on DOM, all buttons will be collapsed at once\n         *\n         * @returns {Array}\n         */\n        function getUnsortedCollapsiblesFromDom() {\n          var $elements = getControlsFromDom(),\n            _allCollapsibles = [],\n            extraWidth = 0;\n          $elements.each(function () {\n            extraWidth += getExtraWidth($(this));\n          });\n          _allCollapsibles.push({\n            $elements: $elements,\n            extraWidth: extraWidth\n          });\n          return _.compact(_allCollapsibles);\n        }\n        $window.on(`resize${ns}`, _.throttle(function () {\n          testRunner.trigger('collapseTools');\n        }, 40));\n        testRunner.after('renderitem loaditem', function () {\n          previousAvailableWidth = Infinity;\n          buildCollapsiblesList();\n          testRunner.trigger('collapseTools');\n        }).on(`collapseTools${ns}`, function () {\n          toggleCollapsibles();\n        });\n      },\n      destroy: function destroy() {\n        $window.off(ns);\n      }\n    });\n\n    return collapser;\n\n});\n\n","define('taoQtiTest/runner/plugins/content/rubricBlock/rubricBlock',['jquery', 'ui/hider', 'taoTests/runner/plugin', 'handlebars', 'lib/handlebars/helpers'], function ($$1, hider, pluginFactory, Handlebars, Helpers0) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n      return \"<div id=\\\"qti-rubrics\\\"></div>\\n\";\n      });\n    function containerTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Ensure the <a> links opens to blank pages\n     * @param {jQueryElement} $container - lookup scope\n     */\n    var blankifyLinks = function blankifyLinks($container) {\n      $$1('a', $container).attr('target', '_blank');\n    };\n\n    /**\n     * Apply mathjax\n     */\n    var mathify = function mathify($container) {\n      return new Promise(function (resolve) {\n        if ($$1('math', $container).length > 0) {\n          //load mathjax only if necessary\n          require(['mathJax'], function (MathJax) {\n            if (MathJax) {\n              MathJax.Hub.Queue(['Typeset', MathJax.Hub], $container[0]);\n              MathJax.Hub.Queue(resolve);\n            } else {\n              resolve();\n            }\n          }, resolve);\n        } else {\n          resolve();\n        }\n      });\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    var rubricBlock = pluginFactory({\n      name: 'rubricBlock',\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        this.$element = $$1(containerTpl());\n        this.hide();\n\n        //change plugin state\n        testRunner.on('ready', function () {\n          self.hide();\n        }).on('loaditem', function () {\n          var context = testRunner.getTestContext();\n          if (context.rubrics) {\n            self.$element.html(context.rubrics);\n            blankifyLinks(self.$element);\n            mathify(self.$element).then(function () {\n              // notify that the rubric blocks are loaded\n              testRunner.trigger('rubricblock');\n            });\n          }\n        }).on('renderitem', function () {\n          self.show();\n        }).on('unloaditem', function () {\n          self.hide();\n          self.$element.empty();\n        });\n      },\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        //attach the element before the content area\n        var $container = this.getAreaBroker().getContentArea();\n        $container.before(this.$element);\n      },\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        this.$element.remove();\n      },\n      /**\n       * Enable the container\n       */\n      enable: function enable() {\n        this.$element.removeProp('disabled').removeClass('disabled');\n      },\n      /**\n       * Disable the container\n       */\n      disable: function disable() {\n        this.$element.prop('disabled', true).addClass('disabled');\n      },\n      /**\n       * Show the container\n       */\n      show: function show() {\n        hider.show(this.$element);\n      },\n      /**\n       * Hide the container\n       */\n      hide: function hide() {\n        hider.hide(this.$element);\n      }\n    });\n\n    return rubricBlock;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/connectivity/connectivity',['jquery', 'lodash', 'i18n', 'core/polling', 'ui/waitingDialog/waitingDialog', 'taoTests/runner/plugin', 'handlebars', 'lib/handlebars/helpers', 'util/namespace'], function ($$1, _, __, pollingFactory, waitingDialog, pluginFactory, Handlebars, Helpers0, namespaceHelper) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pollingFactory = pollingFactory && Object.prototype.hasOwnProperty.call(pollingFactory, 'default') ? pollingFactory['default'] : pollingFactory;\n    waitingDialog = waitingDialog && Object.prototype.hasOwnProperty.call(waitingDialog, 'default') ? waitingDialog['default'] : waitingDialog;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\n    function program1(depth0,data) {\n      \n      \n      return \" with-message\";\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", helper, options;\n      buffer += \"<span class=\\\"message-connect\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Online\", options) : helperMissing.call(depth0, \"__\", \"Online\", options)))\n        + \"</span>\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", helper, options;\n      buffer += \"<span class=\\\"message-disconnected\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Offline\", options) : helperMissing.call(depth0, \"__\", \"Offline\", options)))\n        + \"</span>\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"connectivity-box \";\n      if (helper = helpers.state) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.state); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.message), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.message), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"<span data-control=\\\"connectivity-connected\\\" class=\\\"qti-controls icon-connect\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Connected to server\", options) : helperMissing.call(depth0, \"__\", \"Connected to server\", options)))\n        + \"\\\"></span>\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.message), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"<span data-control=\\\"connectivity-disconnected\\\" class=\\\"qti-controls icon-disconnect\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Disconnected from server\", options) : helperMissing.call(depth0, \"__\", \"Disconnected from server\", options)))\n        + \"\\\"></span>\\n</div>\\n\";\n      return buffer;\n      });\n    function connectivityTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2021 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The plugin default configuration\n     * @type {Object}\n     * @property {Number} checkInterval - when offline, interval to check if we're back online\n     * @property {Boolean} indicator - do we display the indicator in the test UI\n     * @property {Boolean} message - do we display the message in the test UI\n     */\n    var defaultConfig = {\n      checkInterval: 30 * 1000,\n      indicator: true,\n      message: false\n    };\n\n    /**\n     * Creates the connectivity plugin.\n     * Detects connectivity issues\n     */\n    var connectivity = pluginFactory({\n      name: 'connectivity',\n      /**\n       * Initializes the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        var proxy = testRunner.getProxy();\n        var config = Object.assign({}, defaultConfig, this.getConfig());\n\n        //Displays a connectivity indicator\n        if (config && config.indicator) {\n          //create the indicator\n          this.$element = $$1(connectivityTpl({\n            state: proxy.isOnline() ? 'connected' : 'disconnected',\n            message: config.message\n          }));\n          testRunner.on('disconnect', function () {\n            self.$element.removeClass('connected').addClass('disconnected');\n          }).on('reconnect', function () {\n            self.$element.removeClass('disconnected').addClass('connected');\n          });\n        }\n\n        //update the interval, with the new value\n        if (this.polling && _.isNumber(config.checkInterval)) {\n          this.polling.setInterval(config.checkInterval);\n        }\n      },\n      /**\n       * Installs the plugin (called when the runner bind the plugin)\n       * We do it before init to catch even offline during the init sequence\n       */\n      install: function install() {\n        var self = this;\n        var waiting = false;\n        var testRunner = this.getTestRunner();\n        var proxy = testRunner.getProxy();\n\n        /**\n         * Display the waiting dialog, while waiting the connection to be back\n         * @param {String} [messsage] - additional message for the dialog\n         * @returns {Promise} resolves once the wait is over and the user click on 'proceed'\n         */\n        this.displayWaitingDialog = function displayWaitingDialog() {\n          let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n          var dialog;\n          return new Promise(function (resolve) {\n            if (!waiting) {\n              waiting = true;\n\n              //if a pause event occurs while waiting,\n              //we also wait the connection to be back\n              testRunner.before('pause.waiting', function () {\n                return new Promise(function (pauseResolve) {\n                  proxy.off('reconnect.pausing').after('reconnect.pausing', pauseResolve);\n                });\n              });\n\n              //creates the waiting modal dialog\n              dialog = waitingDialog({\n                message: __('You are encountering a prolonged connectivity loss. ') + message,\n                waitContent: __('Please wait while we try to restore the connection.'),\n                proceedContent: __('The connection seems to be back, please proceed')\n              }).on('proceed', function () {\n                resolve();\n              }).on('render', function () {\n                proxy.off('reconnect.waiting').after('reconnect.waiting', function () {\n                  testRunner.off('pause.waiting');\n                  waiting = false;\n                  dialog.endWait();\n                });\n              });\n            }\n          });\n        };\n\n        //Last chance to check the connection,\n        //by regular polling on the \"up\" signal\n        this.polling = pollingFactory({\n          action: function action() {\n            testRunner.getProxy().telemetry(testRunner.getTestContext().itemIdentifier, 'up').catch(_.noop);\n          },\n          interval: defaultConfig.checkInterval,\n          autoStart: false\n        });\n\n        //the Proxy is the only one to know something about connectivity\n        proxy.on('disconnect', function disconnect(source) {\n          if (!testRunner.getState('disconnected')) {\n            testRunner.setState('disconnected', true);\n            testRunner.trigger('disconnect', source);\n            self.polling.start();\n          }\n        }).on('reconnect', function reconnect() {\n          if (testRunner.getState('disconnected')) {\n            testRunner.setState('disconnected', false);\n            testRunner.trigger('reconnect');\n            self.polling.stop();\n          }\n        });\n\n        //intercept tries to leave while offline\n        //this could be caused by pauses for example.\n        //If caused by an action like exitTest it will be handled\n        //by navigation errors (see below)\n        testRunner.before('leave', function (e, data) {\n          if (proxy.isOffline()) {\n            self.displayWaitingDialog(data.message).then(function () {\n              testRunner.trigger('leave', data);\n            }).catch(function (generalErr) {\n              testRunner.trigger('error', generalErr);\n            });\n            return false;\n          }\n        });\n\n        //intercept offline navigation errors\n        testRunner.before('error.connectivity', function (e, err) {\n          // detect and prevent connectivity errors\n          if (proxy.isConnectivityError(err)) {\n            return false;\n          }\n          if (proxy.isOffline()) {\n            self.displayWaitingDialog().then(function () {\n              if (err.type === 'nav') {\n                testRunner.loadItem(testRunner.getTestContext().itemIdentifier);\n              }\n              if (err.type === 'finish') {\n                testRunner.finish();\n              }\n              if (err.type === 'pause') {\n                testRunner.trigger('pause', {\n                  reasons: err.data && err.data.reasons,\n                  message: err.data && err.data.comment\n                });\n              }\n            }).catch(function (generalErr) {\n              testRunner.trigger('error', generalErr);\n            });\n            return false;\n          }\n        });\n        testRunner.before('loaditem.connectivity', function (e, itemRef, item) {\n          const testContext = testRunner.getTestContext();\n          const {\n            flags\n          } = item;\n          if (!flags) {\n            return true;\n          }\n          if (flags.hasFeedbacks) {\n            testContext.hasFeedbacks = true;\n          }\n          if ((flags.containsNonPreloadedAssets || flags.hasPci) && proxy.isOffline()) {\n            self.displayWaitingDialog().then(() => {\n              testRunner.loadItem(itemRef);\n            });\n            return false;\n          }\n        });\n        testRunner.before(namespaceHelper.namespaceAll('move skip timeout', 'connectivity'), function (e) {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          var testContext = testRunner.getTestContext();\n          var currentItem = testRunner.getCurrentItem();\n          if (proxy.isOffline() && (currentItem.hasFeedbacks || testContext.hasFeedbacks)) {\n            testRunner.trigger('disableitem');\n            self.displayWaitingDialog().then(function () {\n              testRunner.trigger('enableitem').trigger(e.name, ...args);\n            });\n            return false;\n          }\n        });\n      },\n      destroy() {\n        this.getTestRunner().off('.connectivity');\n      },\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        var $container = this.getAreaBroker().getControlArea();\n        if (this.$element) {\n          $container.append(this.$element);\n        }\n      }\n    });\n\n    return connectivity;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/connectivity/pauseOnError',['i18n', 'taoTests/runner/plugin', 'handlebars', 'lib/handlebars/helpers'], function (__, pluginFactory, Handlebars, Helpers0) { 'use strict';\n\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n      buffer += \"<b>\";\n      if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</b><br><br>\\n\";\n      if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      return buffer;\n      });\n    function dialogTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n     */\n    const name = 'pauseOnError';\n    const dialogMessage = {\n      title: __('Something unexpected happened.'),\n      message: __('Please try reloading the page or pause the test. If you pause, you will be able to resume the test from this page.')\n    };\n    const dialogConfig = {\n      focus: 'cancel',\n      buttons: {\n        labels: {\n          ok: __('Pause the test'),\n          cancel: __('Reload the page')\n        }\n      }\n    };\n    const pauseContext = {\n      reasons: {\n        category: 'technical',\n        subCategory: 'error'\n      },\n      originalMessage: 'Due to an unexpected issue the test has been suspended.'\n    };\n    var pauseOnError = pluginFactory({\n      name,\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init() {\n        const testRunner = this.getTestRunner();\n        const returnToHome = () => testRunner.trigger('pause', pauseContext);\n        const reloadPage = () => testRunner.trigger('reloadpage');\n        const processError = error => {\n          testRunner.on('reloadpage', () => window.location.reload()).trigger('disablenav disabletools hidenav').trigger(`confirm.${name}`, dialogTpl(dialogMessage), returnToHome, reloadPage, dialogConfig);\n          if (error.code === 500) {\n            error.originalCode = error.code;\n            delete error.code;\n            testRunner.trigger(`disablefeedbackalerts`);\n            testRunner.after('error.pauseOnError', () => {\n              testRunner.off('error.pauseOnError');\n              testRunner.trigger(`enablefeedbackalerts`);\n            });\n          }\n        };\n        testRunner.before('error', (e, error) => processError(error));\n      }\n    });\n\n    return pauseOnError;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/duration/duration',['lodash', 'taoTests/runner/plugin', 'core/logger'], function (_, pluginFactory, loggerFactory) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n     */\n    const logger = loggerFactory('taoQtiTest/runner/plugins/controls/duration/duration');\n\n    /**\n     * Creates the timer plugin\n     */\n    var duration = pluginFactory({\n      name: 'duration',\n      /**\n       * Install step, add behavior before the lifecycle.\n       */\n      install() {\n        // define the \"duration\" store as \"volatile\" (removed on browser change).\n        this.getTestRunner().getTestStore().setVolatile(this.getName());\n      },\n      /**\n       * Initializes the plugin (called during runner's init)\n       *\n       * @returns {Promise}\n       */\n      init() {\n        const testRunner = this.getTestRunner();\n        let currentUpdatePromise = Promise.resolve();\n        const getItemAttempt = () => {\n          const context = testRunner.getTestContext();\n          return `${context.itemIdentifier}#${context.attempt}`;\n        };\n        const getPositiveNumber = value => {\n          if (!_.isNumber(value) || value < 0) {\n            return 0;\n          }\n          return value;\n        };\n\n        //where the duration of attempts are stored\n        return testRunner.getPluginStore(this.getName()).then(durationStore => {\n          /**\n           * Gets the duration of a particular item from the store\n           *\n           * @param {String} attemptId - the attempt id to get the duration for\n           * @returns {Promise}\n           */\n          const getItemDuration = attemptId => {\n            if (!/^(.*)+#+\\d+$/.test(attemptId)) {\n              return Promise.reject(new Error('Is it really an attempt id, like \"itemid#attempt\"'));\n            }\n            return durationStore.getItem(attemptId);\n          };\n\n          /**\n           * Updates the duration of a particular item\n           *\n           * @param {Number} elapsed - time elapsed since previous tick\n           * @returns {Promise}\n           */\n          const updateDuration = elapsed => {\n            const itemAttemptId = getItemAttempt();\n            currentUpdatePromise = currentUpdatePromise.then(() => getItemDuration(itemAttemptId)).then(duration => durationStore.setItem(itemAttemptId, getPositiveNumber(duration) + getPositiveNumber(elapsed) / 1000)).catch(err => {\n              logger.warn(`Error updating item duration! ${err && err.message}`);\n            });\n            return currentUpdatePromise;\n          };\n\n          /**\n           * Adds the current duration to the next action request.\n           * The duration will be sent to the server with the next request,\n           * usually submitItem() or callItemAction()\n           *\n           * @returns {Promise}\n           */\n          const addDurationToCallActionParams = () => {\n            const itemAttemptId = getItemAttempt();\n            return currentUpdatePromise.then(() => getItemDuration(itemAttemptId)).then(duration => testRunner.getProxy().addCallActionParams({\n              itemDuration: getPositiveNumber(duration)\n            })).catch(err => {\n              logger.warn(`Error retrieving item duration! ${err && err.message}`);\n            });\n          };\n\n          //change plugin state\n          testRunner.on('tick', updateDuration).before('move skip exit timeout pause', addDurationToCallActionParams)\n          /**\n           * @event duration.get\n           * @param {String} attemptId - the attempt id to get the duration for\n           * @param {getDuration} getDuration - a receiver callback\n           */.on('plugin-get.duration', (attemptId, getDuration) => {\n            if (_.isFunction(getDuration)) {\n              getDuration(getItemDuration(attemptId));\n            }\n          });\n        });\n      }\n    });\n\n    return duration;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/progressbar/progress',['lodash', 'i18n', 'core/format', 'taoQtiTest/runner/helpers/map'], function (_, __, format, mapHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    format = format && Object.prototype.hasOwnProperty.call(format, 'default') ? format['default'] : format;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * @typedef {Object} progressDetails\n     * @property {Number} position - the position in the current element\n     * @property {Number} reached - the number of reached elements (at least one item viewed)\n     * @property {Number} viewed - the number of viewed elements (all items viewed)\n     * @property {Number} completed - the number of completed elements (all questions answered)\n     * @property {Number} total - the total number of elements\n     */\n\n    /**\n     * @typedef {itemStats} progressData\n     * @property {Number} position - the position in the scope\n     * @property {Number} overallCompleted - the number of completed items in the test\n     * @property {Number} overall - the total number of items in the test\n     * @property {progressDetails} sections - the details of testSections in the scope\n     * @property {progressDetails} parts - the details of testParts in the scope\n     * @property {progressDetails} answerableSections - the details of testSections that contain questions in the scope\n     * @property {progressDetails} answerableParts - the details of testParts that contain questions in the scope\n     * @property {progressDetails} matchedCategories - the details of items that match the expected categories in the scope\n     */\n\n    /**\n     * @typedef {Object} progressIndicator\n     * @property {Number} position - the position in the scope\n     * @property {Number} total - the length of the scope\n     * @property {Number} ratio - the progress ratio of the indicator\n     * @property {String} label - the text to display for the indicator\n     */\n\n    /**\n     * @typedef {Object} progressConfig\n     * @property {String} scope - the scope of the progression\n     * @property {String} indicator - the type of progression\n     * @property {Bool} showTotal - display 'item x of y' (true) | 'item x'\n     * @property {Array} categories - categories to count by them\n     */\n\n    /**\n     * Default progress config\n     * @type {Object}\n     */\n    var defaultConfig = {\n      scope: 'test',\n      indicator: 'percentage',\n      showTotal: true,\n      categories: []\n    };\n\n    /**\n     * List of labels by types\n     * @type {Object}\n     */\n    var labels = {\n      item: {\n        long: __('Item %d of %d'),\n        short: __('Item %d')\n      },\n      section: {\n        long: __('Section %d of %d'),\n        short: __('Section %d')\n      }\n    };\n\n    /**\n     * Simple map of progress stats computers\n     * @type {Object}\n     */\n    var scopes = {\n      /**\n       * Gets stats for the whole test\n       * @param {Object} testMap - the actual test map\n       * @param {Object} testContext - the actual test context\n       * @param {progressConfig} config - a config object\n       * @param {String} config.scope - the scope of the progression\n       * @param {Array} config.categories - categories to count by them\n       * @returns {progressData}\n       */\n      test: function test(testMap, testContext, config) {\n        var stats = getProgressStats(testMap, testContext, config, 'test');\n        var item = mapHelper.getItemAt(testMap, testContext.itemPosition);\n        stats.position = item.position + 1;\n        return stats;\n      },\n      /**\n       * Gets stats for the current test part\n       * @param {Object} testMap - the actual test map\n       * @param {Object} testContext - the actual test context\n       * @param {progressConfig} config - a config object\n       * @param {String} config.scope - the scope of the progression\n       * @param {Array} config.categories - categories to count by them\n       * @returns {progressData}\n       */\n      testPart: function testPart(testMap, testContext, config) {\n        var stats = getProgressStats(testMap, testContext, config, 'testPart');\n        var item = mapHelper.getItemAt(testMap, testContext.itemPosition);\n        stats.position = item.positionInPart + 1;\n        return stats;\n      },\n      /**\n       * Gets stats for the current test section\n       * @param {Object} testMap - the actual test map\n       * @param {Object} testContext - the actual test context\n       * @param {progressConfig} config - a config object\n       * @param {String} config.scope - the scope of the progression\n       * @param {Array} config.categories - categories to count by them\n       * @returns {progressData}\n       */\n      testSection: function testSection(testMap, testContext, config) {\n        var stats = getProgressStats(testMap, testContext, config, 'testSection');\n        var item = mapHelper.getItemAt(testMap, testContext.itemPosition);\n        stats.position = item.positionInSection + 1;\n        return stats;\n      }\n    };\n\n    /**\n     * Simple map of progress indicator computers\n     * @type {Object}\n     */\n    var indicators = {\n      /**\n       * Indicator that shows the percentage of completed items\n       * @param {progressData} stats\n       * @returns {progressIndicator}\n       */\n      percentage: function percentage(stats) {\n        return getRatioProgression(stats.answered, stats.questions);\n      },\n      /**\n       * Indicator that shows the position of current item\n       * @param {progressData} stats\n       * @param {progressConfig} config\n       * @param {String} config.scope - the scope of the progression\n       * @param {Array} config.categories - categories to count by them\n       * @returns {progressIndicator}\n       */\n      position: function position(stats, config) {\n        return getPositionProgression(stats.position, stats.total, 'item', config);\n      },\n      /**\n       * Indicator that shows the number of viewed questions\n       * @param {progressData} stats\n       * @param {progressConfig} config\n       * @param {String} config.scope - the scope of the progression\n       * @param {Array} config.categories - categories to count by them\n       * @returns {progressIndicator}\n       */\n      questions: function questions(stats, config) {\n        return getPositionProgression(stats.questionsViewed, stats.questions, 'item', config);\n      },\n      /**\n       * Indicator that shows the number of reached answerable sections\n       * @param {progressData} stats\n       * @param {progressConfig} config\n       * @param {String} config.scope - the scope of the progression\n       * @param {Array} config.categories - categories to count by them\n       * @returns {progressIndicator}\n       */\n      sections: function sections(stats, config) {\n        return getPositionProgression(stats.answerableSections.reached, stats.answerableSections.total, 'section', config);\n      },\n      /**\n       * Indicator that shows the number of viewed items which have categories from the configuration\n       * (show all if categories are not set)\n       * @param {progressData} stats\n       * @param {progressConfig} config\n       * @param {String} config.scope - the scope of the progression\n       * @param {Array} config.categories - categories to count by them\n       */\n      categories: function categories(stats, config) {\n        return getPositionProgression(stats.matchedCategories.position, stats.matchedCategories.total, 'item', config);\n      }\n    };\n\n    /**\n     * Fix the test map if the current test part is linear, as the current item should not be answered.\n     * @param {Object} testMap - the actual test map\n     * @param {Object} testContext - the actual test context\n     * @returns {Object} The fixed test map\n     */\n    function getFixedMap(testMap, testContext) {\n      const currentTestPart = mapHelper.getPart(testMap, testContext.testPartId);\n      const currentItem = mapHelper.getItemAt(testMap, testContext.itemPosition);\n      if (currentItem.answered && currentTestPart.isLinear) {\n        const fixedTestMap = _.cloneDeep(testMap);\n        const fixedCurrentItem = mapHelper.getItemAt(fixedTestMap, testContext.itemPosition);\n        fixedCurrentItem.answered = false;\n        return fixedTestMap;\n      }\n      return testMap;\n    }\n\n    /**\n     * Gets an empty stats record\n     * @returns {progressDetails}\n     */\n    function getEmptyStats() {\n      return {\n        position: 0,\n        reached: 0,\n        viewed: 0,\n        completed: 0,\n        total: 0\n      };\n    }\n\n    /**\n     * Updates the progress stats from the given element\n     * @param {progressDetails} stats - The stats details to update\n     * @param {Object} element - The element from which take the details\n     * @param {Number} position - The current item position\n     */\n    function updateStats(stats, element, position) {\n      if (element.position <= position) {\n        stats.position++;\n      }\n      if (element.stats.viewed) {\n        stats.reached++;\n        if (element.stats.viewed === element.stats.total) {\n          stats.viewed++;\n        }\n      }\n      if (element.stats.answered) {\n        if (element.stats.answered === element.stats.questions) {\n          stats.completed++;\n        }\n      }\n      stats.total++;\n    }\n\n    /**\n     * Updates the progress stats from the given element\n     * @param {progressDetails} stats - The stats details to update\n     * @param {Object} element - The element from which take the details\n     * @param {Number} position - The current item position\n     */\n    function updateItemStats(stats, element, position) {\n      if (element.position <= position) {\n        stats.position++;\n      }\n      if (element.viewed) {\n        stats.reached++;\n        stats.viewed++;\n      }\n      if (element.answered) {\n        stats.completed++;\n      }\n      stats.total++;\n    }\n\n    /**\n     * Convert list of the categories to the hashtable to improve performance\n     * @param categories\n     * @returns {*}\n     */\n    function getCategoriesToMatch(categories) {\n      var matchSize = categories && categories.length;\n      return matchSize && _.reduce(categories, function (map, category) {\n        map[category] = true;\n        return map;\n      }, {});\n    }\n\n    /**\n     * Completes the progression stats\n     * @param {Object} testMap - the actual test map\n     * @param {Object} testContext - the actual test context\n     * @param {progressConfig} config\n     * @param {String} config.scope - the scope of the progression\n     * @param {Array} config.categories - categories to count by them\n     * @param {String} [scope] - The name of the scope. Can be: test, part, section (default: test)\n     * @returns {progressData}\n     */\n    function getProgressStats(testMap, testContext, config, scope) {\n      var fixedMap = getFixedMap(testMap, testContext);\n      var scopedMap = mapHelper.getScopeMap(fixedMap, testContext.itemPosition, scope);\n      var stats = _.clone(scopedMap.stats);\n      var categoriesToMatch;\n      var matchSize;\n      if (config.indicator === 'categories') {\n        categoriesToMatch = getCategoriesToMatch(config.categories);\n        matchSize = config.categories && config.categories.length;\n        stats.matchedCategories = getEmptyStats();\n      }\n      stats.parts = getEmptyStats();\n      stats.sections = getEmptyStats();\n      stats.answerableParts = getEmptyStats();\n      stats.answerableSections = getEmptyStats();\n      _.forEach(scopedMap.parts, function (part) {\n        updateStats(stats.parts, part, testContext.itemPosition);\n        if (part.stats.questions > 0) {\n          updateStats(stats.answerableParts, part, testContext.itemPosition);\n        }\n        _.forEach(part.sections, function (section) {\n          updateStats(stats.sections, section, testContext.itemPosition);\n          if (section.stats.questions > 0) {\n            updateStats(stats.answerableSections, section, testContext.itemPosition);\n          }\n          if (config.indicator === 'categories') {\n            _.forEach(section.items, function (item) {\n              if (matchCategories(item.categories, categoriesToMatch, matchSize)) {\n                updateItemStats(stats.matchedCategories, item, testContext.itemPosition);\n              }\n            });\n          }\n        });\n      });\n      return stats;\n    }\n\n    /**\n     *\n     * @param {Array} categories - List of categories to check\n     * @param {Object} expectedCategories - Hashtable of expected categories\n     * @param {Number} minWanted - Minimal number of expected categories that should match\n     * @returns {Boolean}\n     */\n    function matchCategories(categories, expectedCategories, minWanted) {\n      var matched = 0;\n      if (expectedCategories) {\n        _.forEach(categories, function (category) {\n          if (expectedCategories[category]) {\n            matched++;\n            if (matched >= minWanted) {\n              return false;\n            }\n          }\n        });\n      }\n      return matched === minWanted;\n    }\n\n    /**\n     * Gets the progression ratio\n     * @param {Number} position\n     * @param {Number} total\n     * @returns {Number}\n     */\n    function getRatio(position, total) {\n      if (position && total > 0) {\n        return Math.floor(position / total * 100);\n      }\n      return 0;\n    }\n\n    /**\n     * Gets the label of the progress bar for an item\n     * @param {Number} position - the current position\n     * @param {Number} total - the total number of items\n     * @param {String} type - the type of element that is represented\n     * @param {progressConfig} config - a config object\n     * @param {String} config.scope - the scope of the progression\n     * @param {Array} config.categories - categories to count by them\n     * @returns {String}\n     */\n    function getProgressionLabel(position, total, type, config) {\n      var patterns = labels[type] || labels.item;\n      var pattern = config.showTotal ? patterns.long : patterns.short;\n      return format(pattern, position || '0', total || '0');\n    }\n\n    /**\n     * Gets the progression based on position\n     * @param {Number} position - the current position\n     * @param {Number} total - the total number of items\n     * @param {String} type - the type of element that is represented\n     * @param {progressConfig} config - a config object\n     * @param {String} config.scope - the scope of the progression\n     * @param {Array} config.categories - categories to count by them\n     * @returns {progressIndicator}\n     */\n    function getPositionProgression(position, total, type, config) {\n      return {\n        position: position || 0,\n        total: total || 0,\n        ratio: getRatio(position, total),\n        label: getProgressionLabel(position, total, type, config)\n      };\n    }\n\n    /**\n     * Gets the progression based on a ratio\n     * @param {Number} position - the current position\n     * @param {Number} total - the total number of items\n     * @returns {progressIndicator}\n     */\n    function getRatioProgression(position, total) {\n      var ratio = getRatio(position, total);\n      return {\n        position: position || 0,\n        total: total || 0,\n        ratio: ratio,\n        label: `${ratio}%`\n      };\n    }\n    var progress = {\n      /**\n       * Checks that categories matched\n       * @param categories\n       * @param expectedCategories\n       * @returns {Boolean}\n       */\n      isMatchedCategories: function validCategories(categories, expectedCategories) {\n        var categoriesToMatch = getCategoriesToMatch(expectedCategories);\n        var matchSize = expectedCategories && expectedCategories.length;\n        return matchCategories(categories, categoriesToMatch, matchSize);\n      },\n      /**\n       * Computes the progress stats for the specified scope\n       * @param {Object} testMap - the actual test map\n       * @param {Object} testContext - the actual test context\n       * @param {progressConfig} config - a config object\n       * @param {String} config.scope - the scope of the progression\n       * @param {Array} config.categories - categories to count by them\n       * @returns {progressData}\n       */\n      computeStats(testMap, testContext, config) {\n        const testPart = mapHelper.getPart(testMap, testContext.testPartId);\n        const statsComputer = config.scope && scopes[config.scope] || scopes.test;\n        const stats = statsComputer(testMap, testContext, config || defaultConfig);\n        stats.overall = testMap.stats.total;\n        if (testPart && testPart.isLinear) {\n          stats.overallCompleted = testMap.stats.answered - 1;\n        } else {\n          stats.overallCompleted = testMap.stats.answered;\n        }\n        return stats;\n      },\n      /**\n       * Computes the specified progress indicator\n       * @param {progressData} stats - the progress stats\n       * @param {String} type - the [type=\"percentage\"] of indicator to compute (could be: percentage, position, questions, sections)\n       * @param {progressConfig} [config] - a config object\n       * @param {Boolean} [config.showTotal] - display 'item x of y' (true) | 'item x'\n       * @returns {progressIndicator}\n       */\n      computeIndicator: function computeIndicator(stats, type, config) {\n        var indicatorComputer = type && indicators[type] || indicators.percentage;\n        return indicatorComputer(stats || {}, config || defaultConfig);\n      },\n      /**\n       *\n       * @param {Object} testMap - the actual test map\n       * @param {Object} testContext - the actual test context\n       * @param {progressConfig} config - a config object\n       * @param {String} config.indicator - the type of progression\n       * @param {String} config.scope - the scope of the progression\n       * @param {Array} config.categories - categories to count by them\n       * @param {Boolean} [config.showTotal=true] - display 'item x of y' (true) | 'item x'\n       */\n      computeProgress: function computeProgress(testMap, testContext, config) {\n        var progressData;\n        config = _.defaults(config || {}, defaultConfig);\n        progressData = this.computeStats(testMap, testContext, config);\n        return this.computeIndicator(progressData, config.indicator, config);\n      }\n    };\n\n    return progress;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/progressbar/renderer/percentage',['ui/component', 'handlebars', 'lib/handlebars/helpers', 'ui/progressbar'], function (component, Handlebars, Helpers0, progressbar) { 'use strict';\n\n    component = component && Object.prototype.hasOwnProperty.call(component, 'default') ? component['default'] : component;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n      return \"<div class=\\\"progress-box\\\">\\n    <div data-control=\\\"progress-bar\\\" class=\\\"qti-controls progressbar info\\\"></div>\\n    <div data-control=\\\"progress-label\\\" class=\\\"qti-controls\\\"></div>\\n</div>\\n\";\n      });\n    function percentageTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Default config values\n     * @type {Object}\n     */\n    var defaults = {\n      showLabel: true\n    };\n\n    /**\n     * Builds percentage indicator renderer\n     * @param {Object} [config] - a config object\n     * @param {Boolean} [config.showLabel=true] - show/hide the progress label\n     * @param {Object} [progressData] - the initial dataset\n     */\n    function percentageIndicatorRenderer(config, progressData) {\n      var rendererApi = {\n        /**\n         * Update the progress bar according to the provided indicator data\n         * @param {progressIndicator} data\n         */\n        update: function update(data) {\n          progressData = data;\n          if (this.is('rendered') && this.controls) {\n            this.controls.$label.text(progressData.label);\n            this.controls.$bar.progressbar('value', progressData.ratio);\n          }\n\n          /**\n           * Executes extra tasks on update\n           * @event percentageIndicatorRenderer#update\n           * @param {progressIndicator} data\n           */\n          this.trigger('update', data);\n        }\n      };\n      return component(rendererApi, defaults).setTemplate(percentageTpl).on('render', function () {\n        // get access to the controls\n        this.controls = {\n          $label: this.getElement().find('[data-control=\"progress-label\"]'),\n          $bar: this.getElement().find('[data-control=\"progress-bar\"]')\n        };\n\n        // apply option\n        if (!this.config.showLabel) {\n          this.controls.$label.hide();\n        }\n\n        // and initialize the progress bar component\n        this.controls.$bar.progressbar();\n\n        // set the right progression according to init data\n        if (progressData) {\n          this.update(progressData);\n        }\n\n        // forward the hidden state if it has been set before render\n        if (this.is('hidden')) {\n          this.hide();\n        }\n      }).on('destroy', function () {\n        this.controls = null;\n      }).init(config);\n    }\n\n    return percentageIndicatorRenderer;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/progressbar/renderer/position',['lodash', 'ui/component', 'handlebars', 'lib/handlebars/helpers'], function (_, component, Handlebars, Helpers0) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    component = component && Object.prototype.hasOwnProperty.call(component, 'default') ? component['default'] : component;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n      return \"<div class=\\\"progress-box\\\">\\n    <div data-control=\\\"progress-bar\\\" class=\\\"qti-controls progressbar\\\">\\n        <div class=\\\"progressbar-points\\\"></div>\\n    </div>\\n    <div data-control=\\\"progress-label\\\" class=\\\"qti-controls\\\"></div>\\n</div>\\n\";\n      });\n    function positionTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\";\n      buffer += \"\\n<span class=\\\"progressbar-point\\\" data-index=\\\"\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\"></span>\\n\";\n      return buffer;\n      }\n\n      stack1 = helpers.each.call(depth0, depth0, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function pointTpl(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Default config values\n     * @type {Object}\n     */\n    var defaults = {\n      showLabel: true\n    };\n\n    /**\n     * Builds percentage indicator renderer\n     * @param {Object} [config] - a config object\n     * @param {Boolean} [config.showLabel=true] - show/hide the progress label\n     * @param {Object} [progressData] - the initial dataset\n     */\n    function positionIndicatorRenderer(config, progressData) {\n      var count = 0;\n      var rendererApi = {\n        /**\n         * Update the progress bar according to the provided indicator data\n         * @param {progressIndicator} data\n         */\n        update: function update(data) {\n          progressData = data;\n          if (this.is('rendered') && this.controls) {\n            if (count !== progressData.total) {\n              // the number of points have changed, regenerate the full bar\n              count = progressData.total;\n              this.controls.$bar.empty().append(pointTpl(_.range(count)));\n            }\n            this.controls.$label.text(progressData.label);\n            this.controls.$bar\n            // remove progression from all points\n            .children().removeClass('reached current')\n            // set progression to each reached point\n            .slice(0, progressData.position).addClass('reached')\n            // set current position\n            .slice(-1).addClass('current');\n          }\n\n          /**\n           * Executes extra tasks on update\n           * @event positionIndicatorRenderer#update\n           * @param {progressIndicator} data\n           */\n          this.trigger('update', data);\n        }\n      };\n      return component(rendererApi, defaults).setTemplate(positionTpl).on('render', function () {\n        // get access to the controls\n        this.controls = {\n          $label: this.getElement().find('[data-control=\"progress-label\"]'),\n          $bar: this.getElement().find('[data-control=\"progress-bar\"] .progressbar-points')\n        };\n\n        // apply option\n        if (!this.config.showLabel) {\n          this.controls.$label.hide();\n        }\n\n        // set the right progression according to init data\n        if (progressData) {\n          this.update(progressData);\n        }\n\n        // forward the hidden state if it has been set before render\n        if (this.is('hidden')) {\n          this.hide();\n        }\n      }).on('destroy', function () {\n        this.controls = null;\n      }).init(config);\n    }\n\n    return positionIndicatorRenderer;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/progressbar/progressbar',['taoTests/runner/plugin', 'taoQtiTest/runner/helpers/map', 'taoQtiTest/runner/plugins/controls/progressbar/progress', 'taoQtiTest/runner/plugins/controls/progressbar/renderer/percentage', 'taoQtiTest/runner/plugins/controls/progressbar/renderer/position'], function (pluginFactory, mapHelper, progressHelper, percentageRendererFactory, positionRendererFactory) { 'use strict';\n\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    progressHelper = progressHelper && Object.prototype.hasOwnProperty.call(progressHelper, 'default') ? progressHelper['default'] : progressHelper;\n    percentageRendererFactory = percentageRendererFactory && Object.prototype.hasOwnProperty.call(percentageRendererFactory, 'default') ? percentageRendererFactory['default'] : percentageRendererFactory;\n    positionRendererFactory = positionRendererFactory && Object.prototype.hasOwnProperty.call(positionRendererFactory, 'default') ? positionRendererFactory['default'] : positionRendererFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2018 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * List of available progress indicator renderers\n     * @type {Object}\n     */\n    var renderers = {\n      percentage: percentageRendererFactory,\n      position: positionRendererFactory\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    var progressbar = pluginFactory({\n      name: 'progressBar',\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        const testRunner = this.getTestRunner();\n        const testRunnerConfig = testRunner.getOptions();\n        const config = Object.assign({}, testRunnerConfig.progressIndicator || {}, this.getConfig());\n        const self = this;\n        var rendererFactory = renderers[config.renderer] || renderers.percentage;\n        var progressConfig = {\n          indicator: config.type || 'percentage',\n          scope: config.scope || 'test',\n          showLabel: config.showLabel,\n          showTotal: config.showTotal,\n          categories: config.categories\n        };\n        var hiddenByQuestions = function hiddenByQuestions(item) {\n          return item && item.informational && progressConfig.indicator === 'questions';\n        };\n        var hiddenByCategories = function (item) {\n          return item && progressConfig.indicator === 'categories' && !progressHelper.isMatchedCategories(item.categories, progressConfig.categories);\n        };\n\n        /**\n         * Check if progress bar should be hidden\n         */\n        var isProgressbarHidden = function isProgressbarHidden(item) {\n          return hiddenByQuestions(item) || hiddenByCategories(item);\n        };\n\n        /**\n         * Update the progress bar\n         */\n        var update = function update() {\n          var testContext = testRunner.getTestContext();\n          var testMap = testRunner.getTestMap();\n          var item = mapHelper.getItemAt(testMap, testContext.itemPosition);\n          if (isProgressbarHidden(item)) {\n            self.renderer.hide();\n          } else {\n            self.renderer.show();\n            self.renderer.update(progressHelper.computeProgress(testMap, testContext, progressConfig));\n          }\n        };\n\n        //create the progressbar\n        this.renderer = rendererFactory(progressConfig);\n\n        //let update the progression\n        update();\n        testRunner.on('ready loaditem', update);\n      },\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        var $container = this.getAreaBroker().getControlArea();\n        this.renderer.render($container);\n      },\n      /**\n       * Called during the runner's render phase\n       */\n      destroy: function destroy() {\n        if (this.renderer) {\n          this.renderer.destroy();\n        }\n        this.renderer = null;\n      },\n      /**\n       * Show the progress bar\n       */\n      show: function show() {\n        if (this.renderer) {\n          this.renderer.show();\n        }\n      },\n      /**\n       * Hide the progress bar\n       */\n      hide: function hide() {\n        if (this.renderer) {\n          this.renderer.hide();\n        }\n      }\n    });\n\n    return progressbar;\n\n});\n\n","define('taoQtiTest/runner/config/states',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The possible states\n     * @author Bertrand Chevrier <bertrand@taotesting.com>\n     */\n    var states = {\n      //the test session states\n      testSession: Object.freeze({\n        initial: 0,\n        interacting: 1,\n        modalFeedback: 2,\n        suspended: 3,\n        closed: 4\n      }),\n      //the item session states\n      itemSession: Object.freeze({\n        initial: 0,\n        interacting: 1,\n        modalFeedback: 2,\n        suspended: 3,\n        closed: 4,\n        solution: 5,\n        notSelected: 255\n      })\n    };\n\n    return states;\n\n});\n\n","define('taoQtiTest/runner/services/sequenceStore',['core/store'], function (store) { 'use strict';\n\n    store = store && Object.prototype.hasOwnProperty.call(store, 'default') ? store['default'] : store;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2023 (original work) Open Assessment Technologies SA ;\n     */\n    const STORE_ID = 'current';\n    const SEQUENCE_NUMBER = 'sequence';\n    var sequenceStore = {\n      /**\n       * Creates a store for the sequence number for the session.\n       * @returns {Promise} - Resolved with the store API.\n       */\n      getSequenceStore() {\n        return store(STORE_ID).then(sequenceStore => ({\n          /**\n           * Stores the sequence number for the session.\n           * @param {string} sequenceNumber - The new sequence number to set for the session.\n           * @returns {Promise} - Resolved once the sequence number has been stored.\n           */\n          setSequenceNumber(sequenceNumber) {\n            return sequenceStore.setItem(SEQUENCE_NUMBER, sequenceNumber);\n          },\n          /**\n           * Reads the sequence number for the session from the storage.\n           * @returns {Promise<string>} - Resolved with the sequence number for the session.\n           */\n          getSequenceNumber() {\n            return sequenceStore.getItem(SEQUENCE_NUMBER);\n          }\n        }));\n      },\n      /**\n       * Creates a sequence number for the test runner.\n       * @returns {Promise<string>} - Resolved with sequence number for the session.\n       */\n      getSequenceNumber(testRunner) {\n        return testRunner.getTestStore().getStorageIdentifier().then(storeId => `${storeId}-${Date.now()}`);\n      }\n    };\n\n    return sequenceStore;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/session/preventConcurrency',['context', 'core/logger', 'i18n', 'taoQtiTest/runner/config/states', 'taoQtiTest/runner/services/sequenceStore', 'taoTests/runner/plugin'], function (context, loggerFactory, __, states, sequenceStore, pluginFactory) { 'use strict';\n\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    states = states && Object.prototype.hasOwnProperty.call(states, 'default') ? states['default'] : states;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2023 (original work) Open Assessment Technologies SA ;\n     */\n    const logger = loggerFactory('taoQtiTest/runner/plugins/controls/session/preventConcurrency');\n    const FEATURE_FLAG = 'FEATURE_FLAG_PAUSE_CONCURRENT_SESSIONS';\n\n    /**\n     * Test Runner Control Plugin : detect concurrent deliveries launched from the same user session.\n     */\n    var preventConcurrency = pluginFactory({\n      name: 'preventConcurrency',\n      /**\n       * Initializes the plugin (called during runner's init)\n       */\n      init() {\n        const testRunner = this.getTestRunner();\n        const options = testRunner.getOptions();\n        const skipPausedAssessmentDialog = !!options.skipPausedAssessmentDialog;\n        return Promise.all([sequenceStore.getSequenceNumber(testRunner), sequenceStore.getSequenceStore()]).then(_ref => {\n          let [sequenceNumber, sequenceStore] = _ref;\n          return sequenceStore.setSequenceNumber(sequenceNumber).then(() => {\n            testRunner.on('tick', () => {\n              if (context.featureFlags[FEATURE_FLAG]) {\n                return sequenceStore.getSequenceNumber().then(lastSequenceNumber => {\n                  if (lastSequenceNumber !== sequenceNumber) {\n                    testRunner.off('tick');\n                    testRunner.trigger('disabletools');\n                    testRunner.trigger('disablenav');\n                    testRunner.trigger('disableitem');\n                    testRunner.trigger('concurrency');\n                    return Promise.reject();\n                  }\n                });\n              }\n            }).on('concurrency', () => {\n              logger.warn(`The sequence number has changed. Was another delivery opened in the same browser?`);\n              testRunner.trigger('leave', {\n                code: states.testSession.suspended,\n                message: __('A concurrent delivery has been detected. Please use the last open session. The present window can be closed.'),\n                skipExitMessage: skipPausedAssessmentDialog\n              });\n            });\n          });\n        });\n      }\n    });\n\n    return preventConcurrency;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/testState/testState',['lodash', 'taoTests/runner/plugin'], function (_, pluginFactory) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Creates the testState plugin.\n     * Handle particular states of the assessment test\n     */\n    var testState = pluginFactory({\n      name: 'testState',\n      /**\n       * Installs the plugin (called when the runner bind the plugin)\n       */\n      install: function install() {\n        var testRunner = this.getTestRunner();\n\n        // middleware invoked on every requests\n        testRunner.getProxy().use(function qtiFilter(req, res, next) {\n          var data = res && res.data;\n\n          // test has been closed/suspended => redirect to the index page after message acknowledge\n          if (data && data.type && data.type === 'TestState' && !testRunner.getState('closedOrSuspended')) {\n            // spread the world about the reason of the leave\n            testRunner.setState('closedOrSuspended', true);\n            if (!testRunner.getState('ready')) {\n              // if we open an inconsistent test just leave\n              // should happen if we refresh an auto paused test\n              testRunner.trigger('destroy');\n            } else if (_.isEmpty(data.messages) || !_.find(data.messages, {\n              channel: 'teststate'\n            })) {\n              testRunner.trigger('leave', data);\n            }\n            // break the chain to avoid uncaught exception in promise...\n            // this will lead to unresolved promise, but the browser will be redirected soon!\n            return;\n          }\n          next();\n        });\n      },\n      /**\n       * Initializes the plugin (called during runner's init)\n       */\n      init: function init() {\n        var testRunner = this.getTestRunner();\n        var isLeaving = false;\n\n        // immediate handling of proctor's actions\n        testRunner.getProxy().channel('teststate', function (data) {\n          if (!isLeaving && data && ('close' === data.type || 'pause' === data.type) && !testRunner.getState('closedOrSuspended')) {\n            isLeaving = true;\n            if ('pause' === data.type) {\n              testRunner.trigger('pause', data);\n            } else {\n              testRunner.setState('closedOrSuspended', true);\n              testRunner.trigger('leave', data);\n            }\n          }\n        });\n      }\n    });\n\n    return testState;\n\n});\n\n","define('taoQtiTest/runner/helpers/getTimerMessage',['i18n'], function (__) { 'use strict';\n\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n\n    /**\n     * Returns timer information string\n     * @returns {Boolean}\n     */\n    function getTimerMessage(hours, minutes, seconds, unansweredQuestions, scope) {\n      let timerMessage;\n      const timeArr = [hours, minutes, seconds];\n      const timeArgArr = [];\n      [__('hours'), __('minutes'), __('seconds')].forEach((unit, idx) => {\n        if (timeArr[idx] > 0) {\n          timeArgArr.push(`${timeArr[idx]} ${unit}`);\n        }\n      });\n      let answeredMessage;\n      if (!unansweredQuestions || scope === 'item') {\n        answeredMessage = __('the current question');\n      } else {\n        let questionsMessage = __('questions');\n        if (unansweredQuestions === 1) {\n          questionsMessage = __('question');\n        }\n        answeredMessage = __('remaining %s %s', unansweredQuestions, questionsMessage);\n      }\n      if (timeArgArr.length === 0) {\n        timerMessage = __('%s to answer %s', 'no time left', answeredMessage);\n      } else {\n        timerMessage = __('%s to answer %s', timeArgArr.join(', '), answeredMessage);\n      }\n      return timerMessage;\n    }\n\n    return getTimerMessage;\n\n});\n\n","\ndefine('css!taoQtiTest/runner/plugins/controls/timer/component/css/countdown',[],function(){});\n","define('taoQtiTest/runner/plugins/controls/timer/component/countdown',['jquery', 'lodash', 'core/encoder/time', 'ui/component', 'handlebars', 'lib/handlebars/helpers', 'taoQtiTest/runner/helpers/getTimerMessage', 'ui/tooltip', 'css!taoQtiTest/runner/plugins/controls/timer/component/css/countdown.css', 'moment'], function ($$1, _, timeEncoder, component, Handlebars, Helpers0, getTimerMessage, tooltip, countdown_css, moment) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    timeEncoder = timeEncoder && Object.prototype.hasOwnProperty.call(timeEncoder, 'default') ? timeEncoder['default'] : timeEncoder;\n    component = component && Object.prototype.hasOwnProperty.call(component, 'default') ? component['default'] : component;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    getTimerMessage = getTimerMessage && Object.prototype.hasOwnProperty.call(getTimerMessage, 'default') ? getTimerMessage['default'] : getTimerMessage;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n    moment = moment && Object.prototype.hasOwnProperty.call(moment, 'default') ? moment['default'] : moment;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n      buffer += \"<div class=\\\"countdown\\\" data-control=\\\"\";\n      if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-type=\\\"\";\n      if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-scope=\\\"\";\n      if (helper = helpers.scope) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.scope); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" title=\\\"\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" disabled>\\n    <span aria-label=\\\"\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" class=\\\"label truncate\\\">\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n    <span class=\\\"time\\\" aria-hidden=\\\"true\\\"></span>\\n    <div class=\\\"time--screenreader visible-hidden\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function countdownTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n     */\n\n    //Precision is milliseconds\n    var precision = 1000;\n\n    /**\n     * Default config values, see below.\n     */\n    var defaults = {\n      showBeforeStart: true,\n      displayWarning: true\n    };\n\n    /**\n     * time to display warnings\n     */\n    var warningTimeout = {\n      info: 2000,\n      success: 2000,\n      warning: 4000,\n      danger: 4000,\n      error: 8000\n    };\n\n    /**\n     * Creates, initialize and render a countdown component.\n     *\n     * @param {jQueryElement|HTMLElement} $container - where to append the countdown\n     * @param {Object} config\n     * @param {String} config.id - the timer unique identifier\n     * @param {String} config.label - the text to display above the timer\n     * @param {String} config.type - the type of countdown (to categorize them)\n     * @param {String} [config.scope] - scope of a timer\n     * @param {Number} [config.unansweredQuestions] - number of unanswered options\n     * @param {Number} [config.remainingTime] - the current value of the countdown, in milliseconds\n     * @param {Boolean} [config.showBeforeStart = true] - do we show the time before starting\n     * @param {Boolean} [config.displayWarning = true] - do we display the warnings or trigger only the event\n     * @param {Object[]} [config.warnings] - define warnings thresholds\n     * @param {Number} [config.warnings.threshold] - when the warning is shown, in milliseconds\n     * @param {String} [config.warnings.message] - the warning message\n     * @param {String} [config.warnings.level = warn] - the feedback level in (success, info, warn, danger and error)\n     * @returns {countdown} the component, initialized and rendered\n     */\n    function countdownFactory($container, config) {\n      let $time;\n      let $timeScreenreader;\n\n      /**\n       * @typedef {Object} countdown\n       */\n      var countdown = component({\n        /**\n         * Update the countdown\n         * @param {Number} remainingTime - the time remaining (milliseconds)\n         * @param {Number} unansweredQuestions\n         * @returns {countdown} chains\n         * @fires countdown#change - when the value has changed\n         * @fires countdown#warn - when a threshold is reached\n         */\n        update: function udpate(remainingTime, unansweredQuestions) {\n          var self = this;\n          var encodedTime;\n          var warningId;\n          var warningMessage;\n          if (!this.is('completed')) {\n            if (remainingTime <= 0) {\n              this.remainingTime = 0;\n            } else {\n              this.remainingTime = parseInt(remainingTime, 10);\n            }\n            if (this.is('rendered') && this.is('running')) {\n              encodedTime = timeEncoder.encode(this.remainingTime / precision);\n              if (encodedTime !== this.encodedTime) {\n                this.encodedTime = encodedTime;\n                const time = moment.duration(this.remainingTime / precision, 'seconds');\n                const hours = time.get('hours');\n                const minutes = time.get('minutes');\n                const seconds = time.get('seconds');\n                $time.text(this.encodedTime);\n                $timeScreenreader.text(getTimerMessage(hours, minutes, seconds, unansweredQuestions, this.config.scope));\n              }\n              if (this.warnings) {\n                //the warnings have already be sorted\n                warningId = _.findLastKey(this.warnings, function (warning) {\n                  return warning && !warning.shown && warning.threshold > 0 && warning.threshold >= self.remainingTime;\n                });\n                if (warningId) {\n                  this.warnings[warningId].shown = true;\n                  if (_.isFunction(this.warnings[warningId].message)) {\n                    warningMessage = this.warnings[warningId].message(this.remainingTime);\n                  } else {\n                    warningMessage = this.warnings[warningId].message;\n                  }\n\n                  /**\n                   * Warn user the timer reach a threshold\n                   * @event countdown#warn\n                   * @param {String} message\n                   * @param {String} level\n                   */\n                  this.trigger('warn', warningMessage, this.warnings[warningId].level);\n                }\n              }\n              if (this.warningsForScreenreader) {\n                //the warnings have already be sorted\n                const screenreaderWarningId = _.findLastKey(this.warningsForScreenreader, warning => warning && !warning.shown && warning.threshold > 0 && warning.threshold >= self.remainingTime);\n                if (screenreaderWarningId) {\n                  this.warningsForScreenreader[screenreaderWarningId].shown = true;\n\n                  /**\n                   * Warn user the timer reach a threshold\n                   * @event countdown#warnscreenreader\n                   * @param {Function} message\n                   * @param {Number} remainingTime\n                   * @param {String} scope\n                   */\n                  this.trigger('warnscreenreader', this.warningsForScreenreader[screenreaderWarningId].message, self.remainingTime, this.warningsForScreenreader[screenreaderWarningId].scope);\n                }\n              }\n\n              /**\n               * The current value has changed\n               * @event countdown#change\n               * @param {Number} remainingTime - the updated time\n               * @param {String} displayed - the displayed value\n               */\n              this.trigger('change', this.remainingTime, encodedTime);\n            }\n            if (this.remainingTime === 0) {\n              this.complete();\n            }\n          }\n          return this;\n        },\n        /**\n         * Starts the countdown\n         * @returns {countdown} chains\n         * @fires countdown#start\n         */\n        start: function start() {\n          if (this.is('rendered') && !this.is('running') && !this.is('completed')) {\n            this.enable();\n            this.setState('running', true);\n\n            /**\n             * The count has started\n             * @event countdown#start\n             */\n            this.trigger('start');\n          }\n          return this;\n        },\n        /**\n         * Stops the countdown (can be restarted then)\n         * @returns {countdown} chains\n         * @fires countdown#stop\n         */\n        stop: function stop() {\n          if (this.is('rendered') && this.is('running')) {\n            this.setState('running', false);\n\n            /**\n             * The count is stopped\n             * @event countdown#stop\n             */\n            this.trigger('stop');\n          }\n          return this;\n        },\n        /**\n         * Calls to complete the countdown,\n         * it can't be resumed after.\n         *\n         * @returns {countdown} chains\n         *\n         * @fires countdown#complete\n         * @fires countdown#end\n         */\n        complete: function complete() {\n          if (this.is('rendered') && this.is('running') && !this.is('completed')) {\n            this.stop();\n            this.setState('completed', true);\n\n            /**\n             * The countdown has ended, is completed\n             * @event countdown#complete\n             * @event countdown#end (alias)\n             */\n            this.trigger('complete end');\n          }\n          return this;\n        }\n      }, defaults).on('init', function () {\n        this.remainingTime = this.config.remainingTime;\n        this.unansweredQuestions = this.config.unansweredQuestions;\n        if (this.config.warnings) {\n          this.warnings = _.sortBy(this.config.warnings, 'threshold');\n        }\n        if (this.config.warningsForScreenreader) {\n          this.warningsForScreenreader = _.sortBy(this.config.warningsForScreenreader, 'threshold');\n        }\n\n        //auto renders\n        this.render($container);\n      }).on('render', function () {\n        $time = $$1('.time', this.getElement());\n        $timeScreenreader = $$1('.time--screenreader', this.getElement());\n        if (this.config.showBeforeStart === true) {\n          $time.text(timeEncoder.encode(this.remainingTime / precision));\n        }\n      }).on('warn', function (message, level) {\n        var countdownTooltip;\n        level = level || 'warning';\n        if (this.is('rendered') && this.is('running') && _.isString(message) && !_.isEmpty(message)) {\n          $time.removeClass('txt-success txt-info txt-warning txt-danger txt-error').addClass(`txt-${level}`);\n          if (this.config.displayWarning === true) {\n            countdownTooltip = tooltip.create(this.getElement(), message, {\n              trigger: 'manual',\n              theme: level,\n              placement: 'bottom'\n            });\n            countdownTooltip.show();\n            setTimeout(function () {\n              countdownTooltip.hide();\n              countdownTooltip.dispose();\n            }, warningTimeout[level] || 2000);\n          }\n        }\n      });\n      countdown.setTemplate(countdownTpl);\n      _.defer(function () {\n        countdown.init(config);\n      });\n      return countdown;\n    }\n\n    return countdownFactory;\n\n});\n\n","\ndefine('css!taoQtiTest/runner/plugins/controls/timer/component/css/timerbox',[],function(){});\n","define('taoQtiTest/runner/plugins/controls/timer/component/timerbox',['jquery', 'lodash', 'i18n', 'ui/component', 'ui/hider', 'taoQtiTest/runner/plugins/controls/timer/component/countdown', 'handlebars', 'lib/handlebars/helpers', 'css!taoQtiTest/runner/plugins/controls/timer/component/css/timerbox.css'], function ($$1, _, __, component, hider, countdownFactory, Handlebars, Helpers0, timerbox_css) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    component = component && Object.prototype.hasOwnProperty.call(component, 'default') ? component['default'] : component;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    countdownFactory = countdownFactory && Object.prototype.hasOwnProperty.call(countdownFactory, 'default') ? countdownFactory['default'] : countdownFactory;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this, functionType=\"function\";\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", helper, options;\n      buffer += \"\\n    <a href=\\\"#\\\" class=\\\"timer-toggler hidden\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Hide timers\", options) : helperMissing.call(depth0, \"__\", \"Hide timers\", options)))\n        + \"\\\" role=\\\"button\\\"><span class=\\\"icon-clock\\\"></span></a>\\n    \";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"timer-box\\\">\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.zenMode)),stack1 == null || stack1 === false ? stack1 : stack1.enabled), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"timer-wrapper\\\" aria-hidden=\\\"\";\n      if (helper = helpers.ariaHidden) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.ariaHidden); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\\n\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function timerboxTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Default config values, see below.\n     */\n    var defaults = {\n      zenMode: {\n        enabled: true,\n        startHidden: false\n      }\n    };\n\n    /**\n     * Creates and initialize the timerbox component.\n     * Please not the component IS NOT rendered.\n     * You'll have to render it by yourself.\n     *\n     * @param {Object} config\n     * @param {Boolean} [config.zenMode = true] - zen mode adds a button to hide the countdowns to stay zen\n     * @param {Object[]} [config.timers] - the timers to start with\n     * @param {Boolean} [config.displayWarning = true] - let the countdown display their warning (contextual)\n     * @returns {timerbox} the component, initialized and rendered\n     */\n    function timerboxFactory(config) {\n      var $zenModeToggler;\n      var $countdownContainer;\n\n      /**\n       * @typedef {Object} timerbox\n       */\n      var timerbox = component({\n        /***\n         * Update the displayed timers.\n         * Compare the current and the given, it will add,remove and update timers.\n         *\n         * @param {Object[]} timers - the new timers\n         * @returns {Promise<Array>} resolves when all timers are up to date (with the result of all the update operations)\n         *\n         * @fires timerbox#update the update is done\n         */\n        update: function update(timers) {\n          var self = this;\n          var updating = [];\n\n          //remove timers\n          var timerIdsToRemove = _.difference(_.keys(this.timers), _.keys(timers));\n          if (timerIdsToRemove.length) {\n            _.forEach(timerIdsToRemove, function (timerId) {\n              updating.push(self.removeTimer(timerId));\n            });\n          }\n\n          //add/update\n          _.forEach(timers, function (timer, id) {\n            if (typeof self.timers[id] === 'undefined') {\n              updating.push(self.addTimer(id, timer));\n            } else {\n              updating.push(self.updateTimer(id, timer));\n            }\n          });\n          return Promise.all(updating).then(function (results) {\n            //show the toggler only if there's timers\n            if (_.size(self.timers) > 0) {\n              hider.show($zenModeToggler);\n            } else {\n              hider.hide($zenModeToggler);\n            }\n\n            /**\n             * The timer box update is done\n             * @event timerbox#update\n             * @param {Object[]} timers - ALL update results (includes removals)\n             */\n            self.trigger('update', results);\n            return results;\n          });\n        },\n        /**\n         * Get the current timers\n         * @return {Object[]} the timers\n         */\n        getTimers: function getTimers() {\n          return this.timers;\n        },\n        /**\n         * Adds a new timer to the box\n         * @param {String} id - the timer unique identifier\n         * @param {Object} timer - the new timer\n         * @return {Promise<Object|Boolean>} resolves with the timer once added or false\n         *\n         * @fires timerbox#timerchange something changes in a timer\n         * @fires timerbox#timeradd a new timer is in the box\n         * @fires timerbox#timerstart a timer get started\n         * @fires timerbox#timerstop a timer get stopped\n         * @fires timerbox#timerend a timer get completed\n         * @fires timerbox#change spread from the countdown\n         */\n        addTimer: function addTimer(id, timer) {\n          var self = this;\n          if (this.is('rendered') && typeof this.timers[id] === 'undefined') {\n            return new Promise(function (resolve) {\n              var countdown = countdownFactory($countdownContainer, _.defaults(timer, {\n                displayWarning: self.config.displayWarning\n              })).on('render', function () {\n                //keep track of the new timer\n                //and the countdown component\n                self.timers[id] = _.clone(timer);\n                self.timers[id].countdown = this;\n\n                /**\n                 * The timers have changed (add, update, remove)\n                 * @event timerbox#timerchange\n                 * @param {String} action - add, update, remove\n                 * @param {Object} timer\n                 */\n                self.trigger('timerchange', 'add', self.timers[id]);\n\n                /**\n                 * A new timer is added\n                 * @event timerbox#timeradd\n                 * @param {Object} timer\n                 */\n                self.trigger('timeradd', self.timers[id]);\n                resolve(self.timers[id]);\n              }).on('start', function () {\n                /**\n                 * A timer starts\n                 * @event timerbox#timerstart\n                 * @param {Object} timer\n                 */\n                self.trigger('timerstart', self.timers[id]);\n              }).on('stop', function () {\n                /**\n                 * A timer stops\n                 * @event timerbox#timerstop\n                 * @param {Object} timer\n                 */\n                self.trigger('timerstop', self.timers[id]);\n              }).on('end', function () {\n                /**\n                 * A timer ends\n                 * @event timerbox#timerend\n                 * @param {Object} timer\n                 */\n                self.trigger('timerend', self.timers[id]);\n              }).on('change', function (value) {\n                if (self.timers[id]) {\n                  self.trigger('timertick', this.remainingTime, self.timers[id].scope, self.timers[id].unansweredQuestions); // propogate current timer data\n\n                  //keep the current timer data in sync\n                  self.timers[id].remainingTime = value;\n                }\n              });\n              countdown.spread(self, ['error', 'change', 'warn', 'warnscreenreader']);\n            });\n          }\n          return Promise.resolve(false);\n        },\n        /**\n         * Updates an existing timer\n         * @param {String} id - the timer unique identifier\n         * @param {Object} timer - the new timer\n         * @return {Promise<Object|Boolean>} resolves with the timer once updated or false\n         *\n         * @fires timerbox#timerchange something changes in a timer\n         * @fires timerbox#timerupdate an existing timer is updated\n         */\n        updateTimer: function updateTimer(id, timer) {\n          if (this.is('rendered') && typeof this.timers[id] !== 'undefined') {\n            this.timers[id].remainingTime = timer.remainingTime;\n            this.timers[id].unansweredQuestions = timer.unansweredQuestions;\n            this.timers[id].extraTime = timer.extraTime;\n            if (_.isNumber(timer.remainingWithoutExtraTime)) {\n              this.timers[id].remainingWithoutExtraTime = timer.remainingWithoutExtraTime;\n            }\n            if (this.timers[id].countdown) {\n              this.timers[id].countdown.update(timer.remainingTime, timer.unansweredQuestions);\n            }\n            this.trigger('timerchange', 'update', this.timers[id]);\n\n            /**\n             * A timer has been updated with external values\n             * @event timerbox#timerupdate\n             * @param {Object} timer\n             */\n            this.trigger('timerupdate', this.timers[id]);\n            return Promise.resolve(this.timers[id]);\n          }\n          return Promise.resolve(false);\n        },\n        /**\n         * Remove a timer\n         * @param {String} id - the timer unique identifier\n         * @return {Promise<Object|Boolean>} resolves with the timer once removed or false\n         *\n         * @fires timerbox#timerchange something changes in a timer\n         * @fires timerbox#timerremove a timer is removed\n         */\n        removeTimer: function removeTimer(id) {\n          var self = this;\n          if (this.is('rendered') && typeof this.timers[id] !== 'undefined') {\n            return new Promise(function (resolve) {\n              /**\n               * Artifact function, remove the timer from the component index\n               */\n              var deindex = function deindex() {\n                //keep a clone, without the component, for the event\n                var removed = _.omit(self.timers[id], 'countdown');\n\n                //remove the timer from the list\n                self.timers = _.omit(self.timers, id);\n                self.trigger('timerchange', 'remove', removed);\n\n                /**\n                 * A timer has been updated with external values\n                 * @event timerbox#timerupdate\n                 * @param {Object} timer\n                 */\n                self.trigger('timerremove', removed);\n                resolve(removed);\n              };\n              if (self.timers[id].countdown) {\n                self.timers[id].countdown.on('destroy', deindex).destroy();\n              } else {\n                deindex();\n              }\n            });\n          }\n          return Promise.resolve();\n        },\n        /**\n         * Starts all the timers contained in the box\n         * @returns {timerbox} chains\n         */\n        start: function start() {\n          _.forEach(this.timers, function (timer) {\n            if (timer.countdown) {\n              timer.countdown.start();\n            }\n          });\n          return this;\n        },\n        /**\n         * Stops all the timers contained in the box\n         * @returns {timerbox} chains\n         */\n        stop: function stop() {\n          _.forEach(this.timers, function (timer) {\n            if (timer.countdown) {\n              timer.countdown.stop();\n            }\n          });\n          return this;\n        },\n        /**\n         * Show/hide the timers aka \"zen mode\"\n         * @returns {timerbox} chains\n         * @fires timerbox#zenchange\n         */\n        toggleZenMode: function toggleZenMode() {\n          if (this.is('rendered') && this.config.zenMode.enabled) {\n            if (this.is('zen')) {\n              this.setState('zen', false);\n              $zenModeToggler.attr('title', __('Hide timers'));\n            } else {\n              this.setState('zen', true);\n              $zenModeToggler.attr('title', __('Show timers'));\n            }\n\n            /**\n             * @event timerbox#zenchange\n             * @param {Boolean} isZen\n             */\n            this.trigger('zenchange', this.is('zen'));\n          }\n          return this;\n        }\n      }, defaults).on('init', function () {\n        //index the current timers\n        this.timers = {};\n      }).on('render', function () {\n        var self = this;\n        var $element = this.getElement();\n\n        //where we append the countdowns components\n        $countdownContainer = $$1('.timer-wrapper', $element);\n\n        //set up the zen mode toggler\n        if (this.config.zenMode.enabled) {\n          $zenModeToggler = $$1('.timer-toggler', $element);\n          self.setState('zen', !!self.config.zenMode.startHidden);\n          $zenModeToggler.on('click', function (e) {\n            e.preventDefault();\n            self.toggleZenMode();\n          });\n        }\n\n        //if timers are provided with the config, we perform the 1st update\n        if (this.config.timers) {\n          this.update(this.config.timers);\n        }\n      });\n      timerbox.setTemplate(timerboxTpl);\n      _.defer(function () {\n        timerbox.init(config);\n      });\n      return timerbox;\n    }\n\n    return timerboxFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/timer/strategy/enforcedStay',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Timer strategy that enforce the test taker to stay in\n     * front of the item until the timer completes,\n     * by disabling the navigation elements.\n     *\n     * Applies on item scope, min timers if the testPart is linear\n     *\n     * @author Bertrand Chevrier <bertrand@taotesting.com>\n     */\n\n    /**\n     * Creates the strategy if it applies to the given timer\n     * @param {runner} testRunner\n     * @param {Object} timer\n     * @returns {strategy|Boolean} the strategy if applies or false\n     */\n    function enforcedStayStrategy(testRunner, timer) {\n      const testPart = testRunner.getCurrentPart();\n      if (timer && timer.type === 'min' && timer.scope === 'item' && testPart && testPart.isLinear) {\n        return {\n          name: 'enforcedStay',\n          /**\n           * setUp entry point : disable the navigation\n           */\n          setUp: function setUp() {\n            testRunner.on('enablenav.enforcestay', function () {\n              testRunner.trigger('disablenav');\n            });\n            testRunner.trigger('disablenav');\n          },\n          /**\n           * complete entry point : enables back the navigation\n           */\n          complete: function complete() {\n            this.tearDown();\n            testRunner.trigger('enablenav');\n          },\n          /**\n           * tearDown entry point : remove the listeners\n           */\n          tearDown: function tearDown() {\n            testRunner.off('enablenav.enforcestay');\n          }\n        };\n      }\n      return false;\n    }\n\n    return enforcedStayStrategy;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/timer/strategy/extraTime',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n     */\n    var precision = 1000;\n    var lastConsumedExtraTime = 0;\n\n    /**\n     * Creates the strategy if it applies to the given timer\n     * @param {runner} testRunner\n     * @param {Object} timer\n     * @returns {strategy|Boolean} the strategy if applies or false\n     */\n    function extraTimeStrategy(testRunner, timer) {\n      /**\n       * Apply the extra time to the timer 'once' and\n       * listen for test movment to add the consumed extrat time as parameter\n       * Since the extra time is global, if multiple timers use the extra time part,\n       * we take the biggest consumed extra time.\n       */\n      var applyExtraTime = function applyExtraTime() {\n        if (_.isNumber(timer.extraTime) && timer.extraTime > 0 && !timer.extraTimeSetup) {\n          timer.extraTimeSetup = true;\n          testRunner.before('move.extra skip.extra exit.extra timeout.extra', function () {\n            var consumedExtraTime = 0;\n            var testContext = testRunner.getTestContext();\n            if (timer.remainingTime < timer.extraTime) {\n              consumedExtraTime = Math.max(timer.extraTime - timer.remainingTime, 0) / precision;\n              lastConsumedExtraTime = Math.max(consumedExtraTime, lastConsumedExtraTime, testContext.extraTime.consumed);\n              testRunner.getProxy().addCallActionParams({\n                consumedExtraTime: lastConsumedExtraTime\n              });\n            }\n          }).after('move.extra skip.extra exit.extra timeout.extra', function () {\n            lastConsumedExtraTime = 0;\n          });\n        }\n      };\n      if (timer && timer.type === 'max') {\n        return {\n          name: 'extraTime',\n          /**\n           * setUp entry point : adds the extratime to the timer\n           */\n          setUp: function setUp() {\n            applyExtraTime();\n          },\n          /**\n           * setUp entry point : adds the extratime to the timer\n           */\n          start: function start() {\n            //apply at start also in case the extra time is added in between\n            applyExtraTime();\n          },\n          /**\n           * tearDown entry point : remove the listeners\n           */\n          tearDown: function tearDown() {\n            testRunner.off('move.extra skip.extra exit.extra timeout.extra');\n          }\n        };\n      }\n      return false;\n    }\n\n    return extraTimeStrategy;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/timer/strategy/guidedNavigation',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Timer strategy that enforce the test taker to stay in\n     * front of the item until the timer completes,\n     * by hidding the navigation elements.\n     * Once the timer completes, the test moves to the next item.\n     *\n     * Applies on item scope, locked timers only, linear test part and\n     * the test configuration \"guidedNavigation\"\n     *\n     * @author Bertrand Chevrier <bertrand@taotesting.com>\n     */\n\n    /**\n     * Creates the strategy if it applies to the given timer\n     * @param {runner} testRunner\n     * @param {Object} timer\n     * @returns {strategy|Boolean} the strategy if applies or false\n     */\n    function guidedNavigationStrategy(testRunner, timer) {\n      const testRunnerOptions = testRunner.getOptions();\n      const testPart = testRunner.getCurrentPart();\n      if (timer && timer.type === 'locked' && timer.scope === 'item' && testRunnerOptions.guidedNavigation === true && testPart && testPart.isLinear) {\n        return {\n          name: 'guidedNavigation',\n          /**\n           * setUp entry point : hides the navigation\n           */\n          setUp: function setUp() {\n            testRunner.trigger('hidenav');\n          },\n          /**\n           * complete entry point : enables back the navigation\n           */\n          complete: function complete() {\n            testRunner.trigger('disableitem disablenav shownav');\n            setTimeout(function () {\n              testRunner.trigger('move', 'next', 'item');\n            }, 500);\n          }\n        };\n      }\n      return false;\n    }\n\n    return guidedNavigationStrategy;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/timer/strategy/timeout',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Timeout strategy, the given scope is timedout when the timer completes.\n     *\n     * Applies on all max timers\n     *\n     * @author Bertrand Chevrier <bertrand@taotesting.com>\n     */\n\n    /**\n     * Creates the strategy if it applies to the given timer\n     * @param {runner} testRunner\n     * @param {Object} timer\n     * @returns {strategy|Boolean} the strategy if applies or false\n     */\n    function timeoutStrategy(testRunner, timer) {\n      if (timer && timer.type === 'max') {\n        return {\n          name: 'timeout',\n          /**\n           * complete entry point : timeout\n           */\n          complete: function complete() {\n            if (timer.qtiClassName && timer.source) {\n              return testRunner.timeout(timer.qtiClassName, timer.source, timer);\n            }\n          }\n        };\n      }\n      return false;\n    }\n\n    return timeoutStrategy;\n\n});\n\n","define('taoQtiTest/runner/helpers/currentItem',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * List of QTI model cardinalities\n     * @type {Object}\n     */\n    var responseCardinalities = {\n      single: 'base',\n      multiple: 'list',\n      ordered: 'list',\n      record: 'record'\n    };\n\n    /**\n     * List of QTI interaction minConstraint properties\n     * @type {Object}\n     */\n    var interactionMinConstraintProperties = {\n      matchInteraction: 'minAssociations',\n      choiceInteraction: 'minChoices',\n      orderInteraction: 'minChoices',\n      associateInteraction: 'minAssociations',\n      hottextInteraction: 'minChoices',\n      hotspotInteraction: 'minChoices',\n      graphicOrderInteraction: 'minChoices',\n      graphicAssociateInteraction: 'minAssociations',\n      selectPointInteraction: 'minChoices'\n    };\n\n    /**\n     * @typedef {currentItemHelper}\n     */\n    var currentItemHelper = {\n      /**\n       * Gets the responses declarations of the current item.\n       * @param {Object} runner - testRunner instance\n       * @returns {Object}\n       */\n      getDeclarations: function getDeclarations(runner) {\n        var itemRunner = runner.itemRunner;\n        return itemRunner._item && itemRunner._item.responses;\n      },\n      /**\n       * Gets a response declaration by the identifier of the response\n       * @param {Object} runner - testRunner instance\n       * @param {String} identifier - The identifier of the response\n       * @returns {Object|null}\n       */\n      getResponseDeclaration: function getResponseDeclaration(runner, identifier) {\n        var found = null;\n        _.forEach(currentItemHelper.getDeclarations(runner), function (declaration) {\n          var attributes = declaration.attributes || {};\n          if (attributes.identifier === identifier) {\n            found = declaration;\n            return false;\n          }\n        });\n        return found;\n      },\n      /**\n       * Convert a value to a response object\n       * @param {Array|String} value\n       * @param {String} baseType\n       * @param {String} cardinality\n       * @returns {Object}\n       */\n      toResponse: function toResponse(value, baseType, cardinality) {\n        var mappedCardinality = responseCardinalities[cardinality];\n        var response = {};\n        if (_.isString(value) || _.isNumber(value)) {\n          value = [value];\n        }\n        let transform = v => v;\n        if (baseType === 'boolean') {\n          transform = v => v === true || v === 'true';\n        } else if (baseType === 'integer') {\n          transform = v => typeof v === 'number' ? v : parseInt(v);\n        } else if (baseType === 'float') {\n          transform = v => typeof v === 'number' ? v : parseFloat(v);\n        } else if (baseType === 'directedPair' || baseType === 'pair') {\n          transform = v => {\n            if (_.isString(v)) {\n              return v.split(' ');\n            }\n            return v;\n          };\n        }\n        value = _.map(value || [], transform);\n        if (mappedCardinality) {\n          if (mappedCardinality === 'base') {\n            if (value.length === 0) {\n              //return empty response:\n              response.base = null;\n            } else {\n              response.base = {};\n              response.base[baseType] = value[0];\n            }\n          } else {\n            response[mappedCardinality] = {};\n            response[mappedCardinality][baseType] = value;\n          }\n        }\n        return response;\n      },\n      /**\n       * Checks if the provided value can be considered as null\n       * @param {Object} value\n       * @param {String} baseType\n       * @param {String} cardinality\n       * @returns {boolean}\n       */\n      isQtiValueNull: function isQtiValueNull(value, baseType, cardinality) {\n        var mappedCardinality = responseCardinalities[cardinality];\n        if (_.isObject(value) && value[mappedCardinality] === null) {\n          value = null;\n        }\n        if (_.isObject(value) && value[mappedCardinality] && 'undefined' !== typeof value[mappedCardinality][baseType]) {\n          value = value[mappedCardinality][baseType];\n        }\n        const stringyValue = 'string' === baseType || 'integer' === baseType || 'float' === baseType;\n        return null === value || stringyValue && value === '' || cardinality !== 'single' && _.isEmpty(value);\n      },\n      /**\n       * Tells if an item question has been answered or not\n       * @param {Object} response\n       * @param {String} baseType\n       * @param {String} cardinality\n       * @param {Object} [defaultValue]\n       * @param {Object} constraintValue\n       * @returns {*}\n       */\n      isQuestionAnswered: function isQuestionAnswered(response, baseType, cardinality, defaultValue, constraintValue) {\n        var answered, currentCardinality, responses;\n        var fullyAnswered = true;\n        defaultValue = _.isUndefined(defaultValue) ? null : defaultValue;\n        constraintValue = constraintValue || 0;\n        if (currentItemHelper.isQtiValueNull(response, baseType, cardinality)) {\n          answered = false;\n        } else {\n          answered = !_.isEqual(response, currentItemHelper.toResponse(defaultValue, baseType, cardinality));\n          if (constraintValue !== 0) {\n            currentCardinality = responseCardinalities[cardinality];\n            responses = response[currentCardinality][baseType] || [];\n            fullyAnswered = responses && responses.length >= constraintValue;\n          }\n          answered = answered && fullyAnswered;\n        }\n        return answered;\n      },\n      guessInteractionConstraintValues: function guessInteractionConstraintValues(runner) {\n        var itemRunner = runner.itemRunner;\n        var itemBody = itemRunner._item && itemRunner._item.bdy || {};\n        var interactions = itemBody.elements || {};\n        var constraintValues = {};\n        _.forEach(interactions, function (interaction) {\n          var attributes = interaction.attributes || {};\n          var qtiClass = interaction.__proto__.qtiClass;\n          var constraintProperty;\n          if (Object.prototype.hasOwnProperty.call(interactionMinConstraintProperties, qtiClass)) {\n            constraintProperty = interactionMinConstraintProperties[qtiClass];\n            constraintValues[attributes.responseIdentifier] = attributes[constraintProperty];\n          }\n        });\n        return constraintValues;\n      },\n      /**\n       * Tells is the current item has been answered or not\n       * The item is considered answered when at least one response has been set to not empty {base : null}\n       * @param {Object} runner - testRunner instance\n       * @param {Boolean} [partially=true] - if false all questions must have been answered\n       * @returns {Boolean}\n       */\n      isAnswered: function isAnswered(runner, partially) {\n        var itemRunner = runner.itemRunner;\n        var responses = itemRunner && itemRunner.getResponses();\n        var count = 0;\n        var empty = 0;\n        var declarations, constraintValues;\n        if (itemRunner) {\n          declarations = currentItemHelper.getDeclarations(runner);\n          constraintValues = currentItemHelper.guessInteractionConstraintValues(runner);\n          _.forEach(declarations, function (declaration) {\n            var attributes = declaration.attributes || {};\n            var response = responses[attributes.identifier];\n            var baseType = attributes.baseType;\n            var cardinality = attributes.cardinality;\n            count++;\n            if (!currentItemHelper.isQuestionAnswered(response, baseType, cardinality, declaration.defaultValue, constraintValues[attributes.identifier])) {\n              empty++;\n            }\n          });\n        }\n        if (partially === false) {\n          return count > 0 && empty === 0;\n        }\n        return count > 0 && empty < count;\n      },\n      /**\n       * Tells is the current item is valid or not.\n       * Interaction should put `{ validity: { isValid: false } }` object to `itemState` if it's invalid.\n       * - note: min/max constraints are handled by `isAnswered` method\n       * - note: doesn't check if is answered or not.\n       * @param {Object} runner - testRunner instance\n       * @returns {Boolean}\n       */\n      isValid: function isValid(runner) {\n        const itemRunner = runner.itemRunner;\n        if (itemRunner) {\n          const itemState = itemRunner && itemRunner.getState();\n          const declarations = currentItemHelper.getDeclarations(runner);\n          return !Object.values(declarations).some(function (declaration) {\n            const attributes = declaration.attributes || {};\n            const interactionState = itemState[attributes.identifier];\n            return interactionState && interactionState.validity && interactionState.validity.isValid === false;\n          });\n        }\n        return true;\n      },\n      /**\n       * Gets list of shared stimuli hrefs in the current item\n       *\n       * @param {Object} runner - testRunner instance\n       * @returns {Array}\n       */\n      getStimuliHrefs: function getStimuliHrefs(runner) {\n        var itemRunner = runner.itemRunner;\n        var itemBody = itemRunner._item && itemRunner._item.bdy || {};\n        var interactions = itemBody.elements || {};\n        return _(interactions).values().filter(function (element) {\n          return element.qtiClass === 'include';\n        }).value().map(val => val.attributes ? val.attributes.href : null);\n      },\n      /**\n       * Find the list of text stimulus ids in the current item\n       * Depends on the DOM already being loaded\n       * @param {Object} runner - testRunner instance\n       * @returns {Array}\n       */\n      getTextStimuliHrefs: function getTextStimuliHrefs(runner) {\n        var stimuli = this.getStimuliHrefs(runner);\n        var textStimuli;\n        if (stimuli.length > 0) {\n          // Filter the ones containing text:\n          textStimuli = stimuli.filter(function (stimulusHref) {\n            var domNode = document.querySelector(`.qti-include[data-href=\"${stimulusHref}\"]`);\n            return _(domNode.childNodes).some(function (child) {\n              return child.nodeType === child.TEXT_NODE;\n            });\n          });\n          return textStimuli;\n        }\n        return [];\n      }\n    };\n\n    return currentItemHelper;\n\n});\n\n","define('taoQtiTest/runner/helpers/stats',['lodash', 'taoQtiTest/runner/helpers/map', 'taoQtiTest/runner/helpers/currentItem'], function (_, mapHelper, currentItemHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    currentItemHelper = currentItemHelper && Object.prototype.hasOwnProperty.call(currentItemHelper, 'default') ? currentItemHelper['default'] : currentItemHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    var stats = {\n      /**\n       * Return scope stats that takes into account any test taker interaction made since the item has been loaded\n       * @param {String} scope - scope to consider for calculating the stats\n       * @param {Object} runner - testRunner instance\n       * @param {Boolean} sync - flag for sync the unanswered stats in exit message and the unanswered stats in the toolbox. Default false\n       * @returns {Object} the stats\n       */\n      getInstantStats(scope, runner, sync) {\n        const map = runner.getTestMap();\n        const context = runner.getTestContext();\n        const item = runner.getCurrentItem();\n        const testPart = runner.getCurrentPart();\n        const stats = _.clone(mapHelper.getScopeStats(map, context.itemPosition, scope));\n        const options = runner.getOptions() || {};\n        let partiallyAnsweredIsAnswered;\n        if (options.review) {\n          partiallyAnsweredIsAnswered = options.review.partiallyAnsweredIsAnswered;\n        }\n        if (!item.informational) {\n          const isItemCurrentlyAnswered = currentItemHelper.isAnswered(runner, partiallyAnsweredIsAnswered);\n          if (!isItemCurrentlyAnswered && item.answered) {\n            stats.answered--;\n          } else if ((isItemCurrentlyAnswered || sync) && !item.answered) {\n            stats.answered++;\n            // eslint-disable-next-line no-dupe-else-if\n          } else if (sync && !isItemCurrentlyAnswered && item.answered && testPart.isLinear) {\n            stats.answered++;\n          }\n        }\n        return stats;\n      }\n    };\n\n    return stats;\n\n});\n\n","define('taoQtiTest/runner/helpers/messages',['i18n', 'taoQtiTest/runner/helpers/stats', 'handlebars', 'lib/handlebars/helpers'], function (__, statsHelper, Handlebars, Helpers0) { 'use strict';\n\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    statsHelper = statsHelper && Object.prototype.hasOwnProperty.call(statsHelper, 'default') ? statsHelper['default'] : statsHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<b>\";\n      if (helper = helpers.header) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.header); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</b><br><br>\";\n      return buffer;\n      }\n\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.header), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function messageHeaderTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2021 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Completes an exit message\n     * @param {String} scope - scope to consider for calculating the stats\n     * @param {Object} runner - testRunner instance\n     * @param {String} message - custom message that will be appended to the unanswered stats count\n     * @param {Boolean} sync - flag for sync the unanswered stats in exit message and the unanswered stats in the toolbox\n     * @param {String|undefined} submitButtonLabel - point the user to the submit button\n     * @returns {String} Returns the message text\n     */\n    function getExitMessage(scope, runner) {\n      let message = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n      let sync = arguments.length > 3 ? arguments[3] : undefined;\n      let submitButtonLabel = arguments.length > 4 ? arguments[4] : undefined;\n      let itemsCountMessage = '';\n      const testRunnerOptions = runner.getOptions();\n      const messageEnabled = testRunnerOptions.enableUnansweredItemsWarning;\n      if (messageEnabled) {\n        itemsCountMessage = getUnansweredItemsWarning(scope, runner, sync).trim();\n        if (itemsCountMessage) {\n          itemsCountMessage += '.';\n        }\n      }\n      return `${getHeader(scope)}${itemsCountMessage} ${getActionMessage(scope, submitButtonLabel)}${message}`.trim();\n    }\n\n    /**\n     * Build message if not all items have answers\n     * @param {String} scope - scope to consider for calculating the stats\n     * @returns {String} Returns the message text\n     */\n    function getHeader(scope) {\n      let header = '';\n      if (scope === 'section' || scope === 'testSection') {\n        header = __('You are about to leave this section.');\n      } else if (scope === 'test' || scope === 'testWithoutInaccessibleItems') {\n        header = __('You are about to submit the test.');\n      } else if (scope === 'part') {\n        header = __('You are about to submit this test part.');\n      }\n      return messageHeaderTpl({\n        header: header.trim()\n      });\n    }\n\n    /**\n     * Generates the message to help users perform the action\n     * @param {String} scope - scope to consider for calculating the stats\n     * @param {String} [submitButtonLabel] - Pointed user perform click on given button\n     * @returns {String} Returns the message text\n     */\n    function getActionMessage(scope) {\n      let submitButtonLabel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : __('OK');\n      var msg;\n      switch (scope) {\n        case 'section':\n        case 'testSection':\n        case 'part':\n          return __('Click \"%s\" to continue.', submitButtonLabel).trim();\n        case 'test':\n        case 'testWithoutInaccessibleItems':\n          msg = __('You will not be able to access this test once submitted. Click \"%s\" to continue and submit the test.', submitButtonLabel);\n          return `${msg}`;\n      }\n      return '';\n    }\n\n    /**\n     * Build message for the flagged items if any.\n     * @param {Object} stats - The stats for the current context\n     * @param {String} [message] - The existing message to complete\n     * @returns {string|*}\n     */\n    function getFlaggedItemsWarning(stats) {\n      let message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      const flaggedCount = stats && stats.flagged;\n      if (!flaggedCount) {\n        return message;\n      }\n      if (message) {\n        return `${message} ${__('and you flagged %s item(s) that you can review now', flaggedCount.toString())}`;\n      }\n      return __('You flagged %s item(s) that you can review now', flaggedCount.toString());\n    }\n\n    /**\n     * Build message if not all items have answers\n     * @param {String} scope - scope to consider for calculating the stats\n     * @param {Object} runner - testRunner instance\n     * @param {Boolean} sync - flag for sync the unanswered stats in exit message and the unanswered stats in the toolbox. Default false\n     * @returns {String} Returns the message text\n     */\n    function getUnansweredItemsWarning(scope, runner, sync) {\n      const stats = statsHelper.getInstantStats(scope, runner, sync);\n      const unansweredCount = stats && stats.questions - stats.answered;\n      const flaggedCount = stats && stats.flagged;\n      let itemsCountMessage = '';\n      if (scope === 'section' || scope === 'testSection') {\n        itemsCountMessage = __('You answered %s of %s question(s) for this section of the test', stats.answered.toString(), stats.questions.toString());\n        if (flaggedCount) {\n          itemsCountMessage += `, ${__('and flagged %s of them', flaggedCount.toString())}`;\n        }\n      } else if (scope === 'test' || scope === 'testWithoutInaccessibleItems') {\n        if (unansweredCount > 1) {\n          itemsCountMessage = __('There are %s unanswered questions', unansweredCount.toString());\n        } else if (unansweredCount === 1) {\n          itemsCountMessage = __('There is %s unanswered question', unansweredCount.toString());\n        }\n        if (flaggedCount) {\n          itemsCountMessage = getFlaggedItemsWarning(stats, itemsCountMessage);\n        }\n      } else if (scope === 'part') {\n        if (unansweredCount > 1) {\n          itemsCountMessage = __('There are %s unanswered questions in this part of the test', unansweredCount.toString());\n        } else if (unansweredCount === 1) {\n          itemsCountMessage = __('There is %s unanswered question in this part of the test', unansweredCount.toString());\n        }\n        if (flaggedCount) {\n          itemsCountMessage = getFlaggedItemsWarning(stats, itemsCountMessage);\n        }\n      }\n      itemsCountMessage = itemsCountMessage.trim();\n      return itemsCountMessage;\n    }\n    var messages = {\n      getExitMessage: getExitMessage\n    };\n\n    return messages;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/timer/strategy/warnSectionLeaving',['lodash', 'i18n', 'taoQtiTest/runner/helpers/messages', 'taoQtiTest/runner/helpers/navigation', 'taoQtiTest/runner/config/states', 'taoQtiTest/runner/helpers/map'], function (_, __, messages, navigationHelper, states, mapHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    messages = messages && Object.prototype.hasOwnProperty.call(messages, 'default') ? messages['default'] : messages;\n    navigationHelper = navigationHelper && Object.prototype.hasOwnProperty.call(navigationHelper, 'default') ? navigationHelper['default'] : navigationHelper;\n    states = states && Object.prototype.hasOwnProperty.call(states, 'default') ? states['default'] : states;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The message to display when exiting\n     */\n    var exitMessage = __('Once you close this section, you cannot return to it or change your answers.');\n\n    /**\n     * Creates the strategy if it applies to the given timer\n     * @param {runner} testRunner\n     * @param {Object} timer\n     * @returns {strategy|Boolean} the strategy if applies or false\n     */\n    function warnSectionLeavingStrategy(testRunner, timer) {\n      /**\n       * Check if the movment leads to leaving an active timed section\n       * @param {String} direction - the move direction (next, previous or jump)\n       * @param {String} scope - the move scope (item, section, testPart)\n       * @param {Number} [position] - the position in case of jump\n       * @returns {Boolean}\n       */\n      var leaveTimedSection = function leaveTimedSection(direction, scope, position) {\n        var context = testRunner.getTestContext();\n        var map = testRunner.getTestMap();\n        if (!context.isTimeout && context.itemSessionState !== states.itemSession.closed && context.sectionId === timer.source) {\n          return navigationHelper.isLeavingSection(context, map, direction, scope, position);\n        }\n        return false;\n      };\n      if (timer && timer.scope === 'section' && timer.type === 'max') {\n        return {\n          name: 'warnSectionLeaving',\n          /**\n           * setUp entry point : blocks the move to display a message if needed\n           */\n          setUp: function setUp() {\n            testRunner.off('move.warntimedsection skip.warntimedsection').before('move.warntimedsection skip.warntimedsection', function (e, type, scope, position) {\n              const testContext = testRunner.getTestContext();\n              const testMap = testRunner.getTestMap();\n              const testRunnerOptions = testRunner.getOptions();\n              const timerConfig = testRunnerOptions.timer || {};\n              const itemIdentifier = testContext.itemIdentifier;\n              const isLast = navigationHelper.isLast(testMap, itemIdentifier);\n              const endTestWarning = mapHelper.hasItemCategory(testMap, itemIdentifier, 'endTestWarning', true);\n              const noExitTimedSectionWarning = mapHelper.hasItemCategory(testMap, itemIdentifier, 'noExitTimedSectionWarning', true);\n              var movePromise = new Promise(function (resolve, reject) {\n                // endTestWarning has already been displayed, so we don't repeat the warning\n                if (isLast && endTestWarning) {\n                  resolve();\n                  // display a message if we exit a timed section\n                } else if (leaveTimedSection(type || 'next', scope, position) && !noExitTimedSectionWarning && !timerConfig.keepUpToTimeout) {\n                  const submitButtonLabel = __('Close this Section');\n                  testRunner.trigger('confirm.exittimed', messages.getExitMessage('section', testRunner, exitMessage, false, submitButtonLabel), resolve, reject, {\n                    buttons: {\n                      labels: {\n                        ok: submitButtonLabel,\n                        cancel: __('Review my Answers')\n                      }\n                    }\n                  });\n                } else {\n                  resolve();\n                }\n              });\n              movePromise.catch(function cancelMove() {\n                // Use `defer` to be sure the timer resume will occur after the move event is\n                // finished to be handled. Otherwise, the duration plugin will be frozen and\n                // the additional time will not be taken into account!\n                _.defer(function () {\n                  testRunner.trigger('enableitem enablenav');\n                });\n              });\n              return movePromise;\n            });\n          },\n          /**\n           * complete entry point : removes the listeners\n           */\n          complete: function complete() {\n            return this.tearDown();\n          },\n          /**\n           * tearDown entry point : removes the listeners\n           */\n          tearDown: function tearDown() {\n            testRunner.off('move.warntimedsection skip.warntimedsection');\n          }\n        };\n      }\n      return false;\n    }\n\n    return warnSectionLeavingStrategy;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/timer/strategy/strategyHandler',['lodash', 'taoQtiTest/runner/plugins/controls/timer/strategy/enforcedStay', 'taoQtiTest/runner/plugins/controls/timer/strategy/extraTime', 'taoQtiTest/runner/plugins/controls/timer/strategy/guidedNavigation', 'taoQtiTest/runner/plugins/controls/timer/strategy/timeout', 'taoQtiTest/runner/plugins/controls/timer/strategy/warnSectionLeaving'], function (_, extraTimeStrategy, enforcedStayStrategy, guidedNavigationStrategy, timeoutStrategy, warnSectionLeavingStrategy) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    extraTimeStrategy = extraTimeStrategy && Object.prototype.hasOwnProperty.call(extraTimeStrategy, 'default') ? extraTimeStrategy['default'] : extraTimeStrategy;\n    enforcedStayStrategy = enforcedStayStrategy && Object.prototype.hasOwnProperty.call(enforcedStayStrategy, 'default') ? enforcedStayStrategy['default'] : enforcedStayStrategy;\n    guidedNavigationStrategy = guidedNavigationStrategy && Object.prototype.hasOwnProperty.call(guidedNavigationStrategy, 'default') ? guidedNavigationStrategy['default'] : guidedNavigationStrategy;\n    timeoutStrategy = timeoutStrategy && Object.prototype.hasOwnProperty.call(timeoutStrategy, 'default') ? timeoutStrategy['default'] : timeoutStrategy;\n    warnSectionLeavingStrategy = warnSectionLeavingStrategy && Object.prototype.hasOwnProperty.call(warnSectionLeavingStrategy, 'default') ? warnSectionLeavingStrategy['default'] : warnSectionLeavingStrategy;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The list of available strategies\n     * TODO this list could come from the configuration\n     */\n    var defaultAvailableStrategies = [extraTimeStrategy, enforcedStayStrategy, guidedNavigationStrategy, timeoutStrategy, warnSectionLeavingStrategy];\n\n    /**\n     * Get a strategyHandler object for a testRunner instance\n     * @param {runner} testRunner - the test runner instance\n     * @param {strategy[]} strategies - the list of available strategies, to override the defaults\n     * @returns {strategyHandler} the handler\n     */\n    function getStrategyHandler(testRunner, strategies) {\n      var strategyHandler;\n\n      /**\n       * To keep track of the active strategies, per timer\n       */\n      var actives = {};\n\n      /**\n       * Artifact function to apply an action to a list of strategy\n       * @param {String} timerId - the id of the timer to run the actions against\n       * @param {String} action -\n       */\n      var applyToStrategies = function applyToStrategies(timerId, action) {\n        var api = _.keys(strategyHandler);\n        if (_.isEmpty(timerId) || _.isEmpty(action) || !api.includes(action)) {\n          throw new TypeError('Invalid timer id or unauthorized action');\n        }\n        if (!_.isArray(actives[timerId])) {\n          return Promise.resolve();\n        }\n        return Promise.all(_.map(actives[timerId], function (strategy) {\n          if (_.isFunction(strategy[action])) {\n            return strategy[action]();\n          }\n        }));\n      };\n      var availableStrategies = strategies || defaultAvailableStrategies;\n\n      //quick validation of the test runner\n      if (!testRunner || !_.isFunction(testRunner.on) || !_.isFunction(testRunner.getTestContext)) {\n        throw new TypeError('The strategy handler needs a valid test runner.');\n      }\n\n      /**\n       * @typedef {Object} strategyHandler\n       */\n      strategyHandler = {\n        /**\n         * Try to set up strategies for the given timer\n         * @param {Object} timer\n         * @returns {Promise} resolves once the set up is done\n         */\n        setUp: function setUp(timer) {\n          _.forEach(availableStrategies, function (availableStrategy) {\n            var strategy = availableStrategy(testRunner, timer);\n            if (strategy !== false) {\n              actives[timer.id] = actives[timer.id] || [];\n              actives[timer.id].push(strategy);\n            }\n          });\n          return applyToStrategies(timer.id, 'setUp');\n        },\n        /**\n         * Get the actives strategies for the given timer\n         * @returns {strategy[]} the actives strategies\n         */\n        getActives: function getActives(timer) {\n          if (timer && timer.id && _.isArray(actives[timer.id])) {\n            return actives[timer.id];\n          }\n          return [];\n        },\n        /**\n         * Call the timer's strategies \"start\"\n         * @param {Object} timer\n         * @returns {Promise}\n         */\n        start: function start(timer) {\n          return applyToStrategies(timer.id, 'start');\n        },\n        /**\n         * Call the timer's strategies \"stop\"\n         * @param {Object} timer\n         * @returns {Promise}\n         */\n        stop: function stop(timer) {\n          return applyToStrategies(timer.id, 'stop');\n        },\n        /**\n         * Call the timer's strategies \"complete\"\n         * @param {Object} timer\n         * @returns {Promise}\n         */\n        complete: function complete(timer) {\n          return applyToStrategies(timer.id, 'complete');\n        },\n        /**\n         * Call the timer's strategies \"tearDown\"\n         * will also un-reference the strategies\n         * @param {Object} timer\n         * @returns {Promise}\n         */\n        tearDown: function tearDown(timer) {\n          return applyToStrategies(timer.id, 'tearDown').then(function () {\n            actives = _.omit(actives, timer.id);\n          });\n        }\n      };\n      return strategyHandler;\n    }\n\n    return getStrategyHandler;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/timer/timers',['lodash', 'i18n', 'moment', 'core/format', 'core/logger'], function (_, __, moment, format, loggerFactory) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    moment = moment && Object.prototype.hasOwnProperty.call(moment, 'default') ? moment['default'] : moment;\n    format = format && Object.prototype.hasOwnProperty.call(format, 'default') ? format['default'] : format;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n     */\n    var logger = loggerFactory('taoQtiTest/runner/plugins/controls/timer/timers');\n\n    /**\n     * We receive values in seconds, so we convert them to milliseconds\n     */\n    var precision = 1000;\n\n    /**\n     * The timer's scope\n     */\n    var scopes = ['item', 'section', 'testPart', 'test'];\n\n    /**\n     * Map qti class names to scopes\n     */\n    var scopeMapping = {\n      assessmentTest: 'test',\n      assessmentSection: 'section',\n      assessmentItemRef: 'item'\n    };\n\n    /**\n     * helps you get the scope from a scope or qti class name\n     * @param {String} value - scope or qti class name\n     * @returns {String?} the scope\n     */\n    var getScope = function getScope(value) {\n      if (scopeMapping[value]) {\n        return scopeMapping[value];\n      }\n      if (scopes.includes(value)) {\n        return value;\n      }\n      return null;\n    };\n\n    /**\n     * The text of warning messages\n     * TODO add warning messages for other timers types\n     */\n    var warningMessages = {\n      item: __('Warning – You have %s remaining to complete this item.'),\n      section: __('Warning – You have %s remaining to complete this section.'),\n      testPart: __('Warning – You have %s remaining to complete this test part.'),\n      test: __('Warning – You have %s remaining to complete this test.')\n    };\n\n    /**\n     * The text of warning messages for screenreader\n     */\n    const warningMessagesForScreenraeder = {\n      item: __('You have %s remaining to complete the current item.'),\n      section: __('You have %s left to answer remaining %s questions.'),\n      testPart: __('You have %s left to answer remaining %s questions.'),\n      test: __('You have %s left to answer remaining %s questions.')\n    };\n\n    /**\n     * Get the timers objects from the time constraints andt the given config\n     * @param {Object[]} timeConstraints - as defined in the testContext\n     * @param {Boolean} isLinear - is the current navigation mode linear\n     * @param {Object} [config] - timers config\n     * @param {Object[]} [config.warnings] - the warnings to apply to the timers (max only for now)\n     * @param {Object[]} [config.warnings] - the warnings to apply to the timers (max only for now)\n     * @returns {timer[]} the timers\n     */\n    function getTimers(timeConstraints, isLinear, config) {\n      var timers = {};\n\n      /**\n       * The warnings comes in a weird format (ie. {scope:{threshold:level}}) , so we reformat them\n       */\n      var constraintsWarnings = _.reduce(config.warnings, function (acc, warnings, qtiScope) {\n        var scope = getScope(qtiScope);\n        acc[scope] = _.map(warnings, function (value, key) {\n          return {\n            threshold: parseInt(key, 10) * precision,\n            message: function applyMessage(remainingTime) {\n              var displayRemaining = moment.duration(remainingTime / precision, 'seconds').humanize();\n              return format(warningMessages[scope], displayRemaining);\n            },\n            level: value,\n            shown: false\n          };\n        });\n        return acc;\n      }, {});\n\n      /**\n       * The warnings comes in a weird format (ie. {scope:[threshold, ...]}) , so we reformat them\n       */\n      const constraintsWarningsForScreenreader = _.reduce(config.warningsForScreenreader, (acc, warnings, qtiScope) => {\n        const scope = getScope(qtiScope);\n        acc[scope] = _.map(warnings, value => ({\n          threshold: parseInt(value, 10) * precision,\n          message: function applyMessage(remainingTime, unansweredQuestions) {\n            const displayRemaining = moment.duration(remainingTime / precision, 'seconds').humanize();\n            return format(warningMessagesForScreenraeder[scope], displayRemaining, unansweredQuestions);\n          },\n          scope,\n          shown: false\n        }));\n        return acc;\n      }, {});\n\n      /**\n       * Build a timer of a given type from a time constraints\n       * @param {String} type - min, max, locked\n       * @param {Object} constraintData\n       * @returns {timer} timer\n       */\n      var buildTimer = function buildTimer(type, constraintData) {\n        /**\n         * @typedef {Object} timer\n         * @property {String} id - identify the timer (for max, it's the source for backward compat)\n         * @property {String} type - min, max or locked\n         * @property {String} label - the title to display\n         * @property {String} scope - the timer's scope (item, section, etc.)\n         * @property {String} qtiClassName - the QTI class of the timers applies to\n         * @property {String} source - the ID of the element the timers belongs to\n         * @property {Number} extraTime - additional time data, object\n         * @property {Number} originalTime - the starting value of the timer, never changes, in ms.\n         * @property {Number} remainingTime - current value, in ms.\n         * @property {Number} remainingWithoutExtraTime - remaining time without extra time, in ms.\n         * @property {Number} total - total time (original time + extra time), in ms.\n         */\n        var timer = _.pick(constraintData, ['label', 'scope', 'source', 'extraTime', 'qtiClassName']);\n        timer.type = type;\n        timer.allowLateSubmission = constraintData.allowLateSubmission;\n        if (type === 'min') {\n          timer.id = `${type}-${constraintData.scope}-${constraintData.source}`;\n          timer.originalTime = constraintData.minTime * precision;\n          timer.remainingTime = constraintData.minTimeRemaining * precision;\n        } else {\n          timer.id = constraintData.source;\n          timer.originalTime = constraintData.maxTime * precision;\n          timer.remainingTime = constraintData.maxTimeRemaining * precision;\n        }\n        timer.remainingWithoutExtraTime = timer.remainingTime;\n        if (timer.extraTime && timer.type !== 'min') {\n          timer.extraTime.consumed = timer.extraTime.consumed * precision;\n          timer.extraTime.remaining = timer.extraTime.remaining * precision;\n          timer.extraTime.total = timer.extraTime.total * precision;\n          timer.total = timer.originalTime + timer.extraTime.total;\n          timer.remainingTime += timer.extraTime.remaining;\n        }\n\n        //TODO supports warnings for other types\n        if (type === 'max' && _.isArray(constraintsWarnings[timer.scope])) {\n          timer.warnings = constraintsWarnings[timer.scope];\n        }\n        if (_.isArray(constraintsWarningsForScreenreader[timer.scope])) {\n          timer.warningsForScreenreader = constraintsWarningsForScreenreader[timer.scope];\n        }\n        const stats = config.questionsStats[timer.scope];\n        timer.unansweredQuestions = stats && stats.questions - stats.answered;\n        return timer;\n      };\n      _.forEach(timeConstraints, function (timeConstraint) {\n        var constraintData = _.clone(timeConstraint);\n        var newTimer;\n        constraintData.scope = getScope(timeConstraint.scope || timeConstraint.qtiClassName);\n        if (!constraintData.scope) {\n          logger.warn('Wrong data, a time constraint should apply to a valid scope, skipping');\n        } else if (constraintData.minTime === false && constraintData.maxTime === false) {\n          logger.warn('Time constraint defined with no time, skipping');\n\n          // minTime = maxTime -> one locked timer\n        } else if (config.guidedNavigation && isLinear && constraintData.maxTime && constraintData.minTime && constraintData.minTime === constraintData.maxTime && constraintData.maxTime > 0) {\n          newTimer = buildTimer('locked', constraintData);\n          timers[newTimer.id] = newTimer;\n        } else {\n          //minTime -> min timer\n          if (isLinear && constraintData.minTime && constraintData.minTime > 0) {\n            newTimer = buildTimer('min', constraintData);\n            timers[newTimer.id] = newTimer;\n          }\n\n          //maxTime -> max timer\n          if (constraintData.maxTime && constraintData.maxTime > 0) {\n            newTimer = buildTimer('max', constraintData);\n            timers[newTimer.id] = newTimer;\n          }\n        }\n      });\n      logger.debug('Timers built from timeConstraints', timers);\n      return timers;\n    }\n\n    return getTimers;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/timer/plugin',['jquery', 'lodash', 'taoTests/runner/plugin', 'taoQtiTest/runner/plugins/controls/timer/strategy/strategyHandler', 'taoQtiTest/runner/plugins/controls/timer/component/timerbox', 'taoQtiTest/runner/plugins/controls/timer/timers', 'taoQtiTest/runner/helpers/isReviewPanelEnabled', 'taoQtiTest/runner/helpers/stats', 'handlebars', 'lib/handlebars/helpers'], function ($$1, _, pluginFactory, getStrategyHandler, timerboxFactory, timersFactory, isReviewPanelEnabled, statsHelper, Handlebars, Helpers0) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    getStrategyHandler = getStrategyHandler && Object.prototype.hasOwnProperty.call(getStrategyHandler, 'default') ? getStrategyHandler['default'] : getStrategyHandler;\n    timerboxFactory = timerboxFactory && Object.prototype.hasOwnProperty.call(timerboxFactory, 'default') ? timerboxFactory['default'] : timerboxFactory;\n    timersFactory = timersFactory && Object.prototype.hasOwnProperty.call(timersFactory, 'default') ? timersFactory['default'] : timersFactory;\n    isReviewPanelEnabled = isReviewPanelEnabled && Object.prototype.hasOwnProperty.call(isReviewPanelEnabled, 'default') ? isReviewPanelEnabled['default'] : isReviewPanelEnabled;\n    statsHelper = statsHelper && Object.prototype.hasOwnProperty.call(statsHelper, 'default') ? statsHelper['default'] : statsHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n      return \"<div aria-live=\\\"polite\\\" class=\\\"visible-hidden\\\"></div>\\n\";\n      });\n    function screenreaderNotificationTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    // timeout after which screenreader notifcation should be cleaned up\n    const screenreaderNotificationTimeout = 20000;\n\n    /**\n     * Creates the plugin\n     */\n    var plugin = pluginFactory({\n      name: 'timer',\n      /**\n       * Install step, add behavior before the lifecycle\n       */\n      install() {\n        const testRunner = this.getTestRunner();\n\n        /**\n         * Load the timers, from the given timeConstraints and reading the current value in the store\n         * @param {store} timeStore - where the values are read\n         * @param {Object} config - the current config, especially for the warnings\n         * @returns {Promise<Object[]>} the list of timers for the current context\n         */\n        this.loadTimers = function loadTimers(timeStore, config) {\n          const testContext = testRunner.getTestContext();\n          const testPart = testRunner.getCurrentPart();\n          const isLinear = testPart && testPart.isLinear;\n          const timeConstraints = testContext.timeConstraints;\n          const timers = timersFactory(timeConstraints, isLinear, config);\n          return Promise.all(_.map(timers, function (timer) {\n            return timeStore.getItem(`consumed_${timer.id}`).then(function (savedConsumedTime) {\n              if (_.isNumber(savedConsumedTime) && savedConsumedTime >= 0 && config.restoreTimerFromClient) {\n                timer.remainingTime = timer.originalTime + timer.extraTime.total - savedConsumedTime;\n              }\n            });\n          })).then(function () {\n            return timers;\n          });\n        };\n\n        /**\n         * Save consumed time values into the store\n         * @param {store} timeStore - where the values are saved\n         * @param {Object[]} timers - the timers to save\n         * @returns {Promise} resolves once saved\n         */\n        this.saveTimers = function saveTimers(timeStore, timers) {\n          return Promise.all(_.map(timers, function (timer) {\n            return timeStore.setItem(`consumed_${timer.id}`, timer.originalTime + timer.extraTime.total - timer.remainingTime);\n          }));\n        };\n\n        //define the \"timer\" store as \"volatile\" (removed on browser change).\n        testRunner.getTestStore().setVolatile(this.getName());\n      },\n      /**\n       * Initializes the plugin (called during runner's init)\n       *\n       * @returns {Promise}\n       */\n      init: function init() {\n        const self = this;\n        const testRunner = this.getTestRunner();\n        const testRunnerOptions = testRunner.getOptions();\n        let screenreaderNotifcationTimeoutId;\n        const stats = {};\n        ['test', 'testPart', 'section', 'item'].forEach(scope => Object.assign(stats, {\n          [scope]: statsHelper.getInstantStats(scope, testRunner)\n        }));\n\n        /**\n         * Plugin config,\n         */\n        const config = Object.assign({\n          /**\n           * An option to control is the warnings are contextual or global\n           */\n          contextualWarnings: false,\n          /**\n           * The list of configured warnings\n           */\n          warnings: testRunnerOptions.timerWarning || {},\n          /**\n           * The list of configured warnings for screenreaders\n           */\n          warningsForScreenreader: testRunnerOptions.timerWarningForScreenreader || {},\n          /**\n           * The guided navigation option\n           */\n          guidedNavigation: testRunnerOptions.guidedNavigation,\n          /**\n           * Restore timer from client.\n           */\n          restoreTimerFromClient: testRunnerOptions.timer && testRunnerOptions.timer.restoreTimerFromClient,\n          /**\n           * Questions stats\n           */\n          questionsStats: stats\n        }, this.getConfig());\n\n        /**\n         * Set up the strategy handler\n         */\n        const strategyHandler = getStrategyHandler(testRunner);\n\n        /**\n         * dispatch errors to the test runner\n         * @param {Error} err - to dispatch\n         */\n        const handleError = err => {\n          testRunner.trigger('error', err);\n        };\n        function loadSavedTimers(timeStore) {\n          const testContext = testRunner.getTestContext();\n          //update the timers before each item\n          if (self.timerbox && testContext.timeConstraints) {\n            return self.loadTimers(timeStore, config).then(function (timers) {\n              return self.timerbox.update(timers);\n            }).catch(handleError);\n          }\n        }\n        return new Promise(function (resolve) {\n          //load the plugin store\n          return testRunner.getPluginStore(self.getName()).then(function (timeStore) {\n            testRunner.before('renderitem', function () {\n              return loadSavedTimers(timeStore);\n            }).before('enableitem', function () {\n              if (config.restoreTimerFromClient) {\n                return loadSavedTimers(timeStore);\n              }\n            }).on('tick', function (elapsed) {\n              if (self.timerbox) {\n                const timers = self.timerbox.getTimers();\n                const updatedTimers = Object.keys(timers).reduce((acc, timerName) => {\n                  const statsScope = statsHelper.getInstantStats(timers[timerName].scope, testRunner);\n                  const unansweredQuestions = statsScope && statsScope.questions - statsScope.answered;\n                  acc[timerName] = Object.assign({}, timers[timerName], {\n                    remainingTime: timers[timerName].remainingTime - elapsed,\n                    unansweredQuestions\n                  });\n                  return acc;\n                }, {});\n                self.timerbox.update(updatedTimers).catch(handleError);\n              }\n            }).after('renderitem', function () {\n              if (self.timerbox) {\n                $$1(self.timerbox.getElement()).find('.timer-wrapper').attr('aria-hidden', isReviewPanelEnabled(testRunner));\n                self.timerbox.start();\n              }\n              self.$screenreaderWarningContainer.text('');\n            }).after('enableitem', function () {\n              if (self.timerbox && config.restoreTimerFromClient) {\n                //this will \"resume\" the countdowns if timers have client mode\n                self.timerbox.start();\n              }\n            }).on('move skip', function () {\n              if (self.timerbox) {\n                //this will \"pause\" the countdowns\n                self.timerbox.stop();\n              }\n            }).on('disableitem', function () {\n              if (self.timerbox && config.restoreTimerFromClient) {\n                //this will \"pause\" the countdowns if timers have client mode\n                self.timerbox.stop();\n              }\n            });\n            timeStore.getItem('zen-mode').then(function (startZen) {\n              //set up the timerbox\n              self.timerbox = timerboxFactory({\n                ariaHidden: isReviewPanelEnabled(testRunner),\n                zenMode: {\n                  enabled: true,\n                  startHidden: !!startZen\n                },\n                displayWarning: config.contextualWarnings\n              }).on('change', _.throttle(function () {\n                //update the store with the current timer values\n                self.saveTimers(timeStore, this.getTimers());\n              }, 1000)).on('timeradd', function (timer) {\n                strategyHandler.setUp(timer).catch(handleError);\n              }).on('timerremove', function (timer) {\n                strategyHandler.tearDown(timer).catch(handleError);\n              }).on('timerstart', function (timer) {\n                strategyHandler.start(timer).catch(handleError);\n              }).on('timerstop', function (timer) {\n                strategyHandler.stop(timer).catch(handleError);\n              }).on('timerend', function (timer) {\n                strategyHandler.complete(timer).catch(handleError);\n              }).on('timerchange', function (action, timer) {\n                //backward compatible events\n                self.trigger(`${action}timer`, timer.qtiClassName, timer);\n              }).on('zenchange', function (isZen) {\n                timeStore.setItem('zen-mode', !!isZen);\n              }).on('init', resolve).on('error', handleError);\n\n              // share this timer values to use in other components\n              self.timerbox.spread(testRunner, 'timertick');\n              if (!config.contextualWarnings) {\n                self.timerbox.on('warn', function (message, level) {\n                  if (level && message) {\n                    testRunner.trigger(level, message);\n                  }\n                });\n\n                // debounce used to prevent multiple invoking at the same time\n                self.timerbox.on('warnscreenreader', _.debounce((message, remainingTime, scope) => {\n                  const statsScope = statsHelper.getInstantStats(scope, testRunner);\n                  const unansweredQuestions = statsScope && statsScope.questions - statsScope.answered;\n                  if (screenreaderNotifcationTimeoutId) {\n                    clearTimeout(screenreaderNotifcationTimeoutId);\n                  }\n                  self.$screenreaderWarningContainer.text(message(remainingTime, unansweredQuestions));\n                  screenreaderNotifcationTimeoutId = setTimeout(() => self.$screenreaderWarningContainer.text(''), screenreaderNotificationTimeout);\n                }, 1000, {\n                  'leading': true,\n                  'trailing': false\n                }));\n              }\n            }).catch(handleError);\n          });\n        });\n      },\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        const $container = this.getAreaBroker().getControlArea();\n        this.$screenreaderWarningContainer = $$1(screenreaderNotificationTpl());\n        this.timerbox.render($container);\n        $container.append(this.$screenreaderWarningContainer);\n      },\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        if (this.timerbox) {\n          this.timerbox.stop().destroy();\n        }\n      },\n      /**\n       * Shows the timers\n       */\n      show: function show() {\n        if (this.timerbox) {\n          this.timerbox.show();\n        }\n      },\n      /**\n       * Hides the timers\n       */\n      hide: function hide() {\n        if (this.timerbox) {\n          this.timerbox.hide();\n        }\n      }\n    });\n\n    return plugin;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/title/title',['jquery', 'lodash', 'taoTests/runner/plugin', 'handlebars', 'lib/handlebars/helpers', 'taoQtiTest/runner/helpers/map', 'taoQtiTest/runner/helpers/getTimerMessage', 'moment', 'taoQtiTest/runner/helpers/stats'], function ($$1, _, pluginFactory, Handlebars, Helpers0, mapHelper, getTimerMessage, moment, statsHelper) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    getTimerMessage = getTimerMessage && Object.prototype.hasOwnProperty.call(getTimerMessage, 'default') ? getTimerMessage['default'] : getTimerMessage;\n    moment = moment && Object.prototype.hasOwnProperty.call(moment, 'default') ? moment['default'] : moment;\n    statsHelper = statsHelper && Object.prototype.hasOwnProperty.call(statsHelper, 'default') ? statsHelper['default'] : statsHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n        <span data-control=\\\"\";\n      if (helper = helpers.attribute) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.attribute); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" class=\\\"qti-controls \";\n      if (helper = helpers.className) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.className); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"></span>\\n        <div data-control=\\\"\";\n      if (helper = helpers.attribute) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.attribute); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"-timer\\\" class=\\\"visible-hidden\\\"></div>\\n    \";\n      return buffer;\n      }\n\n      buffer += \"<div role=\\\"heading\\\" aria-level=\\\"1\\\" class=\\\"title-box truncate\\\">\\n    \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.titles), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</div>\\n\";\n      return buffer;\n      });\n    function titleTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n    const precision = 1000;\n    var title = pluginFactory({\n      name: 'title',\n      init: function init() {\n        const testRunner = this.getTestRunner();\n        const testMap = testRunner.getTestMap();\n        const updateTitles = () => {\n          const testContext = testRunner.getTestContext();\n          const currentPart = mapHelper.getItemPart(testMap, testContext.itemPosition);\n          const currentItem = mapHelper.getItem(testMap, testContext.itemIdentifier);\n\n          // update test title\n          if (testMap.title) {\n            this.titles.test.$title.text(testMap.title).show();\n          }\n\n          // update part title\n          if (currentPart && currentPart.label) {\n            this.titles.testPart.$title.text(` - ${currentPart.label}`).show();\n          }\n\n          // update section title\n          //@deprecated the following block seems to\n          //be very specific and need to be reworked\n          if (testContext.isDeepestSectionVisible) {\n            const section = mapHelper.getItemSection(testMap, testContext.itemPosition);\n\n            //testContext.sectionTitle is kept only for backward compat\n            this.titles.section.$title.text(` - ${section.label || testContext.sectionTitle}`).show();\n          }\n\n          // update item title\n          if (currentItem.label) {\n            this.titles.item.$title.text(` - ${currentItem.label}`).show();\n          }\n        };\n        testRunner.after('renderitem', () => {\n          _.forOwn(this.titles, (options, scope) => {\n            this.titles[scope].$title.text('');\n            this.titles[scope].$timer.text('');\n            if (scope !== 'item') {\n              this.titles[scope].stats = statsHelper.getInstantStats(scope, testRunner);\n            }\n          });\n          updateTitles();\n        }).on('timertick', (remainingTime, scope) => {\n          const title = this.titles[scope];\n          if (!title) {\n            return;\n          }\n          const {\n            $timer,\n            stats\n          } = this.titles[scope];\n          const time = moment.duration(remainingTime / precision, 'seconds');\n          const hours = time.get('hours');\n          const minutes = time.get('minutes');\n          const seconds = time.get('seconds');\n          const unansweredQuestions = stats && stats.questions - stats.answered;\n\n          // check if notification should be updated\n          if ($timer) {\n            $timer.text(getTimerMessage(hours, minutes, seconds, unansweredQuestions));\n          }\n        }).on('unloaditem', () => {\n          $$1('.qti-controls', this.$element).hide();\n        });\n      },\n      render: function render() {\n        const $container = this.getAreaBroker().getControlArea();\n        this.titles = {\n          test: {\n            attribute: 'qti-test-title',\n            className: ''\n          },\n          testPart: {\n            attribute: 'qti-test-part-title',\n            className: 'visible-hidden'\n          },\n          section: {\n            attribute: 'qti-test-position',\n            className: ''\n          },\n          item: {\n            attribute: 'qti-test-item-title',\n            className: 'visible-hidden'\n          }\n        };\n        this.$element = $$1(titleTpl({\n          titles: _.values(this.titles)\n        }));\n\n        // hide titles by default\n        $$1('.qti-controls', this.$element).hide();\n        $container.append(this.$element);\n        _.forOwn(this.titles, (_ref, scope) => {\n          let {\n            attribute\n          } = _ref;\n          this.titles[scope].$title = $container.find(`[data-control=\"${attribute}\"]`);\n          this.titles[scope].$timer = $container.find(`[data-control=\"${attribute}-timer\"]`);\n        });\n      }\n    });\n\n    return title;\n\n});\n\n","define('taoQtiTest/runner/plugins/controls/trace/itemTraceVariables',['lodash', 'moment', 'taoTests/runner/plugin'], function (_, moment, pluginFactory) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    moment = moment && Object.prototype.hasOwnProperty.call(moment, 'default') ? moment['default'] : moment;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Duration of a second in the timer's base unit\n     * @type {Number}\n     */\n    var precision = 1000;\n\n    /**\n     * Gets the current timestamp\n     * @returns {Number}\n     */\n    function timestamp() {\n      return Date.now() / precision;\n    }\n\n    /**\n     * Creates the timer plugin\n     */\n    var itemTraceVariables = pluginFactory({\n      name: 'itemTraceVariables',\n      /**\n       * Install step, add behavior before the lifecycle.\n       */\n      install: function install() {\n        //define the \"trace\" store as \"volatile\" (removed on browser change).\n        // the store name is \"trace\" for backward compatibility,\n        // best practice is to use the plugin name\n        this.getTestRunner().getTestStore().setVolatile('trace');\n      },\n      /**\n       * Initializes the plugin (called during runner's init)\n       */\n      init: function init() {\n        var testRunner = this.getTestRunner();\n        var variables = {};\n        function onError(err) {\n          testRunner.trigger('error', err);\n        }\n        return testRunner.getPluginStore('trace').then(function (tracesStore) {\n          testRunner.after('renderitem enableitem', function () {\n            var context = testRunner.getTestContext();\n            variables = {\n              ITEM_START_TIME_CLIENT: timestamp()\n            };\n            tracesStore.getItem(context.itemIdentifier).then(function (data) {\n              if (data) {\n                _.merge(variables, data);\n              }\n              return tracesStore.setItem(context.itemIdentifier, variables);\n            }).catch(onError);\n          }).before('move skip exit timeout', function () {\n            var context = testRunner.getTestContext();\n            variables.ITEM_END_TIME_CLIENT = timestamp();\n            variables.ITEM_TIMEZONE = moment().utcOffset(moment().utcOffset()).format('Z');\n            return tracesStore.setItem(context.itemIdentifier, variables).catch(onError);\n          }).before('unloaditem', function () {\n            var context = testRunner.getTestContext();\n            return testRunner.getProxy().callItemAction(context.itemIdentifier, 'storeTraceData', {\n              traceData: JSON.stringify(variables)\n            }, true);\n          });\n        });\n      }\n    });\n\n    return itemTraceVariables;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/allowSkipping',['lodash', 'i18n', 'taoTests/runner/plugin', 'taoQtiTest/runner/helpers/currentItem'], function (_, __, pluginFactory, currentItemHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    currentItemHelper = currentItemHelper && Object.prototype.hasOwnProperty.call(currentItemHelper, 'default') ? currentItemHelper['default'] : currentItemHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Default plugin options\n     * @type {Object}\n     */\n    var defaults = {\n      allowPartial: true // whether all interactions must be answered to count an item as answered\n    };\n\n    /**\n     * Plugin factory\n     * @returns {Object}\n     */\n    var allowSkipping = pluginFactory({\n      /**\n       * Plugin name\n       * @type {String}\n       */\n      name: 'allowSkipping',\n      /**\n       * Initialize plugin (called during runner's initialization)\n       * @returns {this}\n       */\n      init() {\n        const testRunner = this.getTestRunner();\n        const testRunnerOptions = testRunner.getOptions();\n        const pluginConfig = Object.assign({}, defaults, this.getConfig());\n        testRunner.before('nav-next move', () => {\n          const testContext = testRunner.getTestContext();\n          const isInteracting = !testRunner.getItemState(testContext.itemIdentifier, 'disabled');\n          const warning = pluginConfig.allowPartial ? __('A response to this item is required.') : __('A response to every question in this item is required.');\n          if (isInteracting && testRunnerOptions.enableAllowSkipping) {\n            const currenItem = testRunner.getCurrentItem();\n            //@deprecated use allowSkipping from testMap instead of the testContext\n            const allowSkipping = typeof currenItem.allowSkipping === 'boolean' ? currenItem.allowSkipping : testContext.allowSkipping;\n            if (!allowSkipping) {\n              return new Promise((resolve, reject) => {\n                if (_.size(currentItemHelper.getDeclarations(testRunner)) === 0) {\n                  return resolve();\n                }\n                if (currentItemHelper.isAnswered(testRunner, pluginConfig.allowPartial)) {\n                  return resolve();\n                }\n                if (!testRunner.getState('alerted.notallowed')) {\n                  // Only show one alert for itemSessionControl\n\n                  testRunner.setState('alerted.notallowed', true);\n                  testRunner.trigger('alert.notallowed', warning, () => {\n                    testRunner.trigger('resumeitem');\n                    reject();\n                    testRunner.setState('alerted.notallowed', false);\n                  });\n                }\n              });\n            }\n          }\n        });\n      }\n    });\n\n    return allowSkipping;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/next/nextWarningHelper',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * This is a helper for navigation plugins. It decides if a warning should be displayed\n     * before actually moving to the next item\n     *\n     * @author Christophe Noël <christophe@taotesting.com>\n     */\n\n    /**\n     * Convert a value to a boolean\n     * @param {*} value\n     * @param {Boolean} defaultValue\n     * @returns {Boolean}\n     */\n    var toBoolean = function toBoolean(value, defaultValue) {\n      if (typeof value === 'undefined') {\n        return defaultValue;\n      } else {\n        return value === true || value === 'true';\n      }\n    };\n\n    /**\n     * @param {Object} options\n     * @param {Boolean} options.endTestWarning - enables the end test warning, when applicable\n     * @param {Boolean} options.isLast - if the item is the last of the test\n     * @param {Boolean} options.isLinear - if the current part is linear\n     * @param {Boolean} options.nextItemWarning - enables the next item warning, when applicable\n     * @param {Boolean} options.nextPartWarning - enables the next item warning on part change\n     * @param {Boolean} options.stats - current state of the test\n     * @param {Object} options.nextPart - description of the next part of the test\n     * @param {Number} options.remainingAttempts - remaining attempts for the current item\n     * @param {String} options.testPartId - current test part identifier\n     * @param {Boolean} options.unansweredOnly - warn only if there are unanswered/flagged items\n     * @returns {Object}\n     */\n    var nextWarningHelper = function nextWarningHelper(options) {\n      var endTestWarning = toBoolean(options.endTestWarning, false),\n        isLast = toBoolean(options.isLast, false),\n        isLinear = toBoolean(options.isLinear, false),\n        nextItemWarning = toBoolean(options.nextItemWarning, false),\n        nextPartWarning = toBoolean(options.nextPartWarning, false),\n        stats = options.stats,\n        nextPart = options.nextPart || {},\n        remainingAttempts = typeof options.remainingAttempts === 'undefined' ? -1 : options.remainingAttempts,\n        testPartId = options.testPartId || '',\n        unansweredOnly = toBoolean(options.unansweredOnly, false),\n        warnBeforeNext = shouldWarnBeforeNext(),\n        warnBeforeEnd = shouldWarnBeforeEnd(),\n        warnBeforeEndPart = shouldWarnBeforeEndPart();\n\n      /**\n       * Decide if we should display a warning before moving to the next item.\n       * This is useful to prevent accidental navigation (for example by pressing a shortcut) that would occur\n       * before the test taker actually gets a chance to answer an item\n       */\n      function shouldWarnBeforeNext() {\n        return nextItemWarning && !itemCanBeTriedAtWill();\n        //&& !exitTimedSectionWarning(); //todo: this should be implemented to prevent a double warning!\n      }\n\n      /**\n       * We try to decide if the test taker has the freedom to come back to this item as many times as he wants\n       */\n      function itemCanBeTriedAtWill() {\n        return isLast === false &&\n        // the test is not over\n        isLinear === false &&\n        // the context is not linear\n        remainingAttempts === -1 &&\n        // the item doesn't have a configured max attempts number\n        !isNextItemInLinearPart() // the next item is not in a linear part\n        ;\n      }\n\n      /**\n       * Check if the next item is in a linear part, as this would prevent the test taker to come back to the current item\n       */\n      function isNextItemInLinearPart() {\n        return nextPart && typeof nextPart.isLinear !== 'undefined' && isLastOfPart() && nextPart.isLinear === true;\n      }\n\n      /**\n       * Decide if we should display a warning before ending the test\n       */\n      function shouldWarnBeforeEnd() {\n        return shouldWarnOnTestEnd();\n      }\n\n      /**\n       * Decide if we should display a warning before ending the test part\n       */\n      function shouldWarnBeforeEndPart() {\n        return shouldWarnOnPartChange();\n      }\n\n      /**\n       * Are we on the last test item?\n       * @returns {Boolean}\n       */\n      function shouldWarnOnTestEnd() {\n        return isLast && (endTestWarning ||\n        // warning is explicitly required by endTestWarning category\n        warnBeforeNext) &&\n        // warning is implicitly triggered by the next item warning being true (prevent double warning)\n        shouldWarnForUnansweredItems();\n      }\n\n      /**\n       * Provide the opportunity to cancel the display of the warning if there are no unanswered/flagged item\n       * for this to work, the unansweredOnly option has to be set\n       * @returns {Boolean}\n       */\n      function shouldWarnForUnansweredItems() {\n        var hasUnanswered = stats && stats.questions - stats.answered !== 0,\n          hasFlagged = stats && stats.flagged !== 0;\n        if (unansweredOnly) {\n          return hasUnanswered || hasFlagged;\n        } else {\n          return true;\n        }\n      }\n\n      /**\n       * Are we on the last part item?\n       * @returns {Boolean}\n       */\n      function shouldWarnOnPartChange() {\n        return nextPartWarning && isLastOfPart() && shouldWarnForUnansweredItems();\n      }\n\n      /**\n       * Check if the next item belong to a different part\n       * @returns {Boolean}\n       */\n      function isLastOfPart() {\n        return nextPart && nextPart.id && testPartId !== nextPart.id;\n      }\n\n      /**\n       * The helper object\n       */\n      return {\n        shouldWarnBeforeEndPart: function () {\n          return warnBeforeEndPart;\n        },\n        shouldWarnBeforeEnd: function () {\n          return warnBeforeEnd;\n        },\n        shouldWarnBeforeNext: function () {\n          return warnBeforeNext;\n        }\n      };\n    };\n\n    return nextWarningHelper;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/next',['jquery', 'i18n', 'ui/hider', 'taoTests/runner/plugin', 'taoQtiTest/runner/plugins/navigation/next/nextWarningHelper', 'taoQtiTest/runner/helpers/messages', 'taoQtiTest/runner/helpers/map', 'taoQtiTest/runner/helpers/navigation', 'taoQtiTest/runner/helpers/stats', 'util/shortcut', 'util/namespace', 'handlebars', 'lib/handlebars/helpers'], function ($$1, __, hider, pluginFactory, nextWarningHelper, messages, mapHelper, navigationHelper, statsHelper, shortcut, namespaceHelper, Handlebars, Helpers0) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    nextWarningHelper = nextWarningHelper && Object.prototype.hasOwnProperty.call(nextWarningHelper, 'default') ? nextWarningHelper['default'] : nextWarningHelper;\n    messages = messages && Object.prototype.hasOwnProperty.call(messages, 'default') ? messages['default'] : messages;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    navigationHelper = navigationHelper && Object.prototype.hasOwnProperty.call(navigationHelper, 'default') ? navigationHelper['default'] : navigationHelper;\n    statsHelper = statsHelper && Object.prototype.hasOwnProperty.call(statsHelper, 'default') ? statsHelper['default'] : statsHelper;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \" \";\n      if (helper = helpers.className) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.className); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n        aria-\"\n        + escapeExpression(((stack1 = (data == null || data === false ? data : data.key)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"=\\\"\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\"\\n    \";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span class=\\\"icon icon-\";\n      if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"></span>\";\n      return buffer;\n      }\n    function program6(depth0,data) {\n      \n      \n      return \" no-label\";\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span class=\\\"text\\\">\";\n      if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\";\n      return buffer;\n      }\n\n      buffer += \"<li\\n    data-control=\\\"\";\n      if (helper = helpers.control) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.control); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    class=\\\"small btn-info action\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.className), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n    title=\\\"\";\n      if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    role=\\\"button\\\"\\n    \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.aria), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\" onclick=\\\"return false\\\" aria-hidden=\\\"true\\\" >\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.icon), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </a>\\n</li>\\n\";\n      return buffer;\n      });\n    function buttonTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The display of the next button\n     */\n    const buttonData = {\n      next: {\n        control: 'move-forward',\n        title: __('Submit and go to the next item'),\n        specificTitle: __('Submit and go to the item %s'),\n        icon: 'forward',\n        text: __('Next')\n      },\n      end: {\n        control: 'move-end',\n        title: __('Submit and go to the end of the test'),\n        icon: 'fast-forward',\n        text: __('End test')\n      }\n    };\n\n    /**\n     * Create the button based on the current context\n     * @param {Boolean} [isLast=false] - is the current item the last\n     * @returns {jQueryElement} the button\n     */\n    const createElement = function () {\n      let isLast = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      const dataType = isLast ? 'end' : 'next';\n      return $$1(buttonTpl(buttonData[dataType]));\n    };\n\n    /**\n     * Makes an element enabled\n     * @param  {jQuery} $element\n     * @returns {jQuery}\n     */\n    const enableElement = $element => $element.removeProp('disabled').removeClass('disabled');\n\n    /**\n     * Makes an element disabled\n     * @param  {jQuery} $element\n     * @returns {jQuery}\n     */\n    const disableElement = $element => $element.prop('disabled', true).addClass('disabled');\n\n    /**\n     * Update the button based on the context\n     * @param {jQueryElement} $element - the element to update\n     * @param {TestRunner} [testRunner] - the test runner instance\n     * @param {Boolean} [isLast=false] - is the current item the last\n     */\n    const updateElement = function ($element, testRunner) {\n      let isLast = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      const dataType = isLast ? 'end' : 'next';\n      const testContext = testRunner.getTestContext();\n      if (dataType === 'next' && !testContext.isAdaptive && !testContext.isCatAdaptive) {\n        const testMap = testRunner.getTestMap();\n        const nextItem = navigationHelper.getNextItem(testMap, testContext.itemPosition);\n        $element.attr('title', __(buttonData.next.specificTitle, nextItem.label));\n      } else {\n        $element.attr('title', buttonData[dataType].title);\n      }\n      if ($element.attr('data-control') !== buttonData[dataType].control) {\n        $element.attr('data-control', buttonData[dataType].control).find('.text').text(buttonData[dataType].text);\n        if (dataType === 'next') {\n          $element.find(`.icon-${buttonData.end.icon}`).removeClass(`icon-${buttonData.end.icon}`).addClass(`icon-${buttonData.next.icon}`);\n        } else {\n          $element.find(`.icon-${buttonData.next.icon}`).removeClass(`icon-${buttonData.next.icon}`).addClass(`icon-${buttonData.end.icon}`);\n        }\n      }\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    var next = pluginFactory({\n      name: 'next',\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init() {\n        const testRunner = this.getTestRunner();\n        const testRunnerOptions = testRunner.getOptions();\n        const pluginShortcuts = (testRunnerOptions.shortcuts || {})[this.getName()] || {};\n\n        /**\n         * Check if the current item is the last item\n         * @returns {Boolean} true if the last\n         */\n        const isLastItem = () => {\n          const testContext = testRunner.getTestContext();\n          const testMap = testRunner.getTestMap();\n          const itemIdentifier = testContext.itemIdentifier;\n          return navigationHelper.isLast(testMap, itemIdentifier);\n        };\n\n        //plugin behavior\n        /**\n         * @param {Boolean} nextItemWarning - enable the display of a warning when going to the next item.\n         * Note: the actual display of the warning depends on other conditions (see nextWarningHelper)\n         */\n        const doNext = nextItemWarning => {\n          const testContext = testRunner.getTestContext();\n          const testMap = testRunner.getTestMap();\n          const testPart = testRunner.getCurrentPart();\n          const nextItemPosition = testContext.itemPosition + 1;\n          const itemIdentifier = testContext.itemIdentifier;\n\n          // x-tao-option-unansweredWarning is a deprecated option whose behavior now matches the one of\n          const unansweredWarning = mapHelper.hasItemCategory(testMap, itemIdentifier, 'unansweredWarning', true);\n\n          // x-tao-option-nextPartWarning with the unansweredOnly option\n          const nextPartWarning = mapHelper.hasItemCategory(testMap, itemIdentifier, 'nextPartWarning', true) || unansweredWarning;\n          const endTestWarning = mapHelper.hasItemCategory(testMap, itemIdentifier, 'endTestWarning', true);\n\n          // this check to avoid an edge case where having both endTestWarning\n          // and unansweredWarning options would prevent endTestWarning to behave normally\n          const unansweredOnly = !endTestWarning && unansweredWarning;\n          const warningScope = nextPartWarning ? 'part' : 'test';\n          const enableNav = () => testRunner.trigger('enablenav');\n          const triggerNextAction = () => {\n            if (isLastItem()) {\n              this.trigger('end');\n            }\n            testRunner.next();\n          };\n          testRunner.trigger('disablenav');\n          if (this.getState('enabled') !== false) {\n            const warningHelper = nextWarningHelper({\n              endTestWarning: endTestWarning,\n              isLast: isLastItem(),\n              isLinear: testPart.isLinear,\n              nextItemWarning: nextItemWarning,\n              nextPartWarning: nextPartWarning,\n              nextPart: mapHelper.getItemPart(testMap, nextItemPosition),\n              remainingAttempts: testContext.remainingAttempts,\n              testPartId: testContext.testPartId,\n              unansweredWarning: unansweredWarning,\n              stats: statsHelper.getInstantStats(warningScope, testRunner),\n              unansweredOnly: unansweredOnly\n            });\n            if (warningHelper.shouldWarnBeforeEndPart()) {\n              const submitButtonLabel = __('SUBMIT THIS PART');\n              testRunner.trigger('confirm.endTestPart', messages.getExitMessage(warningScope, testRunner, '', false, submitButtonLabel), triggerNextAction,\n              // if the test taker accept\n              enableNav,\n              // if he refuse\n              {\n                buttons: {\n                  labels: {\n                    ok: submitButtonLabel,\n                    cancel: __('CANCEL')\n                  }\n                }\n              });\n            } else if (warningHelper.shouldWarnBeforeEnd()) {\n              const submitButtonLabel = __('SUBMIT THE TEST');\n              testRunner.trigger('confirm.endTest', messages.getExitMessage(warningScope, testRunner, '', false, submitButtonLabel), triggerNextAction,\n              // if the test taker accept\n              enableNav,\n              // if he refuse\n              {\n                buttons: {\n                  labels: {\n                    ok: submitButtonLabel,\n                    cancel: __('CANCEL')\n                  }\n                }\n              });\n            } else if (warningHelper.shouldWarnBeforeNext()) {\n              testRunner.trigger('confirm.next', __('You are about to go to the next item. Click OK to continue and go to the next item.'), triggerNextAction,\n              // if the test taker accept\n              enableNav // if he refuse\n              );\n            } else {\n              triggerNextAction();\n            }\n          }\n        };\n\n        //create the button (detached)\n        this.$element = createElement(isLastItem());\n\n        //attach behavior\n        this.$element.on('click', e => {\n          e.preventDefault();\n          disableElement(this.$element);\n          testRunner.trigger('nav-next');\n        });\n        const registerShortcut = kbdShortcut => {\n          if (testRunnerOptions.allowShortcuts && kbdShortcut) {\n            shortcut.add(namespaceHelper.namespaceAll(kbdShortcut, this.getName(), true), () => {\n              if (this.getState('enabled') === true) {\n                testRunner.trigger('nav-next', true);\n              }\n            }, {\n              avoidInput: true,\n              prevent: true\n            });\n          }\n        };\n        registerShortcut(pluginShortcuts.trigger);\n\n        //disabled by default\n        this.disable();\n\n        //change plugin state\n        testRunner.on('loaditem', () => {\n          updateElement(this.$element, testRunner, isLastItem());\n        }).on('enablenav', () => this.enable()).on('disablenav', () => this.disable()).on('hidenav', () => this.hide()).on('shownav', () => this.show()).on('nav-next', nextItemWarning => doNext(nextItemWarning)).on('enableaccessibilitymode', () => {\n          const kbdShortcut = pluginShortcuts.triggerAccessibility;\n          if (kbdShortcut && !this.getState('eaccessibilitymode')) {\n            shortcut.remove(`.${this.getName()}`);\n            registerShortcut(kbdShortcut);\n            this.setState('eaccessibilitymode');\n          }\n        });\n      },\n      /**\n       * Called during the runner's render phase\n       */\n      render() {\n        //attach the element to the navigation area\n        const $container = this.getAreaBroker().getNavigationArea();\n        $container.append(this.$element);\n      },\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy() {\n        shortcut.remove(`.${this.getName()}`);\n        this.$element.remove();\n      },\n      /**\n       * Enable the button\n       */\n      enable() {\n        enableElement(this.$element);\n      },\n      /**\n       * Disable the button\n       */\n      disable() {\n        disableElement(this.$element);\n      },\n      /**\n       * Show the button\n       */\n      show() {\n        hider.show(this.$element);\n      },\n      /**\n       * Hide the button\n       */\n      hide() {\n        hider.hide(this.$element);\n      }\n    });\n\n    return next;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/next/dialogConfirmNext',['jquery', 'lodash', 'i18n', 'ui/dialog', 'handlebars', 'lib/handlebars/helpers'], function ($$1, _, __, dialog, Handlebars, Helpers0) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    dialog = dialog && Object.prototype.hasOwnProperty.call(dialog, 'default') ? dialog['default'] : dialog;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      return \"checked\";\n      }\n\n      buffer += \"<label for=\\\"\";\n      if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\\n    <input type=\\\"checkbox\\\" id=\\\"\";\n      if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" name=\\\"\";\n      if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.checked), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" />\\n    <span class=\\\"icon-checkbox\\\"></span>\\n    \";\n      if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\n</label>\";\n      return buffer;\n      });\n    function checkboxTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Displays a confirmation dialog with a checkbox in it\n     *\n     * @param {String} heading - Above the main message\n     * @param {String} message - The displayed message\n     * @param {Function} accept - An action called when the dialog is accepted\n     * @param {Function} refuse - An action called when the dialog is refused\n     * @param {Object} checkboxParams - Checkbox options\n     * @param {Boolean} [checkboxParams.checked] - True to render it checked\n     * @param {Function} [checkboxParams.submitChecked] - Action called when dialog accepted with checkbox checked\n     * @param {Function} [checkboxParams.submitUnchecked] - Action called when dialog accepted with checkbox unchecked\n     * @returns {dialog} - Returns the dialog instance\n     */\n    function dialogConfirmNext(heading, message, accept, refuse, checkboxParams, dialogOptions) {\n      var accepted = false;\n      var dlg;\n      var content = null;\n      if (checkboxParams && checkboxParams.checked !== true) {\n        content = checkboxTpl({\n          checked: false,\n          text: \"Don't show this again next time\",\n          id: 'dont-show-again'\n        });\n      }\n      dialogOptions = _.defaults({\n        heading: heading,\n        message: message,\n        content: content,\n        autoRender: true,\n        autoDestroy: true,\n        buttons: [{\n          id: 'cancel',\n          type: 'regular',\n          label: __('Cancel'),\n          close: true\n        }, {\n          id: 'ok',\n          type: 'info',\n          label: __('Go to next item'),\n          close: true\n        }],\n        onOkBtn: function onOkBtn() {\n          var $checkbox;\n          accepted = true;\n          if (_.isFunction(accept)) {\n            accept.call(this);\n            if (checkboxParams) {\n              // handle checkbox callbacks:\n              $checkbox = $$1('input[name=\"dont-show-again\"]', this);\n              if ($checkbox.prop('checked') && _.isFunction(checkboxParams.submitChecked)) {\n                checkboxParams.submitChecked();\n              } else if (!$checkbox.prop('checked') && _.isFunction(checkboxParams.submitUnchecked)) {\n                checkboxParams.submitUnchecked();\n              }\n            }\n          }\n        }\n      }, dialogOptions);\n      dlg = dialog(dialogOptions);\n      if (_.isFunction(refuse)) {\n        dlg.on('closed.modal', function () {\n          if (!accepted) {\n            refuse.call(this);\n          }\n        });\n      }\n      return dlg;\n    }\n\n    return dialogConfirmNext;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/next/linearNextItemWarning',['i18n', 'taoTests/runner/plugin', 'taoQtiTest/runner/helpers/map', 'taoQtiTest/runner/helpers/currentItem', 'taoQtiTest/runner/plugins/navigation/next/dialogConfirmNext', 'taoQtiTest/runner/helpers/navigation'], function (__, pluginFactory, mapHelper, currentItemHelper, dialogConfirmNext, navigationHelper) { 'use strict';\n\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    currentItemHelper = currentItemHelper && Object.prototype.hasOwnProperty.call(currentItemHelper, 'default') ? currentItemHelper['default'] : currentItemHelper;\n    dialogConfirmNext = dialogConfirmNext && Object.prototype.hasOwnProperty.call(dialogConfirmNext, 'default') ? dialogConfirmNext['default'] : dialogConfirmNext;\n    navigationHelper = navigationHelper && Object.prototype.hasOwnProperty.call(navigationHelper, 'default') ? navigationHelper['default'] : navigationHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Returns the configured plugin\n     */\n    var linearNextItemWarning = pluginFactory({\n      name: 'linearNextItemWarning',\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init() {\n        const self = this;\n        const testRunner = this.getTestRunner();\n        const testRunnerOptions = testRunner.getOptions();\n        const testStore = testRunner.getTestStore(); // we'll store user's checkbox choice in here\n        testStore.setVolatile(self.getName());\n\n        /**\n         * Retrieve the required categories of the current item\n         * @returns {Object} the calculator categories\n         */\n        function getNextItemCategories() {\n          const testContext = testRunner.getTestContext();\n          const testMap = testRunner.getTestMap();\n          return {\n            nextPartWarning: mapHelper.hasItemCategory(testMap, testContext.itemIdentifier, 'nextPartWarning', true),\n            nextSectionWarning: mapHelper.hasItemCategory(testMap, testContext.itemIdentifier, 'nextSectionWarning', true)\n          };\n        }\n\n        /**\n         * Provides different variants of message text\n         * @param {String} action - 'next' or 'skip'\n         * @returns {String}\n         */\n        function getCustomNextMessage(action) {\n          var customNextMessage;\n          var itemPartiallyAnswered = currentItemHelper.isAnswered(testRunner, true);\n          if (!itemPartiallyAnswered) {\n            customNextMessage = __('Are you sure you want to go to the next item? You will not be able to go back and provide an answer.');\n          } else if (action === 'next') {\n            customNextMessage = __('Are you sure you want to go to the next item? You will not be able to go back and change your answer.');\n          } else if (action === 'skip') {\n            customNextMessage = __('Are you sure you want to clear your answer and go to the next item? You will not be able to go back and provide an answer.');\n          } else {\n            // more generic message for default case:\n            customNextMessage = __('Are you sure you want to go to the next item? You will not be able to go back.');\n          }\n          return customNextMessage;\n        }\n\n        //plugin behavior\n        /**\n         * Checks configuration, shows a dialog asking to confirm the nav action\n         *\n         * @param {String} action - 'next' or 'skip'\n         * @returns {Promise} - resolves if dialog accepted or not shown, rejects if dialog cancelled\n         */\n        function doNextWarning(action) {\n          testRunner.trigger('disablenav');\n\n          // Load testStore checkbox value (async)\n          return testStore.getStore(self.getName()).then(function (store) {\n            return store.getItem('dontShowLinearNextItemWarning').then(function (checkboxValue) {\n              var checkboxParams = null;\n\n              // Show the warning unless user has turned it off:\n              if (checkboxValue !== true) {\n                // Define checkbox only if enabled by config:\n                if (testRunnerOptions.enableLinearNextItemWarningCheckbox) {\n                  checkboxParams = {\n                    checked: checkboxValue,\n                    submitChecked: function () {\n                      store.setItem('dontShowLinearNextItemWarning', true);\n                    },\n                    submitUnchecked: function () {\n                      store.setItem('dontShowLinearNextItemWarning', false);\n                    }\n                  };\n                }\n                return new Promise(function (resolve, reject) {\n                  // show special dialog:\n                  dialogConfirmNext(__('Go to the next item?'), getCustomNextMessage(action), resolve,\n                  // if the test taker accepts\n                  function cancel() {\n                    // if he refuses\n                    reject({\n                      cancel: true\n                    });\n                  }, checkboxParams);\n                });\n              }\n            });\n          }).catch(function (err) {\n            // if the rejection is due to an error, rethrow it\n            if (err && err instanceof Error) {\n              throw err;\n            }\n            if (err && err.cancel === true) {\n              testRunner.trigger('enablenav');\n              return Promise.reject(); // to cancel the move\n            }\n          });\n        }\n\n        // Attach this plugin to 'next' & 'skip' events\n        testRunner.on('init', function () {\n          // Clear the stored checkbox value before each test:\n          testStore.getStore(self.getName()).then(function (store) {\n            store.setItem('dontShowLinearNextItemWarning', null);\n          });\n        }).before('move skip', function (e, type, scope) {\n          const context = testRunner.getTestContext();\n          const map = testRunner.getTestMap();\n          const item = testRunner.getCurrentItem();\n          const currentPart = testRunner.getCurrentPart();\n          const categories = getNextItemCategories();\n          const isLast = navigationHelper.isLast(map, context.itemIdentifier);\n          if (currentPart && currentPart.isLinear) {\n            // Do nothing if nextSection warning imminent:\n            if (scope === 'section' && categories.nextSectionWarning) {\n              return;\n              // Do nothing if endOfPart warning imminent:\n            } else if (categories.nextPartWarning) {\n              return;\n              // Do nothing if 'informational item':\n            } else if (item.informational) {\n              return;\n              // Show dialog if conditions met:\n            } else if (type === 'next' && !isLast && testRunnerOptions.forceEnableLinearNextItemWarning) {\n              return doNextWarning('next');\n            } else if (e.name === 'skip' && !isLast && testRunnerOptions.forceEnableLinearNextItemWarning) {\n              return doNextWarning('skip');\n            }\n          }\n        });\n      }\n    });\n\n    return linearNextItemWarning;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/nextSection',['jquery', 'lodash', 'i18n', 'ui/hider', 'taoTests/runner/plugin', 'taoQtiTest/runner/helpers/messages', 'handlebars', 'lib/handlebars/helpers', 'taoQtiTest/runner/helpers/map'], function ($$1, _, __, hider, pluginFactory, messages, Handlebars, Helpers0, mapHelper) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    messages = messages && Object.prototype.hasOwnProperty.call(messages, 'default') ? messages['default'] : messages;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \" \";\n      if (helper = helpers.className) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.className); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n        aria-\"\n        + escapeExpression(((stack1 = (data == null || data === false ? data : data.key)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"=\\\"\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\"\\n    \";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span class=\\\"icon icon-\";\n      if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"></span>\";\n      return buffer;\n      }\n    function program6(depth0,data) {\n      \n      \n      return \" no-label\";\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span class=\\\"text\\\">\";\n      if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\";\n      return buffer;\n      }\n\n      buffer += \"<li\\n    data-control=\\\"\";\n      if (helper = helpers.control) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.control); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    class=\\\"small btn-info action\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.className), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n    title=\\\"\";\n      if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    role=\\\"button\\\"\\n    \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.aria), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\" onclick=\\\"return false\\\" aria-hidden=\\\"true\\\" >\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.icon), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </a>\\n</li>\\n\";\n      return buffer;\n      });\n    function buttonTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n     */\n    var nextSection = pluginFactory({\n      name: 'nextsection',\n      init() {\n        const self = this;\n        const testRunner = this.getTestRunner();\n        const testRunnerOptions = testRunner.getOptions();\n\n        /**\n         * Retrieve the nexSection categories of the current item\n         * @returns {Object} the calculator categories\n         */\n        function getNextSectionCategories() {\n          const testContext = testRunner.getTestContext();\n          const testMap = testRunner.getTestMap();\n          return {\n            nextSection: mapHelper.hasItemCategory(testMap, testContext.itemIdentifier, 'nextSection', true),\n            nextSectionWarning: mapHelper.hasItemCategory(testMap, testContext.itemIdentifier, 'nextSectionWarning', true),\n            noExitTimedSectionWarning: mapHelper.hasItemCategory(testMap, testContext.itemIdentifier, 'noExitTimedSectionWarning', true)\n          };\n        }\n        function toggle() {\n          const categories = getNextSectionCategories();\n          if (testRunnerOptions.nextSection && (categories.nextSection || categories.nextSectionWarning)) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        }\n        function nextSection() {\n          testRunner.next('section');\n        }\n\n        /**\n         * Check if warn section leaving dialog enabled to prevent showing double dialogs\n         * @returns {Boolean}\n         */\n        const isWarnSectionLeavingEabled = () => {\n          const testContext = testRunner.getTestContext();\n          const categories = getNextSectionCategories();\n          const timeConstraints = testContext.timeConstraints || [];\n          return timeConstraints.some(_ref => {\n            let {\n              source\n            } = _ref;\n            return source === testContext.sectionId;\n          }) && !categories.noExitTimedSectionWarning && !(testRunnerOptions.timer || {}).keepUpToTimeout;\n        };\n        this.$element = $$1(buttonTpl({\n          control: 'next-section',\n          title: __('Skip to the next section'),\n          icon: 'fast-forward',\n          text: __('Next Section')\n        }));\n        this.$element.on('click', function (e) {\n          const enable = _.bind(self.enable, self);\n          const categories = getNextSectionCategories();\n          e.preventDefault();\n          if (self.getState('enabled') !== false) {\n            self.disable();\n            if (categories.nextSectionWarning && !isWarnSectionLeavingEabled()) {\n              const submitButtonLabel = __('CONTINUE TO THE NEXT SECTION');\n              testRunner.trigger('confirm.nextsection', messages.getExitMessage('section', testRunner, '', false, submitButtonLabel), nextSection,\n              // if the test taker accept\n              enable,\n              // if the test taker refuse\n              {\n                buttons: {\n                  labels: {\n                    ok: submitButtonLabel,\n                    cancel: __('CANCEL')\n                  }\n                }\n              });\n            } else {\n              nextSection();\n            }\n          }\n        });\n        this.disable();\n        toggle();\n        testRunner.on('loaditem', toggle).on('enablenav', function () {\n          self.enable();\n        }).on('disablenav', function () {\n          self.disable();\n        }).on('hidenav', function () {\n          self.hide();\n        }).on('shownav', function () {\n          self.show();\n        });\n      },\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        //attach the element to the navigation area\n        var $container = this.getAreaBroker().getNavigationArea();\n        $container.append(this.$element);\n      },\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        this.$element.remove();\n      },\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.$element.removeProp('disabled').removeClass('disabled');\n      },\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.$element.prop('disabled', true).addClass('disabled');\n      },\n      /**\n       * Show the button\n       */\n      show: function show() {\n        hider.show(this.$element);\n      },\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        hider.hide(this.$element);\n      }\n    });\n\n    return nextSection;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/previous',['jquery', 'lodash', 'i18n', 'ui/hider', 'taoTests/runner/plugin', 'util/shortcut', 'util/namespace', 'taoQtiTest/runner/helpers/navigation', 'taoQtiTest/runner/helpers/map', 'handlebars', 'lib/handlebars/helpers'], function ($$1, _, __, hider, pluginFactory, shortcut, namespaceHelper, navigationHelper, mapHelper, Handlebars, Helpers0) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    navigationHelper = navigationHelper && Object.prototype.hasOwnProperty.call(navigationHelper, 'default') ? navigationHelper['default'] : navigationHelper;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \" \";\n      if (helper = helpers.className) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.className); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n        aria-\"\n        + escapeExpression(((stack1 = (data == null || data === false ? data : data.key)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"=\\\"\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\"\\n    \";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span class=\\\"icon icon-\";\n      if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"></span>\";\n      return buffer;\n      }\n    function program6(depth0,data) {\n      \n      \n      return \" no-label\";\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span class=\\\"text\\\">\";\n      if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\";\n      return buffer;\n      }\n\n      buffer += \"<li\\n    data-control=\\\"\";\n      if (helper = helpers.control) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.control); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    class=\\\"small btn-info action\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.className), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n    title=\\\"\";\n      if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    role=\\\"button\\\"\\n    \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.aria), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\" onclick=\\\"return false\\\" aria-hidden=\\\"true\\\" >\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.icon), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </a>\\n</li>\\n\";\n      return buffer;\n      });\n    function buttonTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Returns the configured plugin\n     */\n    var previous = pluginFactory({\n      name: 'previous',\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init() {\n        const self = this;\n        const testRunner = this.getTestRunner();\n        const testRunnerOptions = testRunner.getOptions();\n        const pluginShortcuts = (testRunnerOptions.shortcuts || {})[this.getName()] || {};\n\n        /**\n         * Check if the \"Previous\" functionality should be available or not\n         */\n        var canDoPrevious = function canDoPrevious() {\n          const testMap = testRunner.getTestMap();\n          const context = testRunner.getTestContext();\n          const currentSection = testRunner.getCurrentSection();\n          const noExitTimedSectionWarning = mapHelper.hasItemCategory(testMap, context.itemIdentifier, 'noExitTimedSectionWarning', true);\n          const currentPart = testRunner.getCurrentPart();\n          let previousSection;\n          let previousPart;\n\n          // check TestMap if empty\n          if (_.isPlainObject(testMap) && _.size(testMap) === 0) {\n            return false;\n          }\n\n          //first item of the test\n          if (navigationHelper.isFirst(testMap, context.itemIdentifier)) {\n            return false;\n          }\n\n          //first item of a section\n          if (navigationHelper.isFirstOf(testMap, context.itemIdentifier, 'section')) {\n            //when entering an adaptive section,\n            //you can't leave the section from the beginning\n            if (currentSection.isCatAdaptive) {\n              return false;\n            }\n\n            //if the previous section is adaptive or a timed section\n            previousSection = mapHelper.getItemSection(testMap, context.itemPosition - 1);\n            // since 2025.02, empty timeConstraint can be null or []; defined timeConstraint will still be an object\n            const previousSectionHasTimeConstraint = previousSection.timeConstraint && 'allowLateSubmission' in previousSection.timeConstraint;\n            if (previousSection.isCatAdaptive || previousSectionHasTimeConstraint && !noExitTimedSectionWarning) {\n              return false;\n            }\n          }\n          if (navigationHelper.isFirstOf(testMap, context.itemIdentifier, 'part')) {\n            //if the previous part is linear, we don't enter it too\n            previousPart = mapHelper.getItemPart(testMap, context.itemPosition - 1);\n            if (previousPart.isLinear) {\n              return false;\n            }\n          }\n          return currentPart.isLinear === false && context.canMoveBackward === true;\n        };\n\n        /**\n         * Hide the plugin if the Previous functionality shouldn't be available\n         */\n        var toggle = function toggle() {\n          if (canDoPrevious()) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        };\n\n        //build element (detached)\n        this.$element = $$1(buttonTpl({\n          control: 'move-backward',\n          title: __('Submit and go to the previous item'),\n          icon: 'backward',\n          text: __('Previous')\n        }));\n\n        //attach behavior\n        function doPrevious(previousItemWarning) {\n          var context = testRunner.getTestContext();\n          function enableNav() {\n            testRunner.trigger('enablenav');\n          }\n          function triggerAction() {\n            testRunner.previous();\n          }\n          testRunner.trigger('disablenav');\n          if (self.getState('enabled') !== false) {\n            if (previousItemWarning && context.remainingAttempts !== -1) {\n              testRunner.trigger('confirm.previous', __('You are about to go to the previous item. Click OK to continue and go to the previous item.'), triggerAction,\n              // if the test taker accept\n              enableNav // if he refuses\n              );\n            } else {\n              triggerAction();\n            }\n          }\n        }\n        this.$element.on('click', function (e) {\n          e.preventDefault();\n          testRunner.trigger('nav-previous');\n        });\n        const registerShortcut = kbdShortcut => {\n          if (testRunnerOptions.allowShortcuts && kbdShortcut) {\n            shortcut.add(namespaceHelper.namespaceAll(kbdShortcut, this.getName(), true), function () {\n              if (canDoPrevious() && self.getState('enabled') === true) {\n                testRunner.trigger('nav-previous', [true]);\n              }\n            }, {\n              avoidInput: true,\n              prevent: true\n            });\n          }\n        };\n        registerShortcut(pluginShortcuts.trigger);\n\n        //start disabled\n        toggle();\n        self.disable();\n\n        //update plugin state based on changes\n        testRunner.on('loaditem', toggle).on('enablenav', function () {\n          self.enable();\n        }).on('disablenav', function () {\n          self.disable();\n        }).on('hidenav', function () {\n          self.hide();\n        }).on('shownav', function () {\n          self.show();\n        }).on('nav-previous', function (previousItemWarning) {\n          doPrevious(previousItemWarning);\n        }).on('enableaccessibilitymode', () => {\n          const kbdShortcut = pluginShortcuts.triggerAccessibility;\n          if (kbdShortcut && !this.getState('eaccessibilitymode')) {\n            shortcut.remove(`.${this.getName()}`);\n            registerShortcut(kbdShortcut);\n            this.setState('eaccessibilitymode');\n          }\n        });\n      },\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        var $container = this.getAreaBroker().getNavigationArea();\n        $container.append(this.$element);\n      },\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(`.${this.getName()}`);\n        this.$element.remove();\n      },\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.$element.removeProp('disabled').removeClass('disabled');\n      },\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.$element.prop('disabled', true).addClass('disabled');\n      },\n      /**\n       * Show the button\n       */\n      show: function show() {\n        hider.show(this.$element);\n      },\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        hider.hide(this.$element);\n      }\n    });\n\n    return previous;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/review/navigator',['jquery', 'lodash', 'ui/component', 'ui/autoscroll', 'taoQtiTest/runner/helpers/map', 'handlebars', 'lib/handlebars/helpers'], function ($$1, _, component, autoscroll, mapHelper, Handlebars, Helpers0) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    component = component && Object.prototype.hasOwnProperty.call(component, 'default') ? component['default'] : component;\n    autoscroll = autoscroll && Object.prototype.hasOwnProperty.call(autoscroll, 'default') ? autoscroll['default'] : autoscroll;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      return \" hidden\";\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", helper, options;\n      buffer += \"\\n    <div class=\\\"qti-navigator-info collapsible\\\">\\n                <span class=\\\"qti-navigator-label\\\">\\n                    <span class=\\\"qti-navigator-text\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Test status\", options) : helperMissing.call(depth0, \"__\", \"Test status\", options)))\n        + \"</span>\\n                    <span class=\\\"icon-up\\\"></span>\\n                    <span class=\\\"icon-down\\\"></span>\\n                </span>\\n        <ul class=\\\"collapsible-panel plain\\\">\\n            <li class=\\\"qti-navigator-viewed\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Viewed items\", options) : helperMissing.call(depth0, \"__\", \"Viewed items\", options)))\n        + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-viewed\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Viewed\", options) : helperMissing.call(depth0, \"__\", \"Viewed\", options)))\n        + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n            </li>\\n            <li class=\\\"qti-navigator-answered\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Completed items\", options) : helperMissing.call(depth0, \"__\", \"Completed items\", options)))\n        + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-answered\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Answered\", options) : helperMissing.call(depth0, \"__\", \"Answered\", options)))\n        + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n            </li>\\n            <li class=\\\"qti-navigator-unanswered\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered items\", options) : helperMissing.call(depth0, \"__\", \"Unanswered items\", options)))\n        + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-unanswered\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered\", options) : helperMissing.call(depth0, \"__\", \"Unanswered\", options)))\n        + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n            </li>\\n            <li class=\\\"qti-navigator-flagged\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Items marked for later review\", options) : helperMissing.call(depth0, \"__\", \"Items marked for later review\", options)))\n        + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-flagged\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Flagged\", options) : helperMissing.call(depth0, \"__\", \"Flagged\", options)))\n        + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n            </li>\\n        </ul>\\n    </div>\\n    \";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      \n      return \"(<span class=\\\"qti-navigator-counter\\\">0</span>)\";\n      }\n\n    function program7(depth0,data) {\n      \n      \n      return \"icon-unanswered \";\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \"\", helper, options;\n      buffer += escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered\", options) : helperMissing.call(depth0, \"__\", \"Unanswered\", options)))\n        + \" (<span class=\\\"qti-navigator-counter\\\">0</span>)\";\n      return buffer;\n      }\n\n    function program11(depth0,data) {\n      \n      \n      return \"icon-flagged \";\n      }\n\n    function program13(depth0,data) {\n      \n      var buffer = \"\", helper, options;\n      buffer += escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Flagged\", options) : helperMissing.call(depth0, \"__\", \"Flagged\", options)))\n        + \" (<span class=\\\"qti-navigator-counter\\\">0</span>)\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-panel qti-navigator qti-navigator-default\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.hidden), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\\n    <div class=\\\"qti-navigator-collapsible\\\">\\n        <span class=\\\"qti-navigator-collapse icon icon-left\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Collapse the review panel\", options) : helperMissing.call(depth0, \"__\", \"Collapse the review panel\", options)))\n        + \"\\\"></span>\\n        <span class=\\\"qti-navigator-expand icon icon-right\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Expand the review panel\", options) : helperMissing.call(depth0, \"__\", \"Expand the review panel\", options)))\n        + \"\\\"></span>\\n    </div>\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n\\n\\n    <div class=\\\"qti-navigator-filters\\\">\\n        <ul role=\\\"tablist\\\" class=\\\"plain clearfix\\\">\\n            <li role=\\\"tab\\\" aria-selected=\\\"true\\\" class=\\\"qti-navigator-filter active\\\" data-mode=\\\"all\\\">\\n                <span title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Reset filters\", options) : helperMissing.call(depth0, \"__\", \"Reset filters\", options)))\n        + \"\\\" class=\\\"qti-navigator-tab\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"All\", options) : helperMissing.call(depth0, \"__\", \"All\", options)))\n        + \"\\n                    \";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                </span>\\n            </li>\\n\\n            <li role=\\\"tab\\\" class=\\\"qti-navigator-filter\\\" data-mode=\\\"unanswered\\\">\\n                <span class=\\\"\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"qti-navigator-tab\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Only display the unanswered items\", options) : helperMissing.call(depth0, \"__\", \"Only display the unanswered items\", options)))\n        + \"\\\">\\n                    \";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                </span>\\n            </li>\\n\\n            <li role=\\\"tab\\\" class=\\\"qti-navigator-filter\\\" data-mode=\\\"flagged\\\">\\n                <span class=\\\"\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"qti-navigator-tab\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Only display the items marked for review\", options) : helperMissing.call(depth0, \"__\", \"Only display the items marked for review\", options)))\n        + \"\\\">\\n                    \";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                </span>\\n            </li>\\n        </ul>\\n    </div>\\n\\n    <nav class=\\\"qti-navigator-tree\\\"></nav>\\n\\n    <div id=\\\"qti-navigator-linear\\\" class=\\\"qti-navigator-linear\\\">\\n        <span class=\\\"icon icon-info\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n        + \"\\\"></span>\\n        <p class=\\\"qti-navigator-message\\\">\\n            \"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n        + \"\\n        </p>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function navigatorTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n    <li class=\\\"qti-navigator-part collapsible \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-id=\\\"\";\n      if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\\n        <span class=\\\"qti-navigator-label\\\" title=\\\"\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\\n            <span class=\\\"qti-navigator-text\\\">\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n            <span class=\\\"icon-up\\\"></span>\\n            <span class=\\\"icon-down\\\"></span>\\n        </span>\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.isLinear), {hash:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </li>\\n    \";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      \n      return \"active\";\n      }\n\n    function program4(depth0,data) {\n      \n      \n      return \"collapsed\";\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n        <div class=\\\"qti-navigator-linear-part collapsible-panel\\\">\\n            <span class=\\\"icon icon-info\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n        + \"\\\"></span>\\n            <p class=\\\"qti-navigator-message\\\">\\n                \"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n        + \"\\n            </p>\\n            <p class=\\\"qti-navigator-actions\\\">\\n                <button class=\\\"btn-info small\\\" data-position=\\\"\";\n      if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start Test-part\", options) : helperMissing.call(depth0, \"__\", \"Start Test-part\", options)))\n        + \"\\\">\\n                    <span class=\\\"qti-navigator-text\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start Test-part\", options) : helperMissing.call(depth0, \"__\", \"Start Test-part\", options)))\n        + \"</span>\\n                    <span class=\\\"icon-play r\\\"></span>\\n                </button>\\n            </p>\\n        </div>\\n        \";\n      return buffer;\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n        <ul aria-label=\\\"\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" class=\\\"qti-navigator-sections collapsible-panel plain\\\">\\n            \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.sections), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        </ul>\\n        \";\n      return buffer;\n      }\n    function program9(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n            <li class=\\\"qti-navigator-section collapsible \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-id=\\\"\";\n      if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\\n                <span class=\\\"qti-navigator-label\\\" title=\\\"\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\\n                    <span class=\\\"qti-navigator-text\\\">\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n                    <span class=\\\"qti-navigator-counter\\\">\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.stats)),stack1 == null || stack1 === false ? stack1 : stack1.answered)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"/\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.stats)),stack1 == null || stack1 === false ? stack1 : stack1.total)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"</span>\\n                </span>\\n                <ul aria-label=\\\"\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" class=\\\"qti-navigator-items collapsible-panel plain\\\">\\n                    \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.items), {hash:{},inverse:self.noop,fn:self.programWithDepth(10, program10, data, depth0),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                </ul>\\n            </li>\\n            \";\n      return buffer;\n      }\n    function program10(depth0,data,depth1) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n                    <li class=\\\"qti-navigator-item \";\n      if (helper = helpers.cls) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.cls); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-id=\\\"\";\n      if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-position=\\\"\";\n      if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\\n                        <span class=\\\"qti-navigator-label truncate\\\" title=\\\"\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n                              role=\\\"link\\\" aria-disabled=\\\"\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.viewed), {hash:{},inverse:self.program(13, program13, data),fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n                              \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                              aria-label=\\\"\";\n      if (helper = helpers.index) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.index); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \" of \"\n        + escapeExpression(((stack1 = ((stack1 = (depth1 && depth1.stats)),stack1 == null || stack1 === false ? stack1 : stack1.total)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" \";\n      if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\\n                            <span class=\\\"qti-navigator-icon icon-\";\n      if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"></span>\\n                            <span class=\\\"qti-navigator-number\\\">\";\n      if (helper = helpers.index) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.index); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n                            \";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\n                        </span>\\n                    </li>\\n                    \";\n      return buffer;\n      }\n    function program11(depth0,data) {\n      \n      \n      return \"false\";\n      }\n\n    function program13(depth0,data) {\n      \n      \n      return \"true\";\n      }\n\n    function program15(depth0,data) {\n      \n      \n      return \"aria-current=\\\"page\\\"\";\n      }\n\n      buffer += \"<ul class=\\\"qti-navigator-parts plain\\\">\\n    \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.parts), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</ul>\\n\";\n      return buffer;\n      });\n    function navigatorTreeTpl(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Some default values\n     * @type {Object}\n     * @private\n     */\n    var _defaults = {\n      scope: 'test',\n      canCollapse: false,\n      preventsUnseen: true,\n      hidden: false\n    };\n\n    /**\n     * List of CSS classes\n     * @type {Object}\n     * @private\n     */\n    var _cssCls = {\n      active: 'active',\n      collapsed: 'collapsed',\n      collapsible: 'collapsible',\n      hidden: 'hidden',\n      disabled: 'disabled',\n      flagged: 'flagged',\n      answered: 'answered',\n      viewed: 'viewed',\n      unseen: 'unseen',\n      info: 'info',\n      icon: 'qti-navigator-icon',\n      scope: {\n        test: 'scope-test',\n        testPart: 'scope-test-part',\n        testSection: 'scope-test-section'\n      }\n    };\n\n    /**\n     * List of icon CSS classes\n     * @type {Array}\n     * @private\n     */\n    var _iconCls = [_cssCls.info, _cssCls.flagged, _cssCls.answered, _cssCls.viewed];\n\n    /**\n     * List of common CSS selectors\n     * @type {Object}\n     * @private\n     */\n    var _selectors = {\n      component: '.qti-navigator',\n      filterBar: '.qti-navigator-filters',\n      filter: '.qti-navigator-filter',\n      tree: '.qti-navigator-tree',\n      collapseHandle: '.qti-navigator-collapsible',\n      linearState: '.qti-navigator-linear',\n      infoAnswered: '.qti-navigator-answered .qti-navigator-counter',\n      infoViewed: '.qti-navigator-viewed .qti-navigator-counter',\n      infoUnanswered: '.qti-navigator-unanswered .qti-navigator-counter',\n      infoFlagged: '.qti-navigator-flagged .qti-navigator-counter',\n      infoPanel: '.qti-navigator-info',\n      infoPanelLabels: '.qti-navigator-info > .qti-navigator-label',\n      tabInfoAll: '[data-mode=\"all\"] .qti-navigator-counter',\n      tabInfoUnanswered: '[data-mode=\"unanswered\"] .qti-navigator-counter',\n      tabInfoFlagged: '[data-mode=\"flagged\"] .qti-navigator-counter',\n      parts: '.qti-navigator-part',\n      partLabels: '.qti-navigator-part > .qti-navigator-label',\n      sections: '.qti-navigator-section',\n      sectionLabels: '.qti-navigator-section > .qti-navigator-label',\n      items: '.qti-navigator-item',\n      itemLabels: '.qti-navigator-item > .qti-navigator-label',\n      itemIcons: '.qti-navigator-item > .qti-navigator-icon',\n      activeItem: '.qti-navigator-item.active',\n      icons: '.qti-navigator-icon',\n      linearStart: '.qti-navigator-linear-part button',\n      counters: '.qti-navigator-counter',\n      actives: '.active',\n      collapsible: '.collapsible',\n      collapsiblePanels: '.collapsible-panel',\n      unseen: '.unseen',\n      answered: '.answered',\n      flagged: '.flagged',\n      notFlagged: ':not(.flagged)',\n      notAnswered: ':not(.answered)',\n      notInformational: ':not(.info)',\n      informational: '.info',\n      hidden: '.hidden',\n      disabled: '.disabled'\n    };\n\n    /**\n     * Maps the filter mode to filter criteria.\n     * Each filter criteria is a CSS selector used to find and mask the items to be discarded by the filter.\n     * @type {Object}\n     * @private\n     */\n    var _filterMap = {\n      all: '',\n      unanswered: [_selectors.answered, _selectors.informational].join(','),\n      flagged: _selectors.notFlagged,\n      answered: _selectors.notAnswered,\n      filtered: _selectors.hidden\n    };\n\n    /**\n     *\n     * @type {Object}\n     */\n    var navigatorApi = {\n      /**\n       * Updates the stats on the flagged items in the current map\n       * @param {Number} position\n       * @param {Boolean} flag\n       */\n      updateStats: function updateStats(position, flag) {\n        var map = this.map;\n        var item;\n        if (map) {\n          item = mapHelper.getItemAt(map, position);\n          if (item) {\n            item.flagged = flag;\n            mapHelper.updateItemStats(map, position);\n          }\n        }\n      },\n      /**\n       * Gets the total number of items for the provided target\n       * @param {Object} progression\n       * @param {String} target\n       * @returns {Number}\n       */\n      getProgressionTotal: function getProgressionTotal(progression, target) {\n        var total;\n        if ('questions' === target) {\n          total = progression.questions;\n        } else {\n          total = progression.total;\n        }\n        return total;\n      },\n      /**\n       * Set the marked state of an item\n       * @param {Number|String|jQuery} position\n       * @param {Boolean} flag\n       */\n      setItemFlag: function setItemFlag(position, flag) {\n        var $item = position && position.jquery ? position : this.controls.$tree.find(`[data-position=${position}]`);\n        var progression = this.progression;\n        var icon;\n\n        // update the map stats\n        this.updateStats(position, flag);\n\n        // update the item flag\n        $item.toggleClass(_cssCls.flagged, flag);\n\n        // set the item icon according to its state\n        icon = _.find(_iconCls, _.bind($item.hasClass, $item)) || _cssCls.unseen;\n        $item.find(_selectors.icons).attr('class', `${_cssCls.icon} icon-${icon}`);\n\n        // update the info panel\n        progression.flagged = this.controls.$tree.find(_selectors.flagged).length;\n        this.writeCount(this.controls.$infoFlagged, progression.flagged, this.getProgressionTotal(progression, 'questions'));\n\n        // recompute the filters\n        this.filter(this.currentFilter);\n      },\n      /**\n       * Filters the items by a criteria\n       * @param {String} criteria\n       */\n      filter: function filter(criteria) {\n        var self = this;\n\n        // remove the current filter by restoring all items\n        var $items = this.controls.$tree.find(_selectors.items).removeClass(_cssCls.hidden);\n\n        // filter the items according to the provided criteria\n        var filterCb = _filterMap[criteria];\n        if (filterCb) {\n          $items.filter(filterCb).addClass(_cssCls.hidden);\n        }\n\n        // update the section counters\n        this.controls.$tree.find(_selectors.sections).each(function () {\n          var $section = $$1(this);\n          var $itemsFound = $section.find(_selectors.items).not(_selectors.hidden);\n          var $filtered = $itemsFound.not(_selectors.disabled);\n          self.writeCount($section.find(_selectors.counters), $filtered.length, $itemsFound.length);\n        });\n        this.currentFilter = criteria;\n      },\n      /**\n       * Update the config\n       * @param {Object} [config]\n       * @returns {navigatorApi}\n       */\n      updateConfig: function updateConfig(config) {\n        var $component = this.getElement();\n        var scopeClass = _cssCls.scope[this.config.scope || _defaults.scope];\n\n        // apply the new config\n        config = _.merge(this.config, config || {});\n\n        // enable/disable the collapsing of the panel\n        $component.toggleClass(_cssCls.collapsible, config.canCollapse);\n\n        // update the component CSS class according to the scope\n        $component.removeClass(scopeClass);\n        scopeClass = _cssCls.scope[this.config.scope || _defaults.scope];\n        $component.addClass(scopeClass);\n        return this;\n      },\n      /**\n       * Keep the active item visible, auto scroll if needed\n       */\n      autoScroll: function autoScroll() {\n        autoscroll(this.controls.$tree.find(_selectors.activeItem), this.controls.$tree);\n      },\n      /**\n       * Updates the review screen\n       * @param {Object} map The current test map\n       * @param {Object} context The current test context\n       * @returns {navigatorApi}\n       * @fires navigator#update\n       */\n      update(map, context) {\n        const scopedMap = this.getScopedMap(map, context);\n        const testPart = mapHelper.getPart(map, context.testPartId);\n        const progression = scopedMap.stats || {\n          questions: 0,\n          answered: 0,\n          flagged: 0,\n          viewed: 0,\n          total: 0\n        };\n        const totalQuestions = this.getProgressionTotal(progression, 'questions');\n        this.map = map;\n        this.progression = progression;\n\n        // update the info panel\n        this.writeCount(this.controls.$infoAnswered, progression.answered, totalQuestions);\n        this.writeCount(this.controls.$infoUnanswered, totalQuestions - progression.answered, totalQuestions);\n        this.writeCount(this.controls.$infoViewed, progression.viewed, this.getProgressionTotal(progression, 'total'));\n        this.writeCount(this.controls.$infoFlagged, progression.flagged, totalQuestions);\n        this.writeCount(this.controls.$infoAll, totalQuestions, null);\n\n        // rebuild the tree\n        if (!testPart.isLinear) {\n          this.controls.$filterBar.show();\n          this.controls.$linearState.hide();\n          this.controls.$tree.html(navigatorTreeTpl(scopedMap));\n          this.autoScroll();\n          const activeItem = mapHelper.getActiveItem(scopedMap);\n          this.setState('prevents-unseen', this.config.preventsUnseen);\n          const isSkipaheadEnabled = activeItem && activeItem.categories && _.indexOf(activeItem.categories, 'x-tao-option-review-skipahead') >= 0;\n          this.setState('skipahead-enabled', isSkipaheadEnabled);\n          if (this.config.preventsUnseen && !isSkipaheadEnabled) {\n            // disables all unseen items to prevent the test taker has access to.\n            this.controls.$tree.find(_selectors.unseen).addClass(_cssCls.disabled);\n          }\n        } else {\n          this.controls.$filterBar.hide();\n          this.controls.$linearState.show();\n          this.controls.$tree.empty();\n        }\n\n        // apply again the current filter\n        this.filter(this.controls.$filters.filter(_selectors.actives).data('mode'));\n\n        /**\n         * @event navigator#update the navigation data have changed\n         */\n        this.trigger('update');\n        return this;\n      },\n      /**\n       * Gets the scoped map\n       * @param {Object} map The current test map\n       * @param {Object} context The current test context\n       * @returns {object} The scoped map\n       */\n      getScopedMap: function getScopedMap(map, context) {\n        var scopedMap = mapHelper.getScopeMapFromContext(map, context, this.config.scope);\n        var testPart = mapHelper.getPart(scopedMap, context.testPartId) || {};\n        var section = mapHelper.getSection(scopedMap, context.sectionId) || {};\n        var item = mapHelper.getItem(scopedMap, context.itemIdentifier) || {};\n\n        // set the active part/section/item\n        testPart.active = true;\n        section.active = true;\n        item.active = true;\n\n        //interactive item counter\n        let counter = 0;\n\n        // adjust each item with additional meta\n        return mapHelper.each(scopedMap, function (itm) {\n          var cls = [];\n          var icon = '';\n          if (itm.active) {\n            cls.push('active');\n          }\n          if (itm.informational) {\n            cls.push('info');\n            icon = icon || 'info';\n          }\n          if (itm.flagged) {\n            cls.push('flagged');\n            icon = icon || 'flagged';\n          }\n          if (itm.answered) {\n            cls.push('answered');\n            icon = icon || 'answered';\n          }\n          if (itm.viewed) {\n            cls.push('viewed');\n            icon = icon || 'viewed';\n          } else {\n            cls.push('unseen');\n            icon = icon || 'unseen';\n          }\n          if (!itm.informational) {\n            counter += 1;\n            itm.numberTest = counter; //item position in whole test from 1\n          }\n\n          itm.cls = cls.join(' ');\n          itm.icon = icon;\n        });\n      },\n      /**\n       * Updates a counter\n       * @param {jQuery} $place\n       * @param {Number} count\n       * @param {Number|Null} total\n       * @private\n       */\n      writeCount: function writeCount($place, count, total) {\n        var display = 0;\n        if ($place.parent().hasClass('qti-navigator-tab')) {\n          display = Math.max(count, 0);\n        } else if (total > 0) {\n          display = `${Math.min(count, total)}/${total}`;\n        }\n        $place.text(display);\n      },\n      /**\n       * Selects an item\n       * @param {String|jQuery} position The item's position\n       * @param {Boolean} [open] Forces the tree to be opened on the selected item\n       * @returns {jQuery} Returns the selected item\n       */\n      select: function select(position, open) {\n        // find the item to select and extract its hierarchy\n        var $tree = this.controls.$tree;\n        var selected = position && position.jquery ? position : $tree.find(`[data-position=${position}]`);\n        var hierarchy = selected.parentsUntil($tree);\n        var previousPosition = 0;\n        var $previous = $tree.find(_selectors.activeItem);\n        if ($previous.length) {\n          previousPosition = $previous.data('position');\n        }\n\n        // collapse the full tree and open only the hierarchy of the selected item\n        if (open) {\n          this.openOnly(hierarchy);\n        }\n\n        // select the item\n        $tree.find(_selectors.actives).removeClass(_cssCls.active);\n        hierarchy.add(selected).addClass(_cssCls.active);\n        position = selected.data('position');\n\n        /**\n         * An item is selected\n         *\n         * @param {Number} position - The item position on which select\n         * @param {Number} previousPosition - The item position from which select\n         * @event navigator#selected\n         */\n        this.trigger('selected', position, previousPosition);\n        return selected;\n      },\n      /**\n       * Opens the tree on the selected item only\n       * @returns {jQuery} Returns the selected item\n       */\n      openSelected: function openSelected() {\n        // find the selected item and extract its hierarchy\n        var $tree = this.controls.$tree;\n        var selected = $tree.find(_selectors.items + _selectors.actives);\n        var hierarchy = selected.parentsUntil($tree);\n\n        // collapse the full tree and open only the hierarchy of the selected item\n        this.openOnly(hierarchy);\n        return selected;\n      },\n      /**\n       * Collapses the full tree and opens only the provided branch\n       * @param {jQuery} opened The element to be opened\n       * @param {jQuery} [root] The root element from which collapse the panels\n       */\n      openOnly: function openOnly(opened, root) {\n        (root || this.controls.$tree).find(_selectors.collapsible).addClass(_cssCls.collapsed);\n        opened.removeClass(_cssCls.collapsed);\n      },\n      /**\n       * Toggles a panel\n       * @param {jQuery} panel The panel to toggle\n       * @param {String} [collapseSelector] Selector of panels to collapse\n       * @returns {Boolean} Returns `true` if the panel just expanded now\n       */\n      togglePanel: function togglePanel(panel, collapseSelector) {\n        var collapsed = panel.hasClass(_cssCls.collapsed);\n        if (collapseSelector) {\n          this.controls.$tree.find(collapseSelector).addClass(_cssCls.collapsed);\n        }\n        if (collapsed) {\n          panel.removeClass(_cssCls.collapsed);\n        } else {\n          panel.addClass(_cssCls.collapsed);\n        }\n        return collapsed;\n      },\n      /**\n       * Toggles the display state of the component\n       * @param {Boolean} [show] External condition that's tells if the component must be shown or hidden\n       * @returns {navigatorApi}\n       */\n      toggle: function toggle(show) {\n        if (typeof show === 'undefined') {\n          show = this.is('hidden');\n        }\n        if (show) {\n          this.show();\n        } else {\n          this.hide();\n        }\n        return this;\n      }\n    };\n\n    /**\n     *\n     * @param {Object} config\n     * @param {String} [config.scope] Limit the review screen to a particular scope: test, testPart, testSection\n     * @param {Boolean} [config.preventsUnseen] Prevents the test taker to access unseen items\n     * @param {Boolean} [config.canCollapse] Allow the test taker to collapse the component\n     * @param {Boolean} [config.canFlag] Allow the test taker to flag items\n     * @param {Boolean} [config.hidden] Hide the component at init\n     * @returns {*}\n     */\n    function navigatorFactory(config) {\n      var navigator;\n\n      /**\n       * Flags an item\n       * @param {jQuery} $item\n       */\n      function flagItem($item) {\n        var position = $item.data('position');\n        var flagged = !$item.hasClass(_cssCls.flagged);\n\n        // update the display\n        navigator.setItemFlag(position, flagged);\n\n        /**\n         * An item is flagged\n         * @event navigator#flag\n         * @param {Number} position - The item position on which jump\n         * @param {Boolean} flag - Tells whether the item is marked for review or not\n         */\n        navigator.trigger('flag', position, flagged);\n      }\n\n      /**\n       * Jumps to an item\n       * @param {jQuery} $item\n       * @private\n       */\n      function jump($item) {\n        var position = $item.data('position');\n\n        /**\n         * A jump to a particular item is required\n         * @event navigator#jump\n         * @param {Number} position - The item position on which jump\n         */\n        navigator.trigger('jump', position);\n      }\n      navigator = component(navigatorApi, _defaults).setTemplate(navigatorTpl)\n\n      // uninstalls the component\n      .on('destroy', function () {\n        this.controls = null;\n      })\n\n      // keep the activ item visible\n      .on('show', function () {\n        this.autoScroll();\n      })\n\n      // renders the component\n      .on('render', function () {\n        var self = this;\n\n        // main component elements\n        var $component = this.getElement();\n        var $filterBar = $component.find(_selectors.filterBar);\n        var $filters = $filterBar.find('li');\n        var $tree = $component.find(_selectors.tree);\n\n        // links the component to the underlying DOM elements\n        this.controls = {\n          // access to info panel displaying counters\n\n          $infoAnswered: $component.find(_selectors.infoAnswered),\n          $infoViewed: $component.find(_selectors.infoViewed),\n          $infoAll: $component.find(_selectors.tabInfoAll),\n          $infoUnanswered: this.config.showLegend ? $component.find(_selectors.infoUnanswered) : $component.find(_selectors.tabInfoUnanswered),\n          $infoFlagged: this.config.showLegend ? $component.find(_selectors.infoFlagged) : $component.find(_selectors.tabInfoFlagged),\n          // access to filter switches\n          $filterBar: $filterBar,\n          $filters: $filters,\n          // access to the tree of parts/sections/items\n          $tree: $tree,\n          // access to the panel displayed when a linear part is reached\n          $linearState: $component.find(_selectors.linearState)\n        };\n\n        // apply options\n        this.updateConfig();\n\n        // click on the collapse handle: collapse/expand the review panel\n        $component.on(`click${_selectors.component}`, _selectors.collapseHandle, function () {\n          if (!self.is('disabled')) {\n            $component.toggleClass(_cssCls.collapsed);\n            if ($component.hasClass(_cssCls.collapsed)) {\n              self.openSelected();\n            }\n          }\n        });\n\n        // click on the info panel title: toggle the related panel\n        $component.on(`click${_selectors.component}`, _selectors.infoPanelLabels, function () {\n          if (!self.is('disabled')) {\n            self.togglePanel($$1(this).closest(_selectors.infoPanel), _selectors.infoPanel);\n          }\n        });\n\n        // click on a part title: toggle the related panel\n        $tree.on(`click${_selectors.component}`, _selectors.partLabels, function () {\n          var $panel;\n          if (!self.is('disabled')) {\n            $panel = $$1(this).closest(_selectors.parts);\n            if (self.togglePanel($panel, _selectors.parts)) {\n              if ($panel.hasClass(_cssCls.active)) {\n                self.openSelected();\n              } else {\n                self.openOnly($panel.find(_selectors.sections).first(), $panel);\n              }\n            }\n          }\n        });\n\n        // click on a section title: toggle the related panel\n        $tree.on(`click${_selectors.component}`, _selectors.sectionLabels, function () {\n          if (!self.is('disabled')) {\n            self.togglePanel($$1(this).closest(_selectors.sections), _selectors.sections);\n          }\n        });\n\n        // click on an item: jump to the position\n        $tree.on(`click${_selectors.component}`, _selectors.itemLabels, function (event) {\n          var $item, $target;\n          if (!self.is('disabled')) {\n            $item = $$1(this).closest(_selectors.items);\n            if (!$item.hasClass(_cssCls.disabled)) {\n              $target = $$1(event.target);\n              if (self.config.canFlag && $target.is(_selectors.icons) && !$component.hasClass(_cssCls.collapsed)) {\n                // click on the icon, just flag the item, unless the panel is collapsed\n                if (!$item.hasClass(_cssCls.unseen) && !$item.hasClass(_cssCls.info)) {\n                  flagItem($item);\n                }\n              } else if (!$item.hasClass(_cssCls.active)) {\n                // go to the selected item\n                self.select($item);\n                jump($item);\n              }\n            }\n          }\n        });\n\n        // click on the start button inside a linear part: jump to the position\n        $tree.on(`click${_selectors.component}`, _selectors.linearStart, function () {\n          var $btn;\n          if (!self.is('disabled')) {\n            $btn = $$1(this);\n\n            // go to the first item of the linear part\n            if (!$btn.hasClass(_cssCls.disabled)) {\n              $btn.addClass(_cssCls.disabled);\n              jump($btn);\n            }\n          }\n        });\n\n        // click on a filter button\n        $filterBar.on(`click${_selectors.component}`, _selectors.filter, function () {\n          var $btn, mode;\n          if (!self.is('disabled')) {\n            $btn = $$1(this);\n            mode = $btn.data('mode');\n\n            // select the button\n            $filters.removeClass(_cssCls.active);\n            $filters.attr('aria-selected', false);\n            $component.removeClass(_cssCls.collapsed);\n            $btn.addClass(_cssCls.active);\n            $btn.attr('aria-selected', true);\n\n            // filter the items\n            self.filter(mode);\n\n            //after filtering, ensure that the active item (if exists) is visible\n            self.autoScroll();\n          }\n        });\n      });\n\n      // set default filter\n      navigator.currentFilter = 'all';\n\n      // the component will be ready\n      return navigator.init(config);\n    }\n\n    return navigatorFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/review/navigatorFizzy',['lodash', 'i18n', 'ui/component', 'ui/itemButtonList', 'taoQtiTest/runner/helpers/map', 'handlebars', 'lib/handlebars/helpers'], function (_, __, componentFactory, itemButtonListFactory, mapHelper, Handlebars, Helpers0) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    componentFactory = componentFactory && Object.prototype.hasOwnProperty.call(componentFactory, 'default') ? componentFactory['default'] : componentFactory;\n    itemButtonListFactory = itemButtonListFactory && Object.prototype.hasOwnProperty.call(itemButtonListFactory, 'default') ? itemButtonListFactory['default'] : itemButtonListFactory;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      \n      return \" hidden\";\n      }\n\n      buffer += \"<div class=\\\"qti-panel qti-navigator\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.hidden), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" qti-navigator-fizzy\\\">\\n    <div class=\\\"qti-navigator-header\\\">\\n        <div class=\\\"qti-navigator-text\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Test overview\", options) : helperMissing.call(depth0, \"__\", \"Test overview\", options)))\n        + \"</div>\\n        <a class=\\\"icon-close\\\" href=\\\"#\\\" onclick=\\\"return false\\\" aria-hidden=\\\"true\\\"></a>\\n    </div>\\n    <nav class=\\\"qti-navigator-tree\\\"></nav>\\n    <div id=\\\"qti-navigator-linear\\\" class=\\\"qti-navigator-linear\\\">\\n        <p class=\\\"qti-navigator-message\\\">\\n            \"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n        + \"\\n        </p>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function navigatorTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n    \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.parts), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n        \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.sections), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n            <li class=\\\"qti-navigator-section\\\">\\n                <div class=\\\"qti-navigator-label\\\" title=\\\"\";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\\n                    \";\n      if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\n                </div>\\n                <div class=\\\"qti-navigator-items\\\"></div>\\n            </li>\\n        \";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      \n      return \"\\n    <li class=\\\"qti-navigator-section\\\">\\n        <div class=\\\"qti-navigator-items\\\"></div>\\n    </li>\\n\";\n      }\n\n      buffer += \"<ol class=\\\"qti-navigator-sections plain\\\">\\n\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.displaySectionTitles), {hash:{},inverse:self.program(5, program5, data),fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</ol>\\n\";\n      return buffer;\n      });\n    function navigatorTreeTpl(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Some default values\n     * @type {Object}\n     * @private\n     */\n    const _defaults = {\n      scope: 'test',\n      preventsUnseen: true\n    };\n\n    /**\n     * List of common CSS selectors\n     * @type {Object}\n     * @private\n     */\n    const _selectors = {\n      component: '.qti-navigator',\n      tree: '.qti-navigator-tree',\n      linearState: '.qti-navigator-linear',\n      closeButton: '.icon-close',\n      itemButtonListContainer: '.qti-navigator-items'\n    };\n\n    /**\n     * @param {Object} config\n     * @param {String} [config.scope] Limit the review screen to a particular scope: test, testPart, testSection\n     * @param {Boolean} [config.preventsUnseen] Prevents the test taker to access unseen items\n     * @returns {*}\n     */\n    function navigatorFactory(config) {\n      let component;\n\n      /**\n       * Handle click on an item: jump to the position, if allowed\n       * @param {String} itemId\n       */\n      function onItemClick(itemId) {\n        const item = mapHelper.getItem(component.map, itemId);\n        const activeItem = mapHelper.getItem(component.map, component.testContext.itemIdentifier);\n        if (item && item.id && !component.is('disabled')) {\n          if (!(component.disableUnseenItems && !item.viewed) && (!activeItem || item.position !== activeItem.position)) {\n            component.select(item.position);\n            /**\n             * A jump to a particular item is required\n             * @event navigator#jump\n             * @param {Number} position - The item position on which jump\n             */\n            component.trigger('jump', item.position);\n          }\n        }\n      }\n\n      /**\n       * Render items\n       * @param {Object} fizzyItemButtonMap - list of items in format needed for rendering\n       * @param {String} activeItemId\n       */\n      function renderItemButtonListComponents(fizzyItemButtonMap, activeItemId) {\n        component.itemButtonListComponents.forEach(c => c.destroy());\n        component.itemButtonListComponents = [];\n        component.controls.$tree.find(_selectors.itemButtonListContainer).each((index, itemButtonListContainerElem) => {\n          const itemButtonListComponent = itemButtonListFactory({\n            items: fizzyItemButtonMap.sections[index].items,\n            scrollContainer: component.controls.$tree\n          }).render(itemButtonListContainerElem).on('click', _ref => {\n            let {\n              id\n            } = _ref;\n            return onItemClick(id);\n          });\n          component.itemButtonListComponents.push(itemButtonListComponent);\n        });\n        component.itemButtonListComponents.forEach(c => c.setActiveItem(activeItemId));\n      }\n\n      /**\n       * Get list of items in format needed for rendering\n       * @param {Object} scopedMap - test map, limited to the scope\n       * @param {Boolean} disableUnseenItems\n       * @returns {Object}\n       */\n      function getFizzyItemButtonMap(scopedMap, disableUnseenItems) {\n        const {\n          displaySectionTitles,\n          displayItemTooltip\n        } = component.getConfig();\n        let nonInformationalCount = 0;\n        const fizzyMap = {\n          sections: []\n        };\n        _.forEach(scopedMap.parts, function (part) {\n          _.forEach(part.sections, function (dataSection) {\n            let fizzySection;\n            if (displaySectionTitles) {\n              fizzySection = {\n                label: dataSection.label,\n                items: []\n              };\n              fizzyMap.sections.push(fizzySection);\n            } else {\n              if (fizzyMap.sections.length) {\n                fizzySection = fizzyMap.sections[0];\n              } else {\n                fizzySection = {\n                  items: []\n                };\n                fizzyMap.sections.push(fizzySection);\n              }\n            }\n            _.forEach(dataSection.items, function (dataItem) {\n              if (!dataItem.informational) {\n                nonInformationalCount++;\n              }\n              const fizzyItem = {\n                id: dataItem.id,\n                position: dataItem.position\n              };\n              fizzySection.items.push(fizzyItem);\n              fizzyItem.numericLabel = dataItem.informational ? '' : `${nonInformationalCount}`;\n              if (dataItem.informational) {\n                fizzyItem.icon = 'info';\n                fizzyItem.ariaLabel = __('Informational item');\n              } else if (dataItem.flagged) {\n                fizzyItem.icon = 'flagged';\n                fizzyItem.ariaLabel = __('Bookmarked question %s', nonInformationalCount);\n              } else {\n                fizzyItem.icon = null;\n                fizzyItem.ariaLabel = __('Question %s', nonInformationalCount);\n              }\n              if (dataItem.answered) {\n                fizzyItem.status = 'answered';\n              } else if (dataItem.viewed) {\n                fizzyItem.status = 'viewed';\n              } else {\n                fizzyItem.status = 'unseen';\n              }\n              if (disableUnseenItems && !dataItem.viewed) {\n                // disables all unseen items to prevent the test taker has access to.\n                fizzyItem.disabled = true;\n              } else if (displayItemTooltip) {\n                fizzyItem.title = dataItem.label;\n              }\n            });\n          });\n        });\n        return fizzyMap;\n      }\n\n      /**\n       *\n       * @type {Object}\n       */\n      const navigatorApi = {\n        /**\n         * Set the marked state of an item\n         * @param {Number} position\n         * @param {Boolean} flag\n         */\n        setItemFlag(position, flag) {\n          const updatedMap = _.cloneDeep(this.map);\n          const updatedItem = mapHelper.getItemAt(updatedMap, position);\n          if (updatedItem && updatedItem.id) {\n            updatedItem.flagged = flag;\n            const updatedScopeMap = mapHelper.getScopeMapFromContext(updatedMap, this.testContext, this.config.scope);\n            const updatedFizzyMap = getFizzyItemButtonMap(updatedScopeMap, this.disableUnseenItems);\n            let updatedItemData;\n            _.forEach(updatedFizzyMap.sections, fizzySection => {\n              updatedItemData = _.find(fizzySection.items, fizzyItem => fizzyItem.id === updatedItem.id);\n              if (updatedItemData) {\n                return false;\n              }\n            });\n            this.itemButtonListComponents.forEach(c => c.updateItem(updatedItem.id, updatedItemData));\n          }\n        },\n        /**\n         * Update the config\n         * @returns {navigatorApi}\n         */\n        updateConfig() {\n          //not implemented\n          return this;\n        },\n        /**\n         * Updates the review screen\n         * @param {Object} map The current test map\n         * @param {Object} context The current test context\n         * @returns {navigatorApi}\n         * @fires navigator#update\n         */\n        update(map, context) {\n          const scopedMap = mapHelper.getScopeMapFromContext(map, context, this.config.scope);\n          scopedMap.displaySectionTitles = this.getConfig().displaySectionTitles;\n          const activeItemId = context.itemIdentifier;\n          const isSkipaheadEnabled = mapHelper.hasItemCategory(map, activeItemId, 'x-tao-option-review-skipahead');\n          this.map = map;\n          this.testContext = context;\n          this.disableUnseenItems = this.config.preventsUnseen && !isSkipaheadEnabled;\n\n          // rebuild the tree\n          const testPart = mapHelper.getPart(map, context.testPartId);\n          if (!testPart.isLinear) {\n            this.setState('skipahead-enabled', isSkipaheadEnabled);\n            this.setState('prevents-unseen', this.config.preventsUnseen);\n            this.controls.$linearState.hide();\n            this.controls.$tree.html(navigatorTreeTpl(scopedMap));\n            const fizzyItemButtonMap = getFizzyItemButtonMap(scopedMap, this.disableUnseenItems);\n            renderItemButtonListComponents(fizzyItemButtonMap, activeItemId);\n          } else {\n            this.controls.$linearState.show();\n            this.controls.$tree.empty();\n          }\n\n          /**\n           * @event navigator#update the navigation data have changed\n           */\n          this.trigger('update');\n          return this;\n        },\n        /**\n         * Selects an item\n         * @param {Number} position The item's position\n         */\n        select(position) {\n          let previousPosition = 0;\n          const previousItem = mapHelper.getItem(this.map, this.testContext.itemIdentifier);\n          if (previousItem && previousItem.id) {\n            previousPosition = previousItem.position;\n          }\n          const item = mapHelper.getItemAt(this.map, parseInt(position));\n          if (item && item.id) {\n            this.itemButtonListComponents.forEach(c => c.setActiveItem(item.id));\n          }\n\n          /**\n           * An item is selected\n           * @param {Number} position - The item position on which select\n           * @param {Number} previousPosition - The item position from which select\n           * @event navigator#selected\n           */\n          this.trigger('selected', position, previousPosition);\n        }\n      };\n      component = componentFactory(navigatorApi, _defaults).setTemplate(navigatorTpl).on('init', function () {\n        this.itemButtonListComponents = [];\n      }).on('destroy', function () {\n        this.controls = null;\n        this.itemButtonListComponents.forEach(c => c.destroy());\n        this.itemButtonListComponents = [];\n      }).on('render', function () {\n        const $component = this.getElement();\n        this.controls = {\n          $tree: $component.find(_selectors.tree),\n          $linearState: $component.find(_selectors.linearState),\n          $closeButton: $component.find(_selectors.closeButton)\n        };\n        this.controls.$closeButton.on('click', function (e) {\n          e.preventDefault();\n          /**\n           * Review screen should be closed\n           * @event navigator#close\n           */\n          component.trigger('close');\n        });\n      }).on('enable', function () {\n        this.itemButtonListComponents.forEach(c => c.enable());\n      }).on('disable', function () {\n        this.itemButtonListComponents.forEach(c => c.disable());\n      });\n      return component.init(config);\n    }\n\n    return navigatorFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/review/review',['lodash', 'i18n', 'ui/hider', 'util/shortcut', 'util/namespace', 'taoTests/runner/plugin', 'taoQtiTest/runner/helpers/map', 'taoQtiTest/runner/plugins/navigation/review/navigator', 'taoQtiTest/runner/plugins/navigation/review/navigatorFizzy'], function (_, __, hider, shortcut, namespaceHelper, pluginFactory, mapHelper, defaultNavigatorFactory, fizzyNavigatorFactory) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    defaultNavigatorFactory = defaultNavigatorFactory && Object.prototype.hasOwnProperty.call(defaultNavigatorFactory, 'default') ? defaultNavigatorFactory['default'] : defaultNavigatorFactory;\n    fizzyNavigatorFactory = fizzyNavigatorFactory && Object.prototype.hasOwnProperty.call(fizzyNavigatorFactory, 'default') ? fizzyNavigatorFactory['default'] : fizzyNavigatorFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The display states of the buttons\n     */\n    var buttonData = {\n      setFlag: {\n        control: 'set-item-flag',\n        title: __('Flag the current item for later review'),\n        icon: 'anchor',\n        text: __('Flag for Review')\n      },\n      unsetFlag: {\n        control: 'unset-item-flag',\n        title: __('Do not flag the current item for later review'),\n        icon: 'anchor',\n        text: __('Unflag for Review')\n      },\n      setFlagBookmarked: {\n        control: 'set-item-flag',\n        title: __('Bookmark the current question for later review'),\n        icon: 'bookmark',\n        text: __('Bookmark question')\n      },\n      unsetFlagBookmarked: {\n        control: 'unset-item-flag',\n        title: __('Do not bookmark the current question for later review'),\n        icon: 'bookmark-outline',\n        text: __('Bookmark question')\n      },\n      showReview: {\n        control: 'show-review',\n        title: __('Show the review screen'),\n        icon: 'right',\n        text: __('Show Review')\n      },\n      hideReview: {\n        control: 'hide-review',\n        title: __('Hide the review screen'),\n        icon: 'left',\n        text: __('Hide Review')\n      },\n      showTestOverview: {\n        control: 'show-test-overview',\n        title: __('Show test overview panel'),\n        icon: 'desktop-preview',\n        text: __('Test overview')\n      },\n      hideTestOverview: {\n        control: 'hide-test-overview',\n        title: __('Hide test overview panel'),\n        icon: 'desktop-preview',\n        text: __('Test overview')\n      }\n    };\n\n    /**\n     * Get the flagged value for the item at that position\n     * @param {Object} testMap\n     * @param {Number} position - the item position\n     * @returns {Boolean}\n     */\n    function isItemFlagged(testMap, position) {\n      const item = mapHelper.getItemAt(testMap, position);\n      return !!item.flagged;\n    }\n\n    /**\n     * Update the button based on the provided data\n     * @param {Component} button - the element to update\n     * @param {Object} data - the button data\n     */\n    function updateButton(button, data) {\n      var $button = button.getElement();\n      if (button.is('rendered')) {\n        if ($button.data('control') !== data.control) {\n          $button.data('control', data.control).attr('title', data.title);\n          $button.find('.icon').attr('class', `icon icon-${data.icon}`);\n          $button.find('.text').text(data.text);\n          if (data.control.includes('flag') || data.control.includes('overview')) {\n            if (button.is('active')) {\n              button.turnOff();\n            } else {\n              button.turnOn();\n            }\n          }\n        }\n      }\n    }\n\n    /**\n     * Checks if the current context allows to mark the item for review\n     * @param {Object} testRunner\n     * @returns {Boolean}\n     */\n    function canFlag(testRunner) {\n      const testContext = testRunner.getTestContext();\n      const testMap = testRunner.getTestMap();\n      const item = testRunner.getCurrentItem();\n      const testPart = testRunner.getCurrentPart();\n      const markReviewCategory = mapHelper.hasItemCategory(testMap, testContext.itemIdentifier, 'markReview', true);\n      return !!(!testPart.isLinear && markReviewCategory && !(item && item.informational));\n    }\n\n    /**\n     * Creates the timer plugin\n     */\n    var review = pluginFactory({\n      name: 'review',\n      /**\n       * Initializes the plugin (called during runner's init)\n       */\n      init: function init() {\n        const self = this;\n        const testRunner = this.getTestRunner();\n        const testContext = testRunner.getTestContext();\n        const testMap = testRunner.getTestMap();\n        const testRunnerOptions = testRunner.getOptions();\n        const pluginShortcuts = (testRunnerOptions.shortcuts || {})[this.getName()] || {};\n        const pluginConfig = this.getConfig();\n        let navigatorConfig = testRunnerOptions.review || {\n          defaultOpen: false\n        };\n        navigatorConfig = Object.assign({}, navigatorConfig, pluginConfig);\n        this.isFizzyLayout = navigatorConfig && navigatorConfig.reviewLayout === 'fizzy';\n        let previousItemPosition;\n\n        /**\n         * Gets the definition of the flagItem button related to the context\n         * @param {Boolean} flag - the flag status\n         * @returns {Object}\n         */\n        function getFlagItemButtonData(flag) {\n          let dataType = flag ? 'unsetFlag' : 'setFlag';\n          if (self.isFizzyLayout) {\n            dataType = flag ? 'unsetFlagBookmarked' : 'setFlagBookmarked';\n          }\n          return buttonData[dataType];\n        }\n\n        /**\n         * Gets the definition of the toggleNavigator button related to the context\n         * @param {Object} navigator - the navigator component\n         * @returns {Object}\n         */\n        function getToggleButtonData(navigator) {\n          let dataType = navigator.is('hidden') ? 'showReview' : 'hideReview';\n          if (self.isFizzyLayout) {\n            dataType = navigator.is('hidden') ? 'showTestOverview' : 'hideTestOverview';\n          }\n          return buttonData[dataType];\n        }\n\n        /**\n         * Retrieve the review categories of the current item\n         * @returns {Object} the calculator categories\n         */\n        function getReviewCategories() {\n          const currentContext = testRunner.getTestContext();\n          const currentMap = testRunner.getTestMap();\n          return {\n            reviewScreen: mapHelper.hasItemCategory(currentMap, currentContext.itemIdentifier, 'reviewScreen', true),\n            markReview: mapHelper.hasItemCategory(currentMap, currentContext.itemIdentifier, 'markReview', true)\n          };\n        }\n\n        /**\n         * Tells if the component is enabled\n         * @returns {Boolean}\n         */\n        function isPluginAllowed() {\n          const categories = getReviewCategories();\n          return navigatorConfig.enabled && categories.reviewScreen;\n        }\n\n        /**\n         * Mark an item for review\n         * @param {Number} position\n         * @param {Boolean} flag\n         * @returns {Promise}\n         */\n        function flagItem(position, flag) {\n          self.disable();\n          return testRunner.getProxy().callTestAction('flagItem', {\n            position,\n            flag\n          }).then(function () {\n            const item = mapHelper.getItemAt(testRunner.getTestMap(), position);\n\n            //update the value in the current testMap\n            item.flagged = flag;\n\n            // update the display of the flag button\n            updateButton(self.flagItemButton, getFlagItemButtonData(flag));\n\n            // update the item state\n            self.navigator.setItemFlag(position, flag);\n            self.enable();\n          }).catch(function () {\n            // rollback on the item flag\n            self.navigator.setItemFlag(position, !flag);\n            self.enable();\n          });\n        }\n\n        /**\n         * Mark the current item for review\n         */\n        function flagCurrentItem() {\n          if (self.getState('enabled') !== false) {\n            const itemPosition = testRunner.getTestContext().itemPosition;\n            const flagStatus = isItemFlagged(testRunner.getTestMap(), itemPosition);\n            flagItem(itemPosition, !flagStatus);\n          }\n        }\n\n        /**\n         * Shows/hides the review panel\n         *\n         * @param [{Boolean} forcedState], true will show the panel\n         */\n        function togglePanel(forcedState) {\n          var isHidden = _.isUndefined(forcedState) ? self.navigator.is('hidden') : forcedState;\n          if (isHidden) {\n            self.explicitlyHidden = false;\n            self.navigator.show();\n          } else {\n            self.explicitlyHidden = true;\n            self.navigator.hide();\n          }\n          updateButton(self.toggleButton, getToggleButtonData(self.navigator));\n        }\n        const navigatorFactory = this.isFizzyLayout ? fizzyNavigatorFactory : defaultNavigatorFactory;\n        this.navigator = navigatorFactory(navigatorConfig).on('selected', function (position, previousPosition) {\n          previousItemPosition = previousPosition;\n        }).on('jump', function (position) {\n          if (self.getState('enabled') !== false) {\n            self.disable();\n            testRunner.jump(position, 'item');\n          }\n        }).on('flag', function (position, flag) {\n          if (self.getState('enabled') !== false) {\n            flagItem(position, flag);\n          }\n        }).on('close', function () {\n          testRunner.trigger('tool-reviewpanel');\n        }).render();\n\n        // restore current item in the navigator if movement not allowed\n        testRunner.on('alert.notallowed', function () {\n          self.navigator.select(previousItemPosition);\n        });\n        this.explicitlyHidden = false;\n\n        // register buttons in the toolbox component\n        this.toggleButton = this.getAreaBroker().getToolbox().createEntry(getToggleButtonData(this.navigator));\n        this.toggleButton.on('click', function (e) {\n          e.preventDefault();\n          testRunner.trigger('tool-reviewpanel');\n        });\n        this.flagItemButton = this.getAreaBroker().getToolbox().createEntry(getFlagItemButtonData(isItemFlagged(testMap, testContext.itemPosition)));\n        this.flagItemButton.on('click', function (e) {\n          e.preventDefault();\n          testRunner.trigger('tool-flagitem');\n        });\n        if (testRunnerOptions.allowShortcuts) {\n          if (pluginShortcuts.flag) {\n            shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.flag, this.getName(), true), function () {\n              testRunner.trigger('tool-flagitem');\n            }, {\n              avoidInput: true\n            });\n          }\n          if (pluginShortcuts.toggle) {\n            shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n              testRunner.trigger('tool-reviewpanel');\n            }, {\n              avoidInput: true\n            });\n          }\n        }\n        if (!isPluginAllowed()) {\n          this.hide();\n        }\n\n        //disabled by default\n        this.disable();\n        togglePanel(navigatorConfig.defaultOpen);\n\n        //change plugin state\n        testRunner.on('render', function () {\n          if (isPluginAllowed()) {\n            self.show();\n            updateButton(self.toggleButton, getToggleButtonData(self.navigator));\n          } else {\n            self.hide();\n          }\n        }).on('loaditem', function () {\n          const context = testRunner.getTestContext();\n          const map = testRunner.getTestMap();\n          const testPart = testRunner.getCurrentPart();\n          const categories = getReviewCategories();\n          if (isPluginAllowed()) {\n            updateButton(self.flagItemButton, getFlagItemButtonData(isItemFlagged(map, context.itemPosition)));\n            self.navigator.update(map, context).updateConfig({\n              canFlag: !testPart.isLinear && categories.markReview\n            });\n            self.show();\n            updateButton(self.toggleButton, getToggleButtonData(self.navigator));\n          } else {\n            self.hide();\n          }\n        }).on('enabletools enablenav', function () {\n          if (isPluginAllowed()) {\n            self.enable();\n          }\n        }).on('disabletools disablenav', function () {\n          if (isPluginAllowed()) {\n            self.disable();\n          }\n        }).on('hidenav', function () {\n          self.hide();\n        }).on('shownav', function () {\n          if (isPluginAllowed()) {\n            self.show();\n          }\n        }).on('tool-flagitem', function () {\n          if (isPluginAllowed() && canFlag(testRunner)) {\n            flagCurrentItem();\n          }\n        }).on('tool-reviewpanel', function () {\n          if (isPluginAllowed() && self.getState('enabled')) {\n            togglePanel();\n          }\n        });\n      },\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        var areaBroker = this.getAreaBroker();\n        var $panelContainer = areaBroker.getPanelArea();\n        $panelContainer.append(this.navigator.getElement());\n      },\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(`.${this.getName()}`);\n        this.navigator.destroy();\n      },\n      /**\n       * Enables the button\n       */\n      enable: function enable() {\n        const testRunner = this.getTestRunner();\n        const testContext = testRunner.getTestContext();\n        const testMap = testRunner.getTestMap();\n        this.flagItemButton.enable();\n        this.toggleButton.enable();\n        this.navigator.enable();\n        if (isItemFlagged(testMap, testContext.itemPosition)) {\n          this.flagItemButton.turnOn();\n        } else {\n          this.flagItemButton.turnOff();\n        }\n        if (this.isFizzyLayout) {\n          if (!this.explicitlyHidden) {\n            this.toggleButton.turnOn();\n          } else {\n            this.toggleButton.turnOff();\n          }\n        }\n      },\n      /**\n       * Disables the button\n       */\n      disable: function disable() {\n        this.flagItemButton.disable();\n        this.flagItemButton.turnOff();\n        this.toggleButton.disable();\n        if (this.isFizzyLayout) {\n          this.toggleButton.turnOff();\n        }\n        this.navigator.disable();\n      },\n      /**\n       * Shows the button\n       */\n      show: function show() {\n        var testRunner = this.getTestRunner();\n        if (canFlag(testRunner)) {\n          this.flagItemButton.show();\n        } else {\n          this.flagItemButton.hide();\n        }\n        this.toggleButton.show();\n        if (!this.explicitlyHidden) {\n          this.navigator.show();\n        } else {\n          this.navigator.hide();\n        }\n      },\n      /**\n       * Hides the button\n       */\n      hide: function hide() {\n        this.flagItemButton.hide();\n        this.toggleButton.hide();\n        this.navigator.hide();\n      }\n    });\n\n    return review;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/skip',['jquery', 'i18n', 'ui/hider', 'taoTests/runner/plugin', 'taoQtiTest/runner/helpers/messages', 'handlebars', 'lib/handlebars/helpers', 'taoQtiTest/runner/helpers/navigation', 'taoQtiTest/runner/helpers/map'], function ($$1, __, hider, pluginFactory, messages, Handlebars, Helpers0, navigationHelper, mapHelper) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    messages = messages && Object.prototype.hasOwnProperty.call(messages, 'default') ? messages['default'] : messages;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    navigationHelper = navigationHelper && Object.prototype.hasOwnProperty.call(navigationHelper, 'default') ? navigationHelper['default'] : navigationHelper;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \" \";\n      if (helper = helpers.className) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.className); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n        aria-\"\n        + escapeExpression(((stack1 = (data == null || data === false ? data : data.key)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"=\\\"\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\"\\n    \";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span class=\\\"icon icon-\";\n      if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1);\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"></span>\";\n      return buffer;\n      }\n    function program6(depth0,data) {\n      \n      \n      return \" no-label\";\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span class=\\\"text\\\">\";\n      if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\";\n      return buffer;\n      }\n\n      buffer += \"<li\\n    data-control=\\\"\";\n      if (helper = helpers.control) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.control); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    class=\\\"small btn-info action\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.className), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n    title=\\\"\";\n      if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    role=\\\"button\\\"\\n    \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.aria), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\" onclick=\\\"return false\\\" aria-hidden=\\\"true\\\" >\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.icon), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </a>\\n</li>\\n\";\n      return buffer;\n      });\n    function buttonTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The display of the skip\n     */\n    var buttonData = {\n      skip: {\n        control: 'skip',\n        title: __('Skip and go to the next item'),\n        icon: 'external',\n        text: __('Skip')\n      },\n      end: {\n        control: 'skip-end',\n        title: __('Skip and go to the end of the test'),\n        icon: 'external',\n        text: __('Skip and end test')\n      }\n    };\n\n    /**\n     * Create the button based on the current context\n     * @param {Object} testRunner - testRunner\n     * @returns {jQueryElement} the button\n     */\n    var createElement = function createElement(testRunner) {\n      const testContext = testRunner.getTestContext();\n      const testMap = testRunner.getTestMap();\n      const isLast = navigationHelper.isLast(testMap, testContext.itemIdentifier);\n      const dataType = isLast ? 'end' : 'skip';\n      return $$1(buttonTpl(buttonData[dataType]));\n    };\n\n    /**\n     * Update the button based on the context\n     * @param {jQueryElement} $element - the element to update\n     * @param {Boolean} [isLast=false] - are we on the last item ?\n     */\n    const updateElement = function updateElement($element) {\n      let isLast = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      const dataType = isLast ? 'end' : 'skip';\n      const button = buttonData[dataType];\n      if (button && $element.attr('data-control') !== button.control) {\n        $element.attr('data-control', button.control).attr('title', button.title).find('.text').text(button.text);\n      }\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    var skip = pluginFactory({\n      name: 'skip',\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init() {\n        const testRunner = this.getTestRunner();\n        const toggle = () => {\n          const testContext = testRunner.getTestContext();\n          if (testContext.allowSkipping === true) {\n            this.show();\n            return true;\n          }\n          this.hide();\n          return false;\n        };\n        function doSkip() {\n          testRunner.skip();\n        }\n        this.$element = createElement(testRunner);\n        this.$element.on('click', e => {\n          const enable = this.enable.bind(this);\n          const testContext = testRunner.getTestContext();\n          const testMap = testRunner.getTestMap();\n          const isLast = navigationHelper.isLast(testMap, testContext.itemIdentifier);\n          const endTestWarning = mapHelper.hasItemCategory(testMap, testContext.itemIdentifier, 'endTestWarning', true);\n          e.preventDefault();\n          if (this.getState('enabled') !== false) {\n            this.disable();\n            if (endTestWarning && isLast) {\n              testRunner.trigger('confirm.endTest', messages.getExitMessage('test', testRunner), doSkip,\n              // if the test taker accept\n              enable // if the test taker refuse\n              );\n            } else {\n              doSkip();\n            }\n          }\n        });\n        toggle();\n        this.disable();\n        testRunner.on('loaditem', () => {\n          if (toggle()) {\n            const testContext = testRunner.getTestContext();\n            const testMap = testRunner.getTestMap();\n            const isLast = navigationHelper.isLast(testMap, testContext.itemIdentifier);\n            updateElement(this.$element, isLast);\n          }\n        }).on('enablenav', () => this.enable()).on('disablenav', () => this.disable()).on('hidenav', () => this.hide()).on('shownav', () => this.show());\n      },\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        var $container = this.getAreaBroker().getNavigationArea();\n        $container.append(this.$element);\n      },\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        this.$element.remove();\n      },\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.$element.removeProp('disabled').removeClass('disabled');\n      },\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.$element.prop('disabled', true).addClass('disabled');\n      },\n      /**\n       * Show the button\n       */\n      show: function show() {\n        hider.show(this.$element);\n      },\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        hider.hide(this.$element);\n      }\n    });\n\n    return skip;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/validateResponses',['lodash', 'i18n', 'taoTests/runner/plugin', 'taoQtiTest/runner/helpers/currentItem'], function (_, __, pluginFactory, currentItemHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    currentItemHelper = currentItemHelper && Object.prototype.hasOwnProperty.call(currentItemHelper, 'default') ? currentItemHelper['default'] : currentItemHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA ;\n     */\n    var pluginName = 'validateResponses';\n\n    /**\n     * Plugin\n     * @returns {Object}\n     */\n    var validateResponses = pluginFactory({\n      /**\n       * Plugin name\n       * @type {String}\n       */\n      name: pluginName,\n      /**\n       * Initialize plugin (called during runner's initialization)\n       * @returns {this}\n       */\n      init() {\n        const testRunner = this.getTestRunner();\n        const testRunnerOptions = testRunner.getOptions();\n        const pluginConfig = this.getConfig();\n        testRunner.before('move', (e, direction) => {\n          const testContext = testRunner.getTestContext();\n          const isInteracting = !testRunner.getItemState(testContext.itemIdentifier, 'disabled');\n          if (!pluginConfig.validateOnPreviousMove && direction === 'previous') {\n            return Promise.resolve();\n          }\n          if (isInteracting && testRunnerOptions.enableValidateResponses) {\n            const currenItem = testRunner.getCurrentItem();\n            //@deprecated use validateResponses from testMap instead of the testContext\n            const validateResponses = typeof currenItem.validateResponses === 'boolean' ? currenItem.validateResponses : testContext.validateResponses;\n            if (validateResponses) {\n              return new Promise((resolve, reject) => {\n                if (_.size(currentItemHelper.getDeclarations(testRunner)) === 0) {\n                  return resolve();\n                }\n                if (currentItemHelper.isValid(testRunner) && currentItemHelper.isAnswered(testRunner, false)) {\n                  return resolve();\n                }\n                if (!testRunner.getState('alerted.notallowed')) {\n                  // Only show one alert for itemSessionControl\n                  testRunner.setState('alerted.notallowed', true);\n                  testRunner.trigger('alert.notallowed', __('A valid response to this item is required.'), () => {\n                    testRunner.trigger('resumeitem');\n                    reject();\n                    testRunner.setState('alerted.notallowed', false);\n                  });\n                }\n              });\n            }\n          }\n        });\n        return this;\n      }\n    });\n\n    return validateResponses;\n\n});\n\n","define('taoQtiTest/runner/plugins/navigation/warnBeforeLeaving',['i18n', 'taoTests/runner/plugin'], function (__, pluginFactory) { 'use strict';\n\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * There's only a few chance to have this message displayed.\n     * Most browsers doesn't support custom message anymore.\n     * See https://www.chromestatus.com/feature/5349061406228480\n     */\n    var warnMessage = __('Please confirm you want to leave the test.');\n\n    /**\n     * The beforeunload listener\n     * @param {Event} e\n     * @returns {String} the custom message (for some browser, just need to be a string)\n     */\n    var warnListener = function warnListener(e) {\n      e.returnValue = warnMessage;\n      return warnMessage;\n    };\n\n    /**\n     * Plugin factory\n     * @returns {Object}\n     */\n    var warnBeforeLeaving = pluginFactory({\n      /**\n       * Plugin name\n       * @type {String}\n       */\n      name: 'warnBeforeLeaving',\n      /**\n       * Initialize plugin (called during runner's initialization)\n       */\n      init: function init() {\n        this.enable();\n      },\n      /**\n       * Destroy plugin (called during runner's destruction)\n       */\n      destroy: function destroy() {\n        this.disable();\n      },\n      /**\n       * Enables the warning\n       */\n      enable: function enable() {\n        window.addEventListener('beforeunload', warnListener);\n      },\n      /**\n       * Disables the warning\n       */\n      disable: function disable() {\n        window.removeEventListener('beforeunload', warnListener);\n      }\n    });\n\n    return warnBeforeLeaving;\n\n});\n\n","define('taoQtiTest/runner/plugins/security/disableRightClick',['taoTests/runner/plugin'], function (pluginFactory) { 'use strict';\n\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n    var disableRightClick = pluginFactory({\n      name: 'disableRightClick',\n      /**\n       * Initializes the plugin (called during runner's init)\n       */\n      init: function init() {\n        var rightClickEvents = ['contextmenu', 'mousedown', 'mouseup'];\n        rightClickEvents.forEach(function (eventName) {\n          window.document.addEventListener(eventName, function disableRightClick(event) {\n            if (event.button === 2) {\n              event.preventDefault();\n            }\n          });\n        });\n      }\n    });\n\n    return disableRightClick;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/answerElimination/eliminator',['lodash', 'i18n', 'ui/hider', 'util/shortcut', 'util/namespace', 'taoQtiTest/runner/helpers/map', 'taoTests/runner/plugin'], function (_, __, hider, shortcut, namespaceHelper, mapHelper, pluginFactory) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n    var pluginName = 'eliminator';\n\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n    var actionPrefix = `tool-${pluginName}-`;\n\n    /**\n     * Some default options for the plugin\n     * @type {Object}\n     */\n    var defaultConfig = {\n      // when hiding the buttons, don't remove existing eliminations\n      removeEliminationsOnClose: false,\n      // when showing the buttons, restore previously set eliminations\n      restoreEliminationsOnOpen: false\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    var eliminator = pluginFactory({\n      name: pluginName,\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init() {\n        const self = this;\n        const testRunner = this.getTestRunner();\n        const $container = testRunner.getAreaBroker().getContentArea().parent();\n        const testRunnerOptions = testRunner.getOptions();\n        const pluginShortcuts = (testRunnerOptions.shortcuts || {})[pluginName] || {};\n        const config = Object.assign({}, defaultConfig, this.getConfig());\n\n        // register the button in the toolbox\n        this.button = this.getAreaBroker().getToolbox().createEntry({\n          control: 'eliminator',\n          title: __('Eliminate choices'),\n          icon: 'eliminate',\n          text: __('Answer Eliminator')\n        });\n\n        /**\n         * Checks if the plugin is currently available\n         * @returns {Boolean}\n         */\n        function isPluginEnabled() {\n          //to be activated with the special category x-tao-option-eliminator\n          return mapHelper.hasItemCategory(testRunner.getTestMap(), testRunner.getTestContext().itemIdentifier, 'eliminator', true);\n        }\n\n        /**\n         * Is plugin activated ? if not, then we hide the plugin\n         */\n        function togglePluginButton() {\n          if (isPluginEnabled()) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        }\n        function togglePlugin() {\n          if (!self.$choiceInteractions) {\n            return;\n          }\n          self.$choiceInteractions.toggleClass('eliminable');\n          if (isEliminable()) {\n            enableEliminator();\n          } else {\n            disableEliminator();\n          }\n        }\n        function isEliminable() {\n          if (!self.$choiceInteractions) {\n            return;\n          }\n          return self.$choiceInteractions.hasClass('eliminable');\n        }\n        function enableEliminator() {\n          var $choices;\n          if (!self.$choiceInteractions) {\n            return;\n          }\n          $choices = self.$choiceInteractions.find('.qti-choice');\n          self.button.turnOn();\n          self.trigger('start');\n          if (config.restoreEliminationsOnOpen) {\n            $choices.each(function () {\n              var input = this.querySelector('.real-label input');\n              if (this.dataset.wasEliminated) {\n                this.dataset.wasEliminated = null;\n                this.classList.add('eliminated');\n                input.setAttribute('disabled', 'disabled');\n                input.checked = false;\n              }\n            });\n          }\n        }\n        function disableEliminator() {\n          var $choices;\n          if (!self.$choiceInteractions) {\n            return;\n          }\n          $choices = self.$choiceInteractions.find('.qti-choice');\n          self.$choiceInteractions.removeClass('eliminable');\n          self.button.turnOff();\n          self.trigger('end');\n          $choices.each(function () {\n            if (this.classList.contains('eliminated')) {\n              this.dataset.wasEliminated = true;\n              this.classList.remove('eliminated');\n              this.querySelector('.real-label input').removeAttribute('disabled');\n            }\n          });\n        }\n\n        //add a new mask each time the button is pressed\n        this.button.on('click', function (e) {\n          e.preventDefault();\n          testRunner.trigger(`${actionPrefix}toggle`);\n        });\n\n        // handle the plugin's shortcuts\n        if (testRunnerOptions.allowShortcuts) {\n          _.forEach(pluginShortcuts, function (command, key) {\n            shortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), function () {\n              // just fire the action using the event loop\n              testRunner.trigger(actionPrefix + key);\n            }, {\n              avoidInput: true\n            });\n          });\n        }\n\n        //start disabled\n        this.disable();\n\n        //update plugin state based on changes\n        testRunner.on('loaditem', togglePluginButton).on('renderitem', function conditionalInit() {\n          // show button only when in the presence of choice interactions\n          self.$choiceInteractions = $container.find('.qti-choiceInteraction');\n          if (!self.$choiceInteractions.length) {\n            self.hide();\n            return;\n          }\n          if (isPluginEnabled()) {\n            self.show();\n          }\n        }).on('enabletools renderitem', function () {\n          self.enable();\n        }).on('disabletools unloaditem', function () {\n          self.disable();\n          disableEliminator();\n        })\n\n        // commands that controls the plugin\n        .on(`${actionPrefix}toggle`, function () {\n          if (isPluginEnabled()) {\n            togglePlugin();\n          }\n        })\n        // Answer-eliminator and Answer-masking are mutually exclusive tools\n        .on('tool-answer-masking-toggle', function () {\n          if (isEliminable()) {\n            disableEliminator();\n          }\n        });\n      },\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(`.${pluginName}`);\n      },\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.button.enable();\n      },\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.button.disable();\n      },\n      /**\n       * Show the button\n       */\n      show: function show() {\n        this.button.show();\n      },\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        this.button.hide();\n      }\n    });\n\n    return eliminator;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/answerMasking/answerMasking',['lodash', 'jquery', 'core/statifier', 'ui/component', 'handlebars', 'lib/handlebars/helpers'], function (_, $$1, statifier, componentFactory, Handlebars, Helpers0) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    statifier = statifier && Object.prototype.hasOwnProperty.call(statifier, 'default') ? statifier['default'] : statifier;\n    componentFactory = componentFactory && Object.prototype.hasOwnProperty.call(componentFactory, 'default') ? componentFactory['default'] : componentFactory;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n      return \"<div class=\\\"answer-mask\\\">\\n    <span class=\\\"answer-mask-toggle\\\"></span>\\n</div>\";\n      });\n    function maskTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n    var ns = '.answerMasking';\n\n    /**\n     * @param {jQuery} $contentArea - DOM element containing the rendered item\n     */\n    function answerMaskingFactory($contentArea) {\n      var answerMasking,\n        allMasks = [],\n        maskApi = {\n          /**\n           * Toggle mask visibility\n           * @returns {component}\n           */\n          toggle: function toggle() {\n            if (this.is('masked')) {\n              return this.reveal();\n            } else {\n              return this.mask();\n            }\n          },\n          /**\n           * Show the choice under the current mask\n           * @returns {component}\n           */\n          reveal: function reveal() {\n            var $container = this.getContainer();\n            $container.removeClass('masked');\n            $container.find('input').removeAttr('disabled');\n            this.setState('masked', false);\n            return this;\n          },\n          /**\n           * Cover the whole choice with the mask\n           * @returns {component}\n           */\n          mask: function mask() {\n            var $container = this.getContainer();\n            $container.addClass('masked');\n            $container.find('input').attr('disabled', 'disabled');\n            this.setState('masked', true);\n            return this;\n          }\n        };\n\n      /**\n       * Creates a ui/component to serve as a mask over a QTI Choice\n       * @param {jQuery} $container - the qti-choice element\n       * @returns {component}\n       */\n      function createMask($container) {\n        return componentFactory(maskApi).setTemplate(maskTpl).on('render', function () {\n          var self = this,\n            $component = this.getElement();\n          $component.on(`click${ns}`, function (e) {\n            e.stopPropagation();\n            e.preventDefault();\n            self.toggle();\n          });\n        }).on('destroy', function () {\n          var $component = this.getElement();\n          $component.off(ns);\n        }).init().render($container).mask();\n      }\n\n      /**\n       * The answer masking helper\n       */\n      answerMasking = {\n        /**\n         * Enable the answer masking functionality by creating masks over the Qti Choices\n         */\n        enable: function enable() {\n          var $choiceInteractions = $contentArea.find('.qti-choiceInteraction'),\n            $qtiChoices = $contentArea.find('.qti-choice');\n          allMasks = [];\n          $choiceInteractions.addClass('maskable');\n          $qtiChoices.each(function () {\n            var $choice = $$1(this);\n            allMasks.push(createMask($choice));\n          });\n          this.setState('enabled', true);\n        },\n        /**\n         * Remove any answerMasking-related markup from the rendered item\n         */\n        disable: function disable() {\n          var $choiceInteractions = $contentArea.find('.qti-choiceInteraction');\n          $choiceInteractions.removeClass('maskable');\n          allMasks.forEach(function (mask) {\n            mask.reveal(); // remove class on container\n            mask.destroy();\n          });\n          allMasks = [];\n          this.setState('enabled', false);\n        },\n        /**\n         * Return the current state of the masks\n         * @returns {Boolean[]} - true if the choice is masked, false if the choice is revealed\n         */\n        getMasksState: function getMasksState() {\n          var state = allMasks.map(function (mask) {\n            return mask.is('masked');\n          });\n          return state;\n        },\n        /**\n         * Restore a previously saved state for the masked choices\n         * @param {Boolean[]} state - array of boolean, most probably given by the getMasksState method\n         */\n        setMasksState: function setMasksState(state) {\n          state = state || [];\n          state.forEach(function (masked, index) {\n            var mask = allMasks[index];\n            if (_.isObject(mask) && _.isFunction(mask.reveal) && !masked) {\n              mask.reveal();\n            }\n          });\n        }\n      };\n      statifier(answerMasking);\n      return answerMasking;\n    }\n\n    return answerMaskingFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/answerMasking/plugin',['i18n', 'taoTests/runner/plugin', 'ui/hider', 'util/shortcut', 'util/namespace', 'taoQtiTest/runner/helpers/map', 'taoQtiTest/runner/plugins/tools/answerMasking/answerMasking'], function (__, pluginFactory, hider, shortcut, namespaceHelper, mapHelper, answerMaskingFactory) { 'use strict';\n\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    answerMaskingFactory = answerMaskingFactory && Object.prototype.hasOwnProperty.call(answerMaskingFactory, 'default') ? answerMaskingFactory['default'] : answerMaskingFactory;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n    var pluginName = 'answer-masking';\n\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n    var actionPrefix = `tool-${pluginName}-`;\n\n    /**\n     * Stores the masking state for each item in the test\n     * @type {Object}\n     */\n    var itemStates = {};\n\n    /**\n     * Default Configuration\n     */\n    var defaultConfig = {\n      restoreStateOnToggle: true,\n      restoreStateOnMove: true\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    var plugin = pluginFactory({\n      name: pluginName,\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        const self = this;\n        const testRunner = this.getTestRunner();\n        const testRunnerOptions = testRunner.getOptions();\n        const pluginConfig = Object.assign({}, defaultConfig, this.getConfig());\n        const pluginShortcuts = (testRunnerOptions.shortcuts || {})[pluginName] || {};\n        const $contentArea = this.getAreaBroker().getContentArea();\n        var answerMasking = answerMaskingFactory($contentArea);\n        function isPluginEnabled() {\n          //to be activated with the special category x-tao-option-answerMasking\n          const answerMaskingCategory = mapHelper.hasItemCategory(testRunner.getTestMap(), testRunner.getTestContext().itemIdentifier, 'answerMasking', true);\n          return answerMaskingCategory && itemContainsChoiceInteraction();\n        }\n        function itemContainsChoiceInteraction() {\n          var $container = self.getAreaBroker().getContentArea().parent();\n          return $container.find('.qti-choiceInteraction').length;\n        }\n        function togglePluginButton() {\n          if (isPluginEnabled()) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        }\n        function togglePlugin() {\n          if (!answerMasking.getState('enabled')) {\n            enableMasking();\n          } else {\n            disableMasking();\n          }\n        }\n        function enableMasking() {\n          var testContext = testRunner.getTestContext(),\n            itemId = testContext.itemIdentifier;\n          answerMasking.enable();\n          if (pluginConfig.restoreStateOnToggle) {\n            answerMasking.setMasksState(itemStates[itemId]);\n          }\n          self.button.turnOn();\n          self.trigger('start');\n        }\n        function disableMasking() {\n          var testContext = testRunner.getTestContext(),\n            itemId = testContext.itemIdentifier;\n          if (answerMasking.getState('enabled')) {\n            itemStates[itemId] = answerMasking.getMasksState();\n          }\n          answerMasking.disable();\n          self.button.turnOff();\n          self.trigger('end');\n        }\n\n        // create buttons\n        this.button = this.getAreaBroker().getToolbox().createEntry({\n          title: __('Answer Masking'),\n          icon: 'result-nok',\n          control: 'answer-masking',\n          text: __('Answer Masking')\n        });\n\n        // attach user events\n        this.button.on('click', function (e) {\n          e.preventDefault();\n          testRunner.trigger(`${actionPrefix}toggle`);\n        });\n        if (testRunnerOptions.allowShortcuts) {\n          if (pluginShortcuts.toggle) {\n            shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n              testRunner.trigger(`${actionPrefix}toggle`);\n            }, {\n              avoidInput: true,\n              prevent: true\n            });\n          }\n        }\n\n        //start disabled\n        this.disable();\n\n        //update plugin state based on changes\n        testRunner.on('loaditem', function () {\n          var testContext = testRunner.getTestContext(),\n            itemId = testContext.itemIdentifier;\n          if (!pluginConfig.restoreStateOnMove) {\n            itemStates[itemId] = [];\n          }\n          togglePluginButton();\n        }).on('enabletools renderitem', function () {\n          togglePluginButton(); // we repeat this here as we need the rendered item markup in order to decide whether the plugin is enabled\n          self.enable();\n        }).on('beforeunloaditem', function () {\n          disableMasking();\n        }).on('disabletools unloaditem', function () {\n          self.disable();\n          disableMasking();\n        }).on(`${actionPrefix}toggle`, function () {\n          if (isPluginEnabled()) {\n            togglePlugin();\n          }\n        })\n        // Answer-eliminator and Answer-masking are mutually exclusive tools\n        .on('tool-eliminator-toggle', function () {\n          disableMasking();\n        });\n      },\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(`.${this.getName()}`);\n      },\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.button.enable();\n      },\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.button.disable();\n      },\n      /**\n       * Show the button\n       */\n      show: function show() {\n        this.button.show();\n      },\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        this.button.hide();\n      }\n    });\n\n    return plugin;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/apipTextToSpeech/textToSpeech',['jquery', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'ui/component', 'interact', 'ui/component/stackable', 'ui/component/placeable', 'ui/feedback', 'nouislider'], function ($$1, __, Handlebars, Helpers0, component, interact, makeStackable, makePlaceable, feedback, nouislider) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    component = component && Object.prototype.hasOwnProperty.call(component, 'default') ? component['default'] : component;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    makeStackable = makeStackable && Object.prototype.hasOwnProperty.call(makeStackable, 'default') ? makeStackable['default'] : makeStackable;\n    makePlaceable = makePlaceable && Object.prototype.hasOwnProperty.call(makePlaceable, 'default') ? makePlaceable['default'] : makePlaceable;\n    feedback = feedback && Object.prototype.hasOwnProperty.call(feedback, 'default') ? feedback['default'] : feedback;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      buffer += \"<div class=\\\"tts-container\\\">\\n    <div class=\\\"tts-controls\\\">\\n        <div class=\\\"tts-control-container\\\">\\n            <a class=\\\"tts-control tts-control-close\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Close\", options) : helperMissing.call(depth0, \"__\", \"Close\", options)))\n        + \"\\\">\\n                <span class=\\\"icon-result-nok tts-icon\\\"></span>\\n            </a>\\n        </div>\\n        <div class=\\\"tts-control-container\\\">\\n            <a class=\\\"tts-control tts-control-drag\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move\", options) : helperMissing.call(depth0, \"__\", \"Move\", options)))\n        + \"\\\">\\n                <span class=\\\"icon-grip tts-icon\\\"></span>\\n                <span class=\\\"tts-control-label\\\">\\n                    \"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Text to Speech\", options) : helperMissing.call(depth0, \"__\", \"Text to Speech\", options)))\n        + \"\\n                </span>\\n            </a>\\n        </div>\\n        <div class=\\\"tts-control-container\\\">\\n            <a class=\\\"tts-control tts-control-playback\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Toggle playback\", options) : helperMissing.call(depth0, \"__\", \"Toggle playback\", options)))\n        + \"\\\">\\n                <span class=\\\"icon-play tts-icon\\\"></span>\\n                <span class=\\\"icon-pause tts-icon\\\"></span>\\n            </a>\\n        </div>\\n        <div class=\\\"tts-control-container\\\">\\n            <a class=\\\"tts-control tts-control-mode\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Toggle start from here mode\", options) : helperMissing.call(depth0, \"__\", \"Toggle start from here mode\", options)))\n        + \"\\\">\\n                <span class=\\\"icon-play-from-here tts-icon\\\"></span>\\n            </a>\\n        </div>\\n        <div class=\\\"tts-control-container\\\">\\n            <a class=\\\"tts-control tts-control-settings\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Settings\", options) : helperMissing.call(depth0, \"__\", \"Settings\", options)))\n        + \"\\\">\\n                <span class=\\\"icon-property-advanced tts-icon\\\"></span>\\n            </a>\\n            <div class=\\\"tts-slider-container\\\">\\n                \"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Speed\", options) : helperMissing.call(depth0, \"__\", \"Speed\", options)))\n        + \"<div class=\\\"tts-slider\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function ttsTemplate(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2019 (original work) Open Assessment Technologies SA;\n     */\n    const defaultConfig = {\n      activeElementClass: 'tts-active-content-node',\n      elementClass: 'tts-content-node',\n      left: -10,\n      maxPlaybackRate: 2,\n      minPlaybackRate: 0.5,\n      playbackRate: 1,\n      top: 50\n    };\n    const stackingOptions = {\n      stackingScope: 'test-runner'\n    };\n\n    /**\n     * Creates an instance of Text to Speech component\n     *\n     * @param {Element} container\n     * @param {Object} config - component configurations\n     * @param {String} config.activeElementClass - class applied to active content element. Default value 'tts-active-content-node'\n     * @param {String} config.elementClass - class applied to content element. Default value 'tts-content-node'\n     * @param {Number} config.left - initial left position of component. Default value 50\n     * @param {Number} config.maxPlaybackRate - max playback rate. Default value 2\n     * @param {Number} config.minPlaybackRate - min playback rate. Default value 0.5\n     * @param {Number} config.playbackRate - playback rate. Default value 1\n     * @param {Number} config.top - initial top position of component. Default value 50\n     * @returns {ttsComponent} the textToSpeech component (uninitialized)\n     */\n    function maskingComponentFactory(container, config) {\n      const audio = new Audio();\n      let currentPlayback = [];\n      let currentItem;\n      let mediaContentData = [];\n      let playbackRate;\n\n      // Browser does not support selection Api If getSelection is not defined\n      const selection = window.getSelection && window.getSelection();\n\n      // component API\n      const spec = {\n        /**\n         * Remove APIP element class and click handlers from APIP elements\n         */\n        clearAPIPElements() {\n          const {\n            elementClass\n          } = this.config;\n          const $contentNodes = $$1(mediaContentData.map(_ref => {\n            let {\n              selector\n            } = _ref;\n            return selector;\n          }).join(', '), container);\n          $contentNodes.removeClass(elementClass);\n          $contentNodes.off('click', this.handleContentNodeClick);\n        },\n        /**\n         * Update componet state and stop playback\n         *\n         * @fires close\n         */\n        close() {\n          this.setTTSStateOnContainer('playing', false);\n          this.setTTSStateOnContainer('sfhMode', false);\n          this.setState('settings', false);\n          this.stop();\n          this.trigger('close');\n        },\n        /**\n         * Get current active APIP item\n         *\n         * @returns {Object} active APIP item\n         */\n        getCurrentItem() {\n          return currentItem;\n        },\n        /**\n         * When component in start from here mode, switch to clicked content element\n         *\n         * @param {Object} e - event object\n         */\n        handleContentNodeClick(e) {\n          const $target = $$1(e.target);\n\n          // Allow default behaviour for inputs\n          if ($target.hasClass('icon-checkbox') || $target.hasClass('icon-radio') || $target.is('input')) {\n            return;\n          }\n\n          // Prevent default behaviour for lables and links\n          e.stopPropagation();\n          e.preventDefault();\n          if (!this.is('sfhMode')) {\n            return;\n          }\n          const $currentTarget = $$1(e.currentTarget);\n          // Find APIP item associated with clicked element\n          const selectedItemIndex = mediaContentData.findIndex(_ref2 => {\n            let {\n              selector\n            } = _ref2;\n            return $currentTarget.is(selector);\n          });\n          currentPlayback = mediaContentData.slice(selectedItemIndex);\n          this.stop();\n          this.initNextItem();\n          this.togglePlayback();\n        },\n        /**\n         * Select APIP item for default mode\n         */\n        initDefaultModeItem() {\n          this.initItemWithTextSelection();\n          if (!currentItem) {\n            this.initDefaultModePlayback();\n          }\n        },\n        /**\n         * Check if there is some selected content inside APIP elelemts on the page\n         */\n        initItemWithTextSelection() {\n          // Check if there is selected content\n          if (this.is('sfhMode') || !selection || !selection.toString()) {\n            return;\n          }\n\n          // Get APIP item by current selection\n          const currentSelection = selection.getRangeAt(0);\n          const {\n            commonAncestorContainer\n          } = currentSelection;\n          const selectedItem = mediaContentData.find(_ref3 => {\n            let {\n              selector\n            } = _ref3;\n            const $item = $$1(selector, container);\n            return $item.is(commonAncestorContainer) || $$1.contains($item[0], commonAncestorContainer);\n          });\n          if (selectedItem && selectedItem !== currentItem) {\n            currentPlayback = [selectedItem];\n            this.initNextItem();\n          }\n        },\n        /**\n         * Check if there is next APIP item to play and start playback if component in playing state.\n         * If there is no APIP item to play stop playback\n         *\n         * @fires finish\n         * @fires next\n         */\n        initNextItem() {\n          const {\n            activeElementClass\n          } = this.config;\n          currentItem && $$1(currentItem.selector, container).removeClass(activeElementClass);\n          currentItem = currentPlayback.shift();\n          if (currentItem) {\n            const {\n              selector,\n              url\n            } = currentItem;\n            $$1(selector, container).addClass(activeElementClass);\n            audio.setAttribute('src', url);\n            audio.load();\n            audio.playbackRate = playbackRate;\n            if (this.is('playing')) {\n              audio.play();\n            }\n            this.trigger('next');\n            return;\n          }\n          this.trigger('finish');\n          this.stop();\n        },\n        /**\n         * Init default mode playback\n         */\n        initDefaultModePlayback() {\n          currentPlayback = [...mediaContentData];\n          this.initNextItem();\n        },\n        /**\n         * Set APIP data. Apply handlers to APIP elements. Stop current playback\n         *\n         * @param {Array} data - APIP data items\n         */\n        setMediaContentData(data) {\n          this.clearAPIPElements();\n          const {\n            elementClass\n          } = this.config;\n          mediaContentData = data;\n          const $contentNodes = $$1(mediaContentData.map(_ref4 => {\n            let {\n              selector\n            } = _ref4;\n            return selector;\n          }).join(', '), container);\n          $contentNodes.addClass(elementClass);\n          $contentNodes.on('click', this.handleContentNodeClick);\n          this.stop();\n        },\n        /**\n         * Set playback rate\n         *\n         * @param {Object} e - event object\n         * @param {Number} value - playback rate\n         */\n        setPlaybackRate(e, value) {\n          playbackRate = value;\n          audio.playbackRate = value;\n        },\n        /**\n         * Update component state. Toggle state class on page body\n         *\n         * @param {String} name\n         * @param {Boolean} value\n         */\n        setTTSStateOnContainer(name, value) {\n          this.setState(name, value);\n          $$1(container).toggleClass(`tts-${name}`, value);\n        },\n        /**\n         * Pause playback and update component state. Set current item to null\n         */\n        stop() {\n          const {\n            activeElementClass\n          } = this.config;\n          audio.pause();\n          audio.currentTime = 0;\n          currentItem && $$1(currentItem.selector, container).removeClass(activeElementClass);\n          currentItem = null;\n          this.setTTSStateOnContainer('playing', false);\n        },\n        /**\n         * Toggle playback\n         *\n         * @param {Object} e - event object\n         */\n        togglePlayback(e) {\n          e && e.preventDefault();\n          const isPlaying = this.is('playing');\n          this.initDefaultModeItem();\n          if (!isPlaying && currentItem) {\n            audio.play();\n            this.setTTSStateOnContainer('playing', true);\n          } else {\n            audio.pause();\n            this.setTTSStateOnContainer('playing', false);\n          }\n        },\n        /**\n         * Toggle start from here mode\n         */\n        toggleSFHMode() {\n          const isSFHMode = this.is('sfhMode');\n          this.setTTSStateOnContainer('sfhMode', !isSFHMode);\n          this.stop();\n        },\n        /**\n         * Toggle settings element\n         */\n        toggleSettings() {\n          const isSettings = this.is('settings');\n          this.setState('settings', !isSettings);\n\n          // if settings was enabled make sure that component still inside the container\n          if (!isSettings) {\n            this.handleResize();\n          }\n        },\n        /**\n         * Handle browser resize\n         */\n        handleResize() {\n          // offset from right\n          const offsetFromRight = 10;\n          const {\n            x,\n            y\n          } = this.getPosition();\n          const maxXPosition = window.innerWidth - this.getElement().width() - offsetFromRight;\n          this.moveTo(x > maxXPosition ? maxXPosition : x, y);\n        }\n      };\n      const ttsComponent = component(spec, defaultConfig);\n      makePlaceable(ttsComponent);\n      makeStackable(ttsComponent, stackingOptions);\n      ttsComponent.setTemplate(ttsTemplate).on('init', function () {\n        if (container.hasClass('tts-component-container')) {\n          throw new Error('Container already has assigned text to speech component');\n        }\n        container.addClass('tts-component-container');\n        this.render(container);\n      }).on('render', function () {\n        let {\n          left,\n          maxPlaybackRate,\n          minPlaybackRate,\n          playbackRate: defaultPlaybackRate,\n          top\n        } = this.getConfig();\n        if (left < 0) {\n          left = window.innerWidth - this.getElement().width() + left;\n        }\n        const $element = this.getElement();\n        const $closeElement = $$1('.tts-control-close', $element);\n        const $dragElement = $$1('.tts-control-drag', $element);\n        const $playbackElement = $$1('.tts-control-playback', $element);\n        const $sfhModeElement = $$1('.tts-control-mode', $element);\n        const $sliderElement = $$1('.tts-slider', $element);\n        const $settingsElement = $$1('.tts-control-settings', $element);\n        playbackRate = defaultPlaybackRate;\n        $element.css('touch-action', 'none');\n\n        // make component dragable\n        const interactElement = interact($element).draggable({\n          autoScroll: true,\n          manualStart: true,\n          restrict: {\n            restriction: container[0],\n            elementRect: {\n              left: 0,\n              right: 1,\n              top: 0,\n              bottom: 1\n            }\n          },\n          onmove: event => {\n            const xOffset = Math.round(event.dx),\n              yOffset = Math.round(event.dy);\n            this.moveBy(xOffset, yOffset);\n          }\n        });\n        interact($dragElement[0]).on('down', event => {\n          const interaction = event.interaction;\n          interaction.start({\n            name: 'drag'\n          }, interactElement, $element[0]);\n        });\n\n        // initialise slider\n        $sliderElement.noUiSlider({\n          animate: true,\n          connected: true,\n          range: {\n            min: minPlaybackRate,\n            max: maxPlaybackRate\n          },\n          start: defaultPlaybackRate,\n          step: 0.1\n        }).on('change', this.setPlaybackRate);\n\n        // handle controls\n        $closeElement.on('click', this.close);\n        // handle mousedown instead of click to prevent selection lose\n        $playbackElement.on('mousedown touchstart', this.togglePlayback);\n        $sfhModeElement.on('click', this.toggleSFHMode);\n        $settingsElement.on('click', this.toggleSettings);\n        audio.addEventListener('ended', this.initNextItem);\n        audio.addEventListener('error', () => {\n          feedback().error(__('Can not playback media file!'));\n          this.initNextItem();\n        });\n        window.addEventListener('resize', this.handleResize);\n\n        // move to initial position\n        this.moveTo(left, top);\n      }).on('hide', function () {\n        this.setTTSStateOnContainer('visible', false);\n      }).on('show', function () {\n        this.setTTSStateOnContainer('visible', true);\n      }).on('destroy', function () {\n        container.removeClass('tts-component-container');\n        this.clearAPIPElements();\n        this.stop();\n        window.removeEventListener('resize', this.handleResize);\n      });\n      ttsComponent.init(config);\n      return ttsComponent;\n    }\n\n    return maskingComponentFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/apipTextToSpeech/ttsApipDataProvider',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019  (original work) Open Assessment Technologies SA;\n     *\n     * @author Anton Tsymuk <anton@taotesting.com>\n     */\n\n    /**\n     * Extract TTS data from APIP item data\n     *\n     * @param {Object} apipElement - APIP item Data\n     * @returns {Object}\n     */\n    const getTTSItemData = apipElement => {\n      const {\n        identifier\n      } = apipElement['@attributes'];\n      const {\n        contentLinkInfo = {\n          '@attributes': {}\n        },\n        relatedElementInfo: {\n          spoken: {\n            audioFileInfo = []\n          } = {}\n        } = {}\n      } = apipElement;\n      const {\n        fileHref = ''\n      } = audioFileInfo.find(audioFile => audioFile['@attributes'].mimeType === 'audio/mpeg') || {};\n      const elementId = contentLinkInfo['@attributes'].qtiLinkIdentifierRef;\n      return {\n        identifier,\n        selector: elementId && `#${elementId}`,\n        url: fileHref.replace('assets/', '')\n      };\n    };\n\n    /**\n     * Get APIP item order from APIP order data\n     *\n     * @param {String} identifier - APIP item identifier\n     * @param {Object} elementOrder - APIP order data\n     * @returns {Number}\n     */\n    const getTTSItemOrder = (identifier, elementOrder) => {\n      const {\n        order\n      } = elementOrder.find(apipElementOrder => apipElementOrder['@attributes'].identifierRef === identifier) || {};\n      return parseInt(order) || Number.POSITIVE_INFINITY;\n    };\n\n    /**\n     * Extract data related to Text To Speech from item APIP data\n     * @param {Object} apipData\n     * @returns {Object}\n     */\n    var ttsApipDataProvider = (apipData => {\n      const {\n        accessibilityInfo: {\n          accessElement = []\n        } = {},\n        inclusionOrder: {\n          textGraphicsDefaultOrder: {\n            elementOrder = []\n          } = {}\n        } = {}\n      } = apipData;\n      return accessElement.map(getTTSItemData).filter(_ref => {\n        let {\n          url\n        } = _ref;\n        return !!url;\n      }).sort((a, b) => getTTSItemOrder(a.identifier, elementOrder) - getTTSItemOrder(b.identifier, elementOrder));\n    });\n\n    return ttsApipDataProvider;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/apipTextToSpeech/plugin',['lodash', 'i18n', 'ui/hider', 'util/shortcut', 'util/namespace', 'taoTests/runner/plugin', 'taoQtiTest/runner/helpers/map', 'ui/keyNavigation/navigator', 'ui/keyNavigation/navigableDomElement', 'taoQtiTest/runner/plugins/tools/apipTextToSpeech/textToSpeech', 'taoQtiTest/runner/plugins/tools/apipTextToSpeech/ttsApipDataProvider'], function (_, __, hider, shortcut, namespaceHelper, pluginFactory, mapHelper, keyNavigator, navigableDomElement, ttsComponentFactory, ttsApipDataProvider) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    keyNavigator = keyNavigator && Object.prototype.hasOwnProperty.call(keyNavigator, 'default') ? keyNavigator['default'] : keyNavigator;\n    navigableDomElement = navigableDomElement && Object.prototype.hasOwnProperty.call(navigableDomElement, 'default') ? navigableDomElement['default'] : navigableDomElement;\n    ttsComponentFactory = ttsComponentFactory && Object.prototype.hasOwnProperty.call(ttsComponentFactory, 'default') ? ttsComponentFactory['default'] : ttsComponentFactory;\n    ttsApipDataProvider = ttsApipDataProvider && Object.prototype.hasOwnProperty.call(ttsApipDataProvider, 'default') ? ttsApipDataProvider['default'] : ttsApipDataProvider;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019  (original work) Open Assessment Technologies SA;\n     *\n     * @author Anton Tsymuk <anton@taotesting.com>\n     */\n    const pluginName = 'apiptts';\n    const actionPrefix = `tool-${pluginName}-`;\n\n    /**\n     * Returns the configured plugin\n     */\n    var plugin = pluginFactory({\n      name: pluginName,\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init() {\n        const testRunner = this.getTestRunner();\n        const testRunnerOptions = testRunner.getOptions();\n        const pluginShortcuts = (testRunnerOptions.shortcuts || {})[this.getName()] || {};\n        let ttsComponent;\n        let ttsApipData;\n        const createNavigationGroup = () => {\n          const $container = testRunner.getAreaBroker().getContainer();\n          const $navigationGroupElement = this.button.getElement();\n          const groupNavigationId = `${pluginName}_navigation_group`;\n          const $navigationElements = $container.find(ttsApipData.map(_ref => {\n            let {\n              selector\n            } = _ref;\n            return selector;\n          }).join(', '));\n          this.navigationGroup = keyNavigator({\n            id: groupNavigationId,\n            group: $navigationGroupElement,\n            elements: navigableDomElement.createFromDoms($navigationElements.add($navigationGroupElement)),\n            propagateTab: false,\n            loop: true,\n            keepState: true\n          }).on('tab', () => {\n            if (ttsComponent.is('sfhMode')) {\n              this.navigationGroup.next();\n              testRunner.trigger(`${actionPrefix}next`);\n            }\n          }).on('shift+tab', () => {\n            if (ttsComponent.is('sfhMode')) {\n              this.navigationGroup.previous();\n              testRunner.trigger(`${actionPrefix}previous`);\n            }\n          }).on('activate', () => {\n            if (ttsComponent.is('sfhMode')) {\n              testRunner.trigger(`${actionPrefix}togglePlayback`);\n            }\n          }).on('blur', () => {\n            setTimeout(() => {\n              if (!this.navigationGroup.isFocused()) {\n                this.navigationGroup.focus();\n              }\n            }, 0);\n          }).setCursorAt($navigationElements.length);\n          ttsComponent.on('next finish', () => {\n            if (ttsComponent.is('sfhMode')) {\n              const $currentElement = this.navigationGroup.getCursor().navigable.getElement();\n              const {\n                selector\n              } = ttsComponent.getCurrentItem() || {};\n              if (!selector || !$currentElement.is(selector)) {\n                this.navigationGroup.next();\n              }\n            }\n          });\n        };\n\n        /**\n         * Creates the tts component on demand\n         * @returns {textToSpeech}\n         */\n        const getTTSComponent = () => {\n          if (!ttsComponent) {\n            const $container = testRunner.getAreaBroker().getContainer();\n            ttsComponent = ttsComponentFactory($container, {}).on('close', () => {\n              if (this.getState('active')) {\n                testRunner.trigger(`${actionPrefix}toggle`);\n              }\n            }).hide();\n          }\n          return ttsComponent;\n        };\n\n        /**\n         * Checks if the plugin is currently available.\n         * To be activated with the special category x-tao-option-apiptts\n         *\n         * @returns {Boolean}\n         */\n        const isConfigured = () => mapHelper.hasItemCategory(testRunner.getTestMap(), testRunner.getTestContext().itemIdentifier, 'apiptts', true);\n\n        /**\n         * Is plugin activated ? if not, then we hide the plugin\n         */\n        const togglePlugin = () => {\n          if (isConfigured()) {\n            this.show();\n          } else {\n            this.hide();\n          }\n        };\n\n        /**\n         * Show the plugin panel\n         *\n         * @fires plugin-open.apiptts\n         */\n        const enablePlugin = () => {\n          createNavigationGroup();\n          this.button.turnOn();\n          this.setState('active', true);\n          this.trigger('open');\n          if (ttsComponent.is('hidden')) {\n            ttsComponent.show();\n          }\n        };\n\n        /**\n         * Hide the plugin panel\n         *\n         * @fires plugin-close.apiptts\n         */\n        const disablePlugin = () => {\n          if (this.getState('active')) {\n            this.navigationGroup.blur();\n            this.navigationGroup.destroy();\n            this.setState('active', false);\n            this.button.turnOff();\n            this.trigger('close');\n            if (ttsComponent && !ttsComponent.is('hidden')) {\n              ttsComponent.close();\n              ttsComponent.hide();\n            }\n          }\n        };\n\n        /**\n         * Shows/hides the plugin\n         */\n        const toggleTool = () => {\n          if (this.getState('enabled')) {\n            if (this.getState('active')) {\n              disablePlugin();\n              this.setState('sleep', true);\n            } else {\n              enablePlugin();\n              this.setState('sleep', false);\n            }\n          }\n        };\n\n        // Add plugin button to toolbox\n        this.button = this.getAreaBroker().getToolbox().createEntry({\n          className: `${this.getName()}-plugin`,\n          control: this.getName(),\n          icon: 'headphones',\n          text: __('Text To Speech'),\n          title: __('Enable text to speech')\n        });\n\n        // Handle plugin button click\n        this.button.on('click', e => {\n          e.preventDefault();\n          testRunner.trigger(`${actionPrefix}toggle`);\n        });\n\n        // Register plugin shortcuts\n        if (testRunnerOptions.allowShortcuts) {\n          _.forEach(pluginShortcuts, (command, key) => {\n            shortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), () => {\n              if (key === 'spaceTogglePlayback' && ttsComponent && ttsComponent.is('sfhMode')) {\n                return;\n              }\n              const eventKey = key.endsWith('TogglePlayback') ? 'togglePlayback' : key;\n              testRunner.trigger(actionPrefix + eventKey);\n            }, {\n              avoidInput: true\n            });\n          });\n        }\n\n        // Hide plugin by default\n        togglePlugin();\n        this.disable();\n        this.hide();\n\n        //update plugin state based on changes\n        testRunner.on('loaditem', () => {\n          togglePlugin();\n          this.disable();\n        }).on('enabletools renderitem', () => {\n          this.enable();\n        }).on('disabletools unloaditem', () => {\n          disablePlugin();\n          this.disable();\n        }).on(`${actionPrefix}toggle`, () => {\n          if (isConfigured()) {\n            toggleTool();\n          }\n        }).on(`${actionPrefix}togglePlayback`, () => {\n          if (this.getState('enabled')) {\n            if (this.getState('active')) {\n              if (ttsComponent.is('sfhMode')) {\n                const $currentElement = this.navigationGroup.getCursor().navigable.getElement();\n                const {\n                  selector\n                } = ttsComponent.getCurrentItem() || {};\n                if (!$currentElement.is(selector)) {\n                  if (this.button.getElement()[0] !== $currentElement[0]) {\n                    $currentElement.trigger('click');\n                  }\n                  return;\n                }\n              }\n              ttsComponent.togglePlayback();\n            }\n          }\n        }).on('renderitem', () => {\n          if (!isConfigured()) {\n            return;\n          }\n          ttsApipData = ttsApipDataProvider(testRunner.itemRunner.getData().apipAccessibility || {}).map(apipItemData => Object.assign({}, apipItemData, {\n            url: testRunner.itemRunner.assetManager.resolve(apipItemData.url)\n          }));\n          if (!ttsApipData.length) {\n            disablePlugin();\n            this.hide();\n            return;\n          }\n          getTTSComponent().setMediaContentData(ttsApipData);\n          this.show();\n          if (!this.getState('sleep')) {\n            this.setState('enabled', true);\n            toggleTool();\n          }\n        });\n      },\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy() {\n        shortcut.remove(`.${this.getName()}`);\n      },\n      /**\n       * Enable the button\n       */\n      enable() {\n        this.button.enable();\n      },\n      /**\n       * Disable the button\n       */\n      disable() {\n        this.button.disable();\n      },\n      /**\n       * Show the button\n       */\n      show() {\n        this.button.show();\n      },\n      /**\n       * Hide the button\n       */\n      hide() {\n        this.button.hide();\n      }\n    });\n\n    return plugin;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/areaMasking/mask',['lodash', 'handlebars', 'lib/handlebars/helpers', 'ui/dynamicComponent'], function (_, Handlebars, Helpers0, dynamicComponent) { 'use strict';\n\n   _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n   Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n   Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n   dynamicComponent = dynamicComponent && Object.prototype.hasOwnProperty.call(dynamicComponent, 'default') ? dynamicComponent['default'] : dynamicComponent;\n\n   if (!Helpers0.__initialized) {\n     Helpers0(Handlebars);\n     Helpers0.__initialized = true;\n   }\n   var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n     this.compilerInfo = [4,'>= 1.0.0'];\n   helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n     var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n     buffer += \"<div class=\\\"mask\\\">\\n   <div class=\\\"inner\\\"></div>\\n   <div class=\\\"controls\\\">\\n        <a href=\\\"#\\\" class=\\\"view\\\"  title=\\\"\"\n       + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Preview the covered area\", options) : helperMissing.call(depth0, \"__\", \"Preview the covered area\", options)))\n       + \"\\\"><span class=\\\"icon-preview\\\"></span></a>\\n        <a href=\\\"#\\\" class=\\\"close\\\" title=\\\"\"\n       + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Close the mask\", options) : helperMissing.call(depth0, \"__\", \"Close the mask\", options)))\n       + \"\\\"><span class=\\\"icon-result-nok\\\"></span></a>\\n   </div>\\n</div>\\n\";\n     return buffer;\n     });\n   function areaMaskingTpl(data, options, asString) {\n     var html = Template(data, options);\n     return (asString || true) ? html : $(html);\n   }\n\n   /**\n    * This program is free software; you can redistribute it and/or\n    * modify it under the terms of the GNU General Public License\n    * as published by the Free Software Foundation; under version 2\n    * of the License (non-upgradable).\n    *\n    * This program is distributed in the hope that it will be useful,\n    * but WITHOUT ANY WARRANTY; without even the implied warranty of\n    * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    * GNU General Public License for more details.\n    *\n    * You should have received a copy of the GNU General Public License\n    * along with this program; if not, write to the Free Software\n    * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n    *\n    * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n    */\n   var defaultConfig = {\n     draggable: true,\n     resizable: true,\n     preserveAspectRatio: false,\n     width: 250,\n     minWidth: 160,\n     maxWidth: 1000,\n     minHeight: 60,\n     height: 100,\n     stackingScope: 'test-runner',\n     top: 50,\n     left: 10,\n     previewDelay: 3000\n   };\n\n   /**\n    * Creates a new masking component\n    * @returns {maskComponent} the component (uninitialized)\n    */\n   function maskingComponentFactory() {\n     var dynamicComponentInstance;\n\n     /**\n      * @typedef {Object} dynamicComponent\n      */\n     dynamicComponentInstance = dynamicComponent({\n       /**\n        * Preview the content under the masked area\n        * @returns {maskComponent} chains\n        *\n        * @fires maskComponent#preview\n        */\n       preview: function preview() {\n         var self = this;\n         var delay = this.config.previewDelay || 1000;\n         if (this.is('rendered') && !this.is('disabled') && !this.is('previewing')) {\n           this.setState('previewing', true);\n           this.trigger('preview');\n           _.delay(function () {\n             self.setState('previewing', false);\n           }, delay);\n         }\n         return this;\n       }\n     }, defaultConfig).on('rendercontent', function ($content) {\n       var self = this;\n       var $element = this.getElement();\n       $content.append(areaMaskingTpl({}));\n       $element.addClass('mask-container');\n       $element.on('click touchstart', '.view', function (e) {\n         e.preventDefault();\n         self.preview();\n       }).on('click touchend', '.close', function (e) {\n         e.preventDefault();\n         self.destroy();\n       });\n     }).init();\n     return dynamicComponentInstance;\n   }\n\n   return maskingComponentFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/areaMasking/areaMasking',['lodash', 'i18n', 'ui/hider', 'util/shortcut', 'util/namespace', 'taoTests/runner/plugin', 'taoQtiTest/runner/plugins/tools/areaMasking/mask', 'taoQtiTest/runner/helpers/map'], function (_, __, hider, shortcut, namespaceHelper, pluginFactory, maskComponent, mapHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    maskComponent = maskComponent && Object.prototype.hasOwnProperty.call(maskComponent, 'default') ? maskComponent['default'] : maskComponent;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n     */\n\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n    var pluginName = 'area-masking';\n\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n    var actionPrefix = `tool-${pluginName}-`;\n\n    /**\n     * Some default options for the plugin\n     * @type {Object}\n     */\n    var defaultConfig = {\n      max: 5,\n      foo: true\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    var areaMasking = pluginFactory({\n      name: pluginName,\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init() {\n        const self = this;\n        const testRunner = this.getTestRunner();\n        const $container = testRunner.getAreaBroker().getContentArea().parent();\n        const testRunnerOptions = testRunner.getOptions();\n        const config = Object.assign({}, defaultConfig, this.getConfig());\n        const pluginShortcuts = (testRunnerOptions.shortcuts || {})[pluginName] || {};\n        function addMask() {\n          maskComponent().on('render', function () {\n            self.masks.push(this);\n            self.button.turnOn();\n\n            /**\n             * @event areaMasking#maskadd\n             */\n            self.trigger('maskadd');\n          }).on('destroy', function () {\n            self.masks = _.without(self.masks, this);\n            if (self.masks.length < config.max) {\n              self.enable();\n            }\n            if (self.masks.length === 0) {\n              self.button.turnOff();\n              self.trigger('close');\n            }\n\n            /**\n             * @event areaMasking#maskclose\n             */\n            self.trigger('maskclose');\n          }).init({\n            renderTo: $container,\n            draggableContainer: $container\n          });\n        }\n\n        //keep a ref to all masks\n        this.masks = [];\n\n        // register the element in the Toolbox\n        this.button = this.getAreaBroker().getToolbox().createEntry({\n          control: 'area-masking',\n          text: __('Masking'),\n          title: __('Covers parts of the item'),\n          icon: 'eye-slash'\n        });\n\n        //add a new mask each time the button is pressed\n        this.button.on('click', function (e) {\n          e.preventDefault();\n          testRunner.trigger(`${actionPrefix}toggle`);\n        });\n\n        // handle the plugin's shortcuts\n        if (testRunnerOptions.allowShortcuts) {\n          _.forEach(pluginShortcuts, function (command, key) {\n            shortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), function () {\n              // just fire the action using the event loop\n              testRunner.trigger(actionPrefix + key);\n            }, {\n              avoidInput: true\n            });\n          });\n        }\n\n        //start disabled\n        this.disable();\n\n        /**\n         * Checks if the plugin is currently available\n         * @returns {Boolean}\n         */\n        function isEnabled() {\n          //to be activated with the special category x-tao-option-areaMasking\n          return mapHelper.hasItemCategory(testRunner.getTestMap(), testRunner.getTestContext().itemIdentifier, 'areaMasking', true);\n        }\n\n        /**\n         * Is plugin activated ? if not, then we hide the plugin\n         */\n        function togglePlugin() {\n          if (isEnabled()) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        }\n        //update plugin state based on changes\n        testRunner.on('loaditem', togglePlugin).on('enabletools renderitem', function () {\n          self.enable();\n        }).on('disabletools unloaditem', function () {\n          self.disable();\n          //remove all masks\n          self.masks.forEach(mask => mask.destroy());\n        })\n        // commands that controls the plugin\n        .on(`${actionPrefix}toggle`, function () {\n          if (isEnabled()) {\n            if (self.masks.length === 0) {\n              self.trigger('open');\n            }\n            if (self.masks.length < config.max) {\n              addMask();\n            } else if (config.max === 1) {\n              self.masks.forEach(mask => mask.destroy());\n            }\n          }\n        });\n      },\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(`.${pluginName}`);\n      },\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.button.enable();\n      },\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.button.disable();\n      },\n      /**\n       * Show the button\n       */\n      show: function show() {\n        this.button.show();\n      },\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        this.button.hide();\n      }\n    });\n\n    return areaMasking;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/calculator',['jquery', 'lodash', 'i18n', 'ui/hider', 'ui/calculator', 'ui/maths/calculator/basicCalculator', 'ui/maths/calculator/scientificCalculator', 'util/shortcut', 'util/namespace', 'taoTests/runner/plugin', 'taoQtiTest/runner/helpers/map', 'handlebars', 'lib/handlebars/helpers'], function ($$1, _, __, hider, calculatorFactory, basicCalculatorFactory, scientificCalculatorFactory, shortcut, namespaceHelper, pluginFactory, mapHelper, Handlebars, Helpers0) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    calculatorFactory = calculatorFactory && Object.prototype.hasOwnProperty.call(calculatorFactory, 'default') ? calculatorFactory['default'] : calculatorFactory;\n    basicCalculatorFactory = basicCalculatorFactory && Object.prototype.hasOwnProperty.call(basicCalculatorFactory, 'default') ? basicCalculatorFactory['default'] : basicCalculatorFactory;\n    scientificCalculatorFactory = scientificCalculatorFactory && Object.prototype.hasOwnProperty.call(scientificCalculatorFactory, 'default') ? scientificCalculatorFactory['default'] : scientificCalculatorFactory;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n      return \"<div class=\\\"widget-calculator\\\" dir=\\\"ltr\\\"></div>\";\n      });\n    function calculatorTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Default config for calculator components\n     * @type {Object}\n     */\n    var defaultCalcConfig = {\n      height: 380,\n      width: 280,\n      top: 50,\n      left: 10,\n      stackingScope: 'test-runner',\n      proportionalResize: true\n    };\n\n    /**\n     * Default config for BODMAS calculator component\n     * @type {Object}\n     */\n    var bodmasCalcConfig = _.defaults({\n      height: 380,\n      width: 280\n    }, defaultCalcConfig);\n\n    /**\n     * Default config for scientific calculator component\n     * @type {Object}\n     */\n    var scientificCalcConfig = _.defaults({\n      width: 490,\n      height: 420,\n      calculator: {\n        maths: {\n          degree: true\n        }\n      }\n    }, defaultCalcConfig);\n\n    /**\n     * Returns the configured plugin\n     */\n    var calculator = pluginFactory({\n      name: 'calculator',\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        const self = this;\n        const testRunner = this.getTestRunner();\n        const areaBroker = this.getAreaBroker();\n        const testRunnerOptions = testRunner.getOptions();\n        const config = this.getConfig();\n        const pluginShortcuts = (testRunnerOptions.shortcuts || {})[this.getName()] || {};\n\n        /**\n         * Retrieve the calculators categories of the current item\n         * @returns {Object} the calculator categories\n         */\n        function getCalculatorCategories() {\n          const testContext = testRunner.getTestContext();\n          const itemIdentifier = testContext.itemIdentifier;\n          const testMap = testRunner.getTestMap();\n          return {\n            calculator: mapHelper.hasItemCategory(testMap, itemIdentifier, 'calculator', true),\n            bodmas: mapHelper.hasItemCategory(testMap, itemIdentifier, 'calculator-bodmas', true),\n            scientific: mapHelper.hasItemCategory(testMap, itemIdentifier, 'calculator-scientific', true)\n          };\n        }\n\n        /**\n         * Checks if the plugin is currently available\n         * @returns {Boolean}\n         */\n        function isEnabled() {\n          //to be activated with a special category from:\n          // - x-tao-option-calculator\n          // - x-tao-option-calculator-bodmas\n          // - x-tao-option-calculator-scientific\n          const categories = getCalculatorCategories();\n          return categories.calculator || categories.bodmas || categories.scientific;\n        }\n\n        /**\n         * Is calculator activated ? if not, then we hide the plugin\n         */\n        function togglePlugin() {\n          if (isEnabled()) {\n            //allow calculator\n            self.show();\n          } else {\n            self.hide();\n          }\n        }\n\n        /**\n         * Build the calculator component\n         * @param {Function} [calcTpl] - An optional alternative template for the calculator.\n         *                               Only compatible with the four-functions version\n         */\n        function buildCalculator(calcTpl) {\n          const categories = getCalculatorCategories();\n          let factory, calcConfig;\n          if (categories.scientific) {\n            factory = scientificCalculatorFactory;\n            calcConfig = scientificCalcConfig;\n            calcConfig.calculator.maths.degree = _.isUndefined(config.degree) ? scientificCalcConfig.calculator.maths.degree : config.degree;\n          } else if (categories.bodmas) {\n            factory = basicCalculatorFactory;\n            calcConfig = bodmasCalcConfig;\n          } else {\n            factory = calculatorFactory;\n            calcConfig = defaultCalcConfig;\n          }\n          self.calculator = factory(_.defaults({\n            renderTo: self.$calculatorContainer,\n            replace: true,\n            draggableContainer: areaBroker.getContainer(),\n            alternativeTemplate: calcTpl || null\n          }, calcConfig)).on('show', function () {\n            self.trigger('open');\n            self.button.turnOn();\n          }).on('hide', function () {\n            self.trigger('close');\n            self.button.turnOff();\n          }).after('render', function () {\n            this.show();\n          });\n        }\n\n        /**\n         * Show/hide the calculator\n         */\n        function toggleCalculator() {\n          if (self.getState('enabled') !== false) {\n            if (self.calculator) {\n              //just show/hide the calculator widget\n              if (self.calculator.is('hidden')) {\n                self.calculator.show();\n              } else {\n                self.calculator.hide();\n              }\n            } else {\n              //build calculator widget\n              if (config.template) {\n                require([`tpl!${config.template.replace(/\\.tpl$/, '')}`], function (calcTpl) {\n                  buildCalculator(calcTpl);\n                }, function () {\n                  //in case of error, display the default calculator:\n                  buildCalculator();\n                });\n              } else {\n                buildCalculator();\n              }\n            }\n          }\n        }\n\n        //build element (detached)\n        this.button = this.getAreaBroker().getToolbox().createEntry({\n          control: 'calculator',\n          title: __('Open Calculator'),\n          icon: 'table',\n          text: __('Calculator')\n        });\n        this.$calculatorContainer = $$1(calculatorTpl());\n\n        //init calculator instance var, it will be created only necessary\n        this.calculator = null;\n\n        //attach behavior\n        this.button.on('click', function (e) {\n          //prevent action if the click is made inside the form which is a sub part of the button\n          if ($$1(e.target).closest('.widget-calculator').length) {\n            return;\n          }\n          e.preventDefault();\n          testRunner.trigger('tool-calculator');\n        });\n        if (testRunnerOptions.allowShortcuts) {\n          if (pluginShortcuts.toggle) {\n            shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n              testRunner.trigger('tool-calculator');\n            }, {\n              avoidInput: true,\n              allowIn: '.widget-calculator'\n            });\n          }\n        }\n\n        //start disabled\n        togglePlugin();\n        this.disable();\n\n        //update plugin state based on changes\n        testRunner.on('loaditem', togglePlugin).on('enabletools renderitem', function () {\n          self.enable();\n        }).on('disabletools unloaditem', function () {\n          self.disable();\n          if (self.calculator) {\n            //destroy calculator to create a new instance of calculator each time\n            self.calculator.destroy();\n            self.calculator = null;\n          }\n        }).on('tool-calculator', function () {\n          if (isEnabled()) {\n            toggleCalculator();\n          }\n        });\n      },\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {\n        var areaBroker = this.getAreaBroker();\n        areaBroker.getContainer().append(this.$calculatorContainer);\n      },\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(`.${this.getName()}`);\n        this.$calculatorContainer.remove();\n        if (this.calculator) {\n          this.calculator.destroy();\n        }\n      },\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.button.enable();\n      },\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.button.disable();\n        if (this.calculator) {\n          this.calculator.hide();\n        }\n      },\n      /**\n       * Show the button\n       */\n      show: function show() {\n        this.button.show();\n      },\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        this.button.hide();\n        if (this.calculator) {\n          this.calculator.hide();\n        }\n      }\n    });\n\n    return calculator;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/comment/comment',['jquery', 'i18n', 'taoTests/runner/plugin', 'ui/hider', 'ui/stacker', 'util/shortcut', 'util/namespace', 'handlebars', 'lib/handlebars/helpers'], function ($$1, __, pluginFactory, hider, stackerFactory, shortcut, namespaceHelper, Handlebars, Helpers0) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    stackerFactory = stackerFactory && Object.prototype.hasOwnProperty.call(stackerFactory, 'default') ? stackerFactory['default'] : stackerFactory;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      buffer += \"<div data-control=\\\"qti-comment\\\" class=\\\"hidden\\\">\\n    <textarea data-control=\\\"qti-comment-text\\\" placeholder=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Your comment…\", options) : helperMissing.call(depth0, \"__\", \"Your comment…\", options)))\n        + \"\\\"></textarea>\\n    <button data-control=\\\"qti-comment-cancel\\\" class=\\\"btn-info small\\\"></span>\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Cancel\", options) : helperMissing.call(depth0, \"__\", \"Cancel\", options)))\n        + \"</button>\\n    <button data-control=\\\"qti-comment-send\\\" class=\\\"btn-info small\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Send\", options) : helperMissing.call(depth0, \"__\", \"Send\", options)))\n        + \"</button>\\n</div>\\n\";\n      return buffer;\n      });\n    function commentTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Returns the configured plugin\n     */\n    var comment = pluginFactory({\n      name: 'comment',\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init() {\n        const self = this;\n        const testRunner = this.getTestRunner();\n        const testRunnerOptions = testRunner.getOptions();\n        const pluginShortcuts = (testRunnerOptions.shortcuts || {})[this.getName()] || {};\n        const stacker = stackerFactory('test-runner');\n\n        /**\n         * Checks if the plugin is currently available\n         * @returns {Boolean}\n         */\n        function isEnabled() {\n          const currentItem = testRunner.getCurrentItem();\n          if (typeof currentItem.allowComment === 'boolean') {\n            return currentItem.allowComment;\n          }\n\n          //@deprecated use allowComment from the testMap\n          const testContext = testRunner.getTestContext();\n          const contextOptions = testContext.options || {};\n          return !!contextOptions.allowComment;\n        }\n\n        /**\n         * Can we comment ? if not, then we hide the plugin\n         */\n        function togglePlugin() {\n          if (isEnabled()) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        }\n\n        /**\n         * Show/hide the comment panel\n         */\n        function toggleComment() {\n          if (self.getState('enabled') !== false) {\n            //just show/hide the form\n            hider.toggle(self.$form);\n            if (!hider.isHidden(self.$form)) {\n              //reset the form on each display\n              self.$input.val('').focus();\n              self.button.turnOn();\n              stacker.bringToFront(self.$form);\n            } else {\n              self.button.turnOff();\n            }\n          }\n        }\n\n        // register button in toolbox\n        this.button = this.getAreaBroker().getToolbox().createEntry({\n          control: 'comment',\n          title: __('Leave a comment'),\n          icon: 'tag',\n          text: __('Comment')\n        });\n\n        //get access to controls\n        this.button.on('render', function () {\n          self.$button = self.button.getElement();\n          self.$form = $$1(commentTpl()).appendTo(self.$button);\n          self.$input = self.$button.find('[data-control=\"qti-comment-text\"]');\n          self.$cancel = self.$button.find('[data-control=\"qti-comment-cancel\"]');\n          self.$submit = self.$button.find('[data-control=\"qti-comment-send\"]');\n          stacker.autoBringToFront(self.$form);\n\n          //hide the form without submit\n          self.$cancel.on('click', function () {\n            hider.hide(self.$form);\n            self.button.turnOff();\n          });\n\n          //submit the comment, then hide the form\n          self.$submit.on('click', function () {\n            var comment = self.$input.val();\n            if (comment) {\n              self.disable();\n              self.button.turnOff();\n              testRunner.getProxy().callTestAction('comment', {\n                comment: comment\n              }).then(function () {\n                hider.hide(self.$form);\n                self.enable();\n              }).catch(function () {\n                hider.hide(self.$form);\n                self.enable();\n              });\n            }\n          });\n        });\n\n        //attach behavior\n        this.button.on('click', function (e) {\n          //prevent action if the click is made inside the form which is a sub part of the button\n          if ($$1(e.target).closest('[data-control=\"qti-comment\"]').length) {\n            return;\n          }\n          e.preventDefault();\n          testRunner.trigger('tool-comment');\n        });\n        if (testRunnerOptions.allowShortcuts) {\n          if (pluginShortcuts.toggle) {\n            shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n              testRunner.trigger('tool-comment');\n            }, {\n              avoidInput: true\n            });\n          }\n        }\n\n        //start disabled\n        togglePlugin();\n        this.disable();\n\n        //update plugin state based on changes\n        testRunner.on('loaditem', togglePlugin).on('renderitem enabletools', function () {\n          self.enable();\n        }).on('unloaditem disabletools', function () {\n          self.disable();\n        }).on('tool-comment', function () {\n          if (isEnabled()) {\n            toggleComment();\n          }\n        });\n      },\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(`.${this.getName()}`);\n      },\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.button.enable();\n      },\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        if (this.$form) {\n          hider.hide(this.$form);\n        }\n        this.button.disable();\n        this.button.turnOff();\n      },\n      /**\n       * Show the button\n       */\n      show: function show() {\n        this.button.show();\n      },\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        if (this.$form) {\n          hider.hide(this.$form);\n        }\n        this.button.hide();\n      }\n    });\n\n    return comment;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/documentViewer/documentViewer',['jquery', 'lodash', 'ui/hider', 'ui/documentViewer', 'ui/documentViewer/providers/pdfViewer', 'taoTests/runner/plugin', 'handlebars', 'lib/handlebars/helpers'], function ($$1, _, hider, viewerFactory, pdfViewer, pluginFactory, Handlebars, Helpers0) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    viewerFactory = viewerFactory && Object.prototype.hasOwnProperty.call(viewerFactory, 'default') ? viewerFactory['default'] : viewerFactory;\n    pdfViewer = pdfViewer && Object.prototype.hasOwnProperty.call(pdfViewer, 'default') ? pdfViewer['default'] : pdfViewer;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n      buffer += \"<div class=\\\"document-viewer-plugin hidden\\\">\\n    <div class=\\\"viewer-overlay\\\"></div>\\n    <div class=\\\"viewer-panel\\\">\\n        <div class=\\\"viewer-header\\\">\\n            <span class=\\\"viewer-title\\\">\";\n      if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n            <span class=\\\"icon icon-close\\\"></span>\\n        </div>\\n        <div class=\\\"viewer-content\\\">\";\n      if (helper = helpers.content) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.content); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n        <div class=\\\"viewer-footer\\\"></div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function panelTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The name of the plugin\n     * @type {String}\n     */\n    var pluginName = 'documentViewer';\n\n    /**\n     * Shows the panel, trigger the `panelshow` event\n     *\n     * @param plugin\n     */\n    function showPanel(plugin) {\n      hider.show(plugin.controls.$panel);\n      plugin.trigger('panelshow');\n      $$1(window).on(`resize.${plugin.getName()}`, _.debounce(_.partial(resizeViewer, plugin), 50));\n    }\n\n    /**\n     * Hides the panel, trigger the `panelhide` event\n     *\n     * @param plugin\n     */\n    function hidePanel(plugin) {\n      hider.hide(plugin.controls.$panel);\n      plugin.trigger('panelhide');\n      $$1(window).off(`resize.${plugin.getName()}`);\n    }\n\n    /**\n     * Hides the panel if it is visible\n     *\n     * @param plugin\n     * @returns {Boolean} Returns `true` if the panel was visible and has been hidden\n     */\n    function hideIfVisible(plugin) {\n      var isVisible = !hider.isHidden(plugin.controls.$panel, true);\n      if (isVisible) {\n        hidePanel(plugin);\n      }\n      return isVisible;\n    }\n\n    /**\n     * Initializes the event handlers for the panel container\n     *\n     * @param plugin\n     */\n    function initPanelEvents(plugin) {\n      var namespace = `.${plugin.getName()}`;\n      var stopEvents = ['click', 'mousedown', 'mouseup', 'touchstart', 'touchend', 'keyup', 'keydow', 'keypress', 'scroll', 'drop'].join(`${namespace} `) + namespace;\n      var hideViewer = _.partial(hidePanel, plugin);\n      function stopPropagation(e) {\n        e.stopImmediatePropagation();\n        e.stopPropagation();\n      }\n      plugin.controls.$overlay.off(namespace).on(`click${namespace}`, hideViewer).on(stopEvents, stopPropagation);\n      plugin.controls.$panel.off(namespace).on(`click${namespace}`, '.icon-close', hideViewer).on(stopEvents, stopPropagation);\n    }\n\n    /**\n     * Resizes the viewer to fit the panel content area\n     * @param plugin\n     */\n    function resizeViewer(plugin) {\n      var $content = plugin.controls.$content;\n      plugin.viewer.setSize($content.width(), $content.height());\n    }\n\n    // all document viewers need to be registered\n    viewerFactory.registerProvider('pdf', pdfViewer);\n\n    /**\n     * Returns the configured plugin\n     */\n    var documentViewer = pluginFactory({\n      name: pluginName,\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var testRunner = this.getTestRunner();\n        var $panel = $$1(panelTpl());\n\n        /**\n         * @param {Object} data\n         * @param {String} data.label - document title\n         * @param {String} data.document - document url\n         */\n        function displayViewer(data) {\n          if (self.getState('enabled') !== false) {\n            showPanel(self);\n            self.controls.$title.text(data.label);\n            resizeViewer(self);\n            self.viewer.load(data.document, 'pdf');\n          }\n        }\n        this.controls = {\n          $panel: $panel,\n          $overlay: $panel.find('.viewer-overlay'),\n          $title: $panel.find('.viewer-title'),\n          $content: $panel.find('.viewer-content')\n        };\n        this.viewer = viewerFactory({\n          renderTo: this.controls.$content,\n          replace: true,\n          fitToWidth: true,\n          allowSearch: true\n        });\n\n        //update plugin state based on changes\n        testRunner.on('renderitem enabletools', function () {\n          self.enable();\n        }).on('renderitem', function () {\n          self.getAreaBroker().getContentArea().append(self.controls.$panel).off(`.${self.getName()}`).on(`viewDocument.${self.getName()}`, function (event) {\n            var data = event.originalEvent.detail;\n            displayViewer(data);\n          });\n          initPanelEvents(self);\n        }).on('move', function () {\n          hideIfVisible(self);\n        }).on('skip', function () {\n          hideIfVisible(self);\n        }).on('unloaditem disabletools', function () {\n          self.disable();\n        }).on('tool-documentViewer', function (data) {\n          displayViewer(data);\n        });\n      },\n      /**\n       * Called during the runner's render phase\n       */\n      render: function render() {},\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        this.getAreaBroker().getContentArea().off(`.${this.getName()}`);\n        if (this.viewer) {\n          this.viewer.destroy();\n        }\n        if (this.controls.$panel) {\n          this.controls.$panel.remove();\n        }\n        this.viewer = null;\n        this.controls = {};\n      },\n      /**\n       * Enable the button\n       */\n      enable: function enable() {},\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        hideIfVisible(this);\n      },\n      /**\n       * Show the button\n       */\n      show: function show() {},\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        hideIfVisible(this);\n      }\n    });\n\n    return documentViewer;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/highlighter/highlighter',['lodash', 'jquery', 'core/eventifier', 'ui/highlighter'], function (_, $, eventifier, highlighterFactory) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    eventifier = eventifier && Object.prototype.hasOwnProperty.call(eventifier, 'default') ? eventifier['default'] : eventifier;\n    highlighterFactory = highlighterFactory && Object.prototype.hasOwnProperty.call(highlighterFactory, 'default') ? highlighterFactory['default'] : highlighterFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n     */\n    var prevSelection = [];\n    var selection;\n    if (!window.getSelection) throw new Error('Browser does not support getSelection()');\n    selection = window.getSelection();\n\n    /**\n     * Returns an array of active ranges.\n     * If browser doesn't support multiple Ranges, returns only the first range\n     * see note on https://w3c.github.io/selection-api/#methods\n     *\n     * @returns {Range[]}\n     */\n    function getAllRanges() {\n      var i,\n        allRanges = [];\n      for (i = 0; i < selection.rangeCount; i++) {\n        allRanges.push(selection.getRangeAt(i));\n      }\n      return allRanges;\n    }\n\n    /**\n     * Discards the global text selection from the browser (window.selection)\n     */\n    function discardSelection() {\n      // delay discarding, to allow time for multiple highlighters logic\n      setTimeout(function () {\n        selection.removeAllRanges();\n      }, 250);\n    }\n\n    /**\n     * The highlighter Factory\n     * @param {Object} options\n     * @param {String} [options.className]\n     * @param {String} [options.containerSelector]\n     * @param {Array} [options.containersBlackList]\n     * @param {String} [options.id]\n     * @returns {Object} the highlighter instance\n     */\n    function testHighlighterFactory(options) {\n      /**\n       * Is this highlighter enabled or disabled?\n       * @type {boolean}\n       */\n      var enabled = true;\n\n      /**\n       * Are we in highlight mode, meaning that each new selection is automatically highlighted\n       * without having to press any button\n       * @type {boolean}\n       */\n      var isHighlighting = false;\n\n      /**\n       * The helper that does the highlight magic\n       */\n      var highlightHelper = highlighterFactory({\n        className: options.className || 'txt-user-highlight',\n        containerSelector: options.containerSelector || '.qti-itemBody',\n        containersBlackList: options.containersBlackList || [],\n        clearOnClick: true\n      });\n\n      //add event to automatically highlight the recently made selection if needed\n      $(document).on('mouseup.highlighter', function () {\n        if (isHighlighting && !selection.isCollapsed) {\n          highlightHelper.highlightRanges(getAllRanges());\n          discardSelection();\n        }\n      });\n\n      //add event to automatically highlight the recently made selection if needed\n      //added touch event (as from TAO-6578)\n      $(document).on('touchend.highlighter', function () {\n        if (isHighlighting && !selection.isCollapsed) {\n          highlightHelper.highlightRanges(getAllRanges());\n        }\n      });\n\n      // iOS devices clears selection after click on button,\n      // so we store prev selection for this devices to be able\n      // to use it after click on highlight button\n      if (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream) {\n        $(document).on('selectionchange', function () {\n          if (!isHighlighting) {\n            prevSelection = _.clone(getAllRanges(), true);\n          }\n        });\n      }\n\n      /**\n       * The highlighter instance\n       */\n      return eventifier({\n        /**\n         * Enable this instance\n         */\n        enable: function enable() {\n          enabled = true;\n        },\n        /**\n         * Disable this instance\n         */\n        disable: function disable() {\n          enabled = false;\n        },\n        /**\n         * Is this instance currently enabled?\n         * @returns {Boolean}\n         */\n        isEnabled: function isEnabled() {\n          return enabled;\n        },\n        /**\n         * toggle highlighting mode on and off\n         * @param {Boolean} bool - wanted state\n         */\n        toggleHighlighting: function toggleHighlighting(bool) {\n          isHighlighting = bool;\n          if (isHighlighting) {\n            this.trigger('start');\n            $('.qti-itemBody').toggleClass('highlighter-cursor', true);\n          } else {\n            this.trigger('end');\n            $('.qti-itemBody').toggleClass('highlighter-cursor', false);\n          }\n          return this;\n        },\n        /**\n         * Either highlight the current or selection, or toggle highlighting mode\n         */\n        highlight: function highlight() {\n          if (!isHighlighting) {\n            if (!selection.isCollapsed) {\n              this.toggleHighlighting(true);\n              highlightHelper.highlightRanges(getAllRanges());\n              this.toggleHighlighting(false);\n              discardSelection();\n            } else if (prevSelection[0] && !prevSelection[0].collapsed) {\n              this.toggleHighlighting(true);\n              highlightHelper.highlightRanges(prevSelection);\n              this.toggleHighlighting(false);\n              discardSelection();\n            } else {\n              this.toggleHighlighting(true);\n            }\n          } else {\n            this.toggleHighlighting(false);\n          }\n        },\n        /**\n         * restore the highlight from a given index\n         * @param {Array} index\n         */\n        restoreIndex: function restoreIndex(index) {\n          if (index && index.length > 0) {\n            highlightHelper.highlightFromIndex(index);\n          }\n        },\n        /**\n         * Get the current index\n         * @returns {Array} index\n         */\n        getIndex: function getIndex() {\n          return highlightHelper.getHighlightIndex();\n        },\n        /**\n         * remove all highlights\n         */\n        clearHighlights: function clearHighlights() {\n          highlightHelper.clearHighlights();\n          selection.removeAllRanges();\n        },\n        /**\n         * Getter for the instance's id\n         * @returns {String}\n         */\n        getId: function getId() {\n          return options.id;\n        }\n      });\n    }\n\n    return testHighlighterFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/highlighter/collection',['taoQtiTest/runner/plugins/tools/highlighter/highlighter'], function (highlighterFactory) { 'use strict';\n\n    highlighterFactory = highlighterFactory && Object.prototype.hasOwnProperty.call(highlighterFactory, 'default') ? highlighterFactory['default'] : highlighterFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * @var {Array} highlighters - Highlighters collection\n     * We can run multiple instances of the highlighter plugin on one page:\n     * - one for item-level highlights, which persist for the Test session\n     * - others for stimulus-level highlights, which should persist across multiple sessions (TAO-7617)\n     */\n    var highlighters = [];\n\n    /**\n     * @typedef {highlighterCollection}\n     * @returns {Object}\n     */\n    var highlighterCollection = function highlighterCollection() {\n      return {\n        /**\n         * Instantiates new highlighter and adds it to array\n         * @param {Object} options\n         * @param {String} options.className - class applied to highlighted spans\n         * @param {String} options.containerSelector - selector for the unique root DOM node the HL will work on\n         * @param {Array}  options.containersBlackList - list of children which should not receive highlights\n         * @param {String} options.id\n         * @returns {Object} a highlighter instance\n         */\n        addHighlighter: function addHighlighter(options) {\n          var hl = highlighterFactory(options);\n          highlighters.push(hl);\n          return hl;\n        },\n        /**\n         * Retrieves one highlighter from the collection by matching its id\n         * @param {String} id\n         * @returns {Object} highlighter instance\n         */\n        getHighlighterById: function getHighlighterById(id) {\n          return highlighters.find(function (hl) {\n            return hl.getId() === id;\n          });\n        },\n        /**\n         * Retrieves the full array of highlighters from the collection\n         * @returns {Array}\n         */\n        getAllHighlighters: function getAllHighlighters() {\n          return highlighters;\n        },\n        /**\n         * Retrieves the first highlighter in the collection\n         * @returns {Object} highlighter instance\n         */\n        getItemHighlighter: function getItemHighlighter() {\n          return highlighters[0];\n        },\n        /**\n         * Retrieves the fully array of highlighter from the collection, minus the first one\n         * @returns {Array} highlighter instance\n         */\n        getNonItemHighlighters: function getNonItemHighlighters() {\n          return highlighters.slice(1);\n        },\n        /**\n         * Empties th highlighter collection\n         * @returns {Integer}\n         */\n        getLength: function getLength() {\n          return highlighters.length;\n        },\n        /**\n         * Empties the highlighter collection\n         * @returns {Object}\n         */\n        empty: function empty() {\n          highlighters = [];\n          return this;\n        }\n      };\n    };\n\n    return highlighterCollection;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/highlighter/plugin',['jquery', 'lodash', 'i18n', 'core/logger', 'taoTests/runner/plugin', 'util/shortcut', 'util/namespace', 'taoQtiTest/runner/helpers/currentItem', 'taoQtiTest/runner/plugins/tools/highlighter/collection', 'taoQtiTest/runner/helpers/map'], function ($, _, __, loggerFactory, pluginFactory, shortcut, namespaceHelper, itemHelper, highlighterCollection, mapHelper) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    itemHelper = itemHelper && Object.prototype.hasOwnProperty.call(itemHelper, 'default') ? itemHelper['default'] : itemHelper;\n    highlighterCollection = highlighterCollection && Object.prototype.hasOwnProperty.call(highlighterCollection, 'default') ? highlighterCollection['default'] : highlighterCollection;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Returns the configured plugin\n     */\n    var plugin = pluginFactory({\n      name: 'highlighter',\n      /**\n       * Install plugin's functions\n       *\n       */\n      install: function install() {\n        var testRunner = this.getTestRunner();\n\n        //define the \"highlighter\" store as \"volatile\" (removed on browser change).\n        testRunner.getTestStore().setVolatile(this.getName());\n      },\n      /**\n       * Initialize the plugin (called during runner's init)\n       * @returns {void}\n       */\n      init: function init() {\n        const self = this;\n        const testRunner = this.getTestRunner();\n        const testRunnerOptions = testRunner.getOptions();\n        const pluginShortcuts = (testRunnerOptions.shortcuts || {})[this.getName()] || {};\n        let hasHighlights = false;\n        const logger = loggerFactory('highlighterPlugin');\n\n        /**\n         * @var {Object} highlighters - Highlighters collection\n         * See taoQtiTest/views/js/runner/plugins/tools/highlighter/collection.js\n         */\n        var highlighters = highlighterCollection();\n\n        // Create the first (item-level) highlighter instance:\n        highlighters.addHighlighter({\n          className: 'txt-user-highlight',\n          containerSelector: '.qti-itemBody',\n          containersBlackList: ['.qti-include'],\n          id: 'item-highlighter'\n        });\n\n        // create buttons\n        this.buttonMain = this.getAreaBroker().getToolbox().createEntry({\n          title: __('Highlight Text'),\n          icon: 'text-marker',\n          control: 'highlight-trigger',\n          aria: {\n            pressed: 'false',\n            label: __('(Visual) Highlight Text')\n          },\n          text: __('Highlight')\n        });\n        this.buttonRemove = this.getAreaBroker().getToolbox().createEntry({\n          title: __('Clear all active highlights'),\n          icon: 'result-nok',\n          control: 'highlight-clear',\n          aria: {\n            label: __('(Visual) Clear all active highlights')\n          },\n          text: __('Clear Highlights')\n        });\n\n        // attach user events\n        this.buttonMain.on('mousedown', function (e) {\n          // using 'mousedown' instead of 'click' to avoid losing current selection\n          e.preventDefault();\n          if (isPluginEnabled()) {\n            _.forEach(highlighters.getAllHighlighters(), function (instance) {\n              if (instance.isEnabled()) {\n                instance.highlight();\n              }\n            });\n          }\n        });\n        this.buttonRemove.on('click', function (e) {\n          e.preventDefault();\n          if (isPluginEnabled()) {\n            _.forEach(highlighters.getAllHighlighters(), function (instance) {\n              if (instance.isEnabled()) {\n                instance.clearHighlights();\n              }\n            });\n            testRunner.trigger('clear');\n          }\n        });\n        if (testRunnerOptions.allowShortcuts) {\n          if (pluginShortcuts.toggle) {\n            shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n              if (isPluginEnabled()) {\n                _.forEach(highlighters.getAllHighlighters(), function (instance) {\n                  if (instance.isEnabled()) {\n                    instance.highlight();\n                  }\n                });\n              }\n            }, {\n              avoidInput: true,\n              prevent: true\n            });\n          }\n        }\n\n        //start disabled\n        this.disable();\n\n        /**\n         * Checks if the plugin is currently available\n         * @returns {Boolean}\n         */\n        function isPluginEnabled() {\n          //to be activated with the special category x-tao-option-highlighter\n          return mapHelper.hasItemCategory(testRunner.getTestMap(), testRunner.getTestContext().itemIdentifier, 'highlighter', true);\n        }\n\n        /**\n         * Is plugin activated ? if not, then we hide the plugin\n         */\n        function togglePlugin() {\n          if (isPluginEnabled()) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        }\n\n        /**\n         * Gets the browser test store\n         * Can be in volatile or non-volatile mode, depending on config\n         * @returns {Promise}\n         */\n        function getStore() {\n          return testRunner.getTestStore().getStore(self.getName());\n        }\n\n        /**\n         * Load the stores and hook the behavior\n         */\n        return getStore().then(function (highlighterStore) {\n          /**\n           * Saves a highlighter's state to the appropriate store\n           * @param {String} [itemId] - must be provided to save item-level highlights,\n           *                            will be used as store key if no key provided\n           * @param {String} [key] - a key (e.g. a stimulus href) under which we store non-item-level highlights\n           * @returns {Boolean} true if save was done\n           */\n          function saveHighlight(itemId, key) {\n            var instance;\n            var highlightsIndex;\n            if (!itemId) {\n              instance = highlighters.getHighlighterById(key);\n            } else {\n              key = itemId;\n              instance = highlighters.getItemHighlighter();\n            }\n            if (!instance) return Promise.resolve(false);\n            highlightsIndex = instance.getIndex();\n            if (isPluginEnabled() && hasHighlights && key) {\n              logger.debug(`Saving ${highlightsIndex.length} highlights for id ${key}`);\n              return highlighterStore.setItem(key, highlightsIndex);\n            }\n            return false;\n          }\n\n          /**\n           * Saves all the highlighters states in the store\n           * First the non-item highlighters, then the item highlighter (index 0)\n           * @returns {Promise} resolves once the save is done\n           */\n          function saveAll() {\n            var nonItemHighlighters = highlighters.getNonItemHighlighters();\n            return Promise.all(_(nonItemHighlighters).filter(function (instance) {\n              return instance.isEnabled();\n            }).map(function (instance) {\n              var key = instance.getId();\n              return saveHighlight(null, key);\n            }).value()).then(function (results) {\n              // Now save the main item highlight\n              // and if every setItem() returned true, return true\n              var itemId = testRunner.getTestContext().itemIdentifier;\n              return saveHighlight(itemId) && _.every(results);\n            });\n          }\n\n          /**\n           * Retrieves a highlighter's state from a store and applies it to the DOM\n           * @param {String} [itemId] - must be provided to save item-level highlights,\n           *                            will be used as store key if no key provided\n           * @param {String} [key] - a key (e.g. a stimulus href) under which we store non-item-level highlights\n           * @returns {Promise} resolves once the load is done\n           */\n          function loadHighlight(itemId, key) {\n            var instance;\n            if (!itemId) {\n              instance = highlighters.getHighlighterById(key);\n            } else {\n              key = itemId;\n              instance = highlighters.getItemHighlighter();\n            }\n            if (!instance) return Promise.resolve(false);\n            return highlighterStore.getItem(key).then(function (index) {\n              if (index) {\n                logger.debug(`Loading ${index.length} highlights for key ${key}`);\n                hasHighlights = true;\n                instance.restoreIndex(index);\n              }\n            }).then(function () {\n              //save highlighter state during the item session,\n              //when the highlighting ends\n              instance.on('end.save', function () {\n                return saveHighlight(itemId, key);\n              });\n            });\n          }\n\n          //update plugin state based on changes\n          testRunner.on('loaditem', togglePlugin).on('enabletools renderitem', function () {\n            self.enable();\n            if (isPluginEnabled()) {\n              _.forEach(highlighters.getAllHighlighters(), function (instance) {\n                if (!instance.isEnabled()) {\n                  instance.on('start').toggleHighlighting(false).enable();\n                }\n              });\n            }\n          }).on('renderitem', function () {\n            var textStimuli;\n            var itemId = testRunner.getTestContext().itemIdentifier;\n            if (itemId && isPluginEnabled()) {\n              hasHighlights = false;\n              highlighters.getItemHighlighter().enable();\n              // Load item-level highlights from store:\n              loadHighlight(itemId);\n\n              // Count stimuli in this item:\n              textStimuli = itemHelper.getTextStimuliHrefs(testRunner);\n\n              // NOW we can instantiate the extra highlighters:\n              _.forEach(textStimuli, function (textStimulusHref) {\n                var stimHighlighter = highlighters.getHighlighterById(textStimulusHref);\n                // Instantiate, if id not already present in highlighters...\n                if (!stimHighlighter) {\n                  stimHighlighter = highlighters.addHighlighter({\n                    className: 'txt-user-highlight',\n                    containerSelector: `.qti-include[data-href=\"${textStimulusHref}\"]`,\n                    id: textStimulusHref\n                  });\n                }\n                stimHighlighter.enable();\n                // And load its data:\n                loadHighlight(null, textStimulusHref);\n              });\n            }\n          }).after('renderitem', function () {\n            // Attach start/end listeners only to item level highlighter\n            const instance = highlighters.getItemHighlighter();\n            if (instance.isEnabled()) {\n              instance.on('start', function () {\n                self.buttonMain.turnOn();\n                self.buttonMain.$component.attr('aria-pressed', 'true');\n                self.trigger('start');\n                hasHighlights = true;\n              }).on('end', function () {\n                self.buttonMain.turnOff();\n                self.buttonMain.$component.attr('aria-pressed', 'false');\n                self.trigger('end');\n              });\n            }\n          }).after('clear.highlighter', function () {\n            saveAll();\n          }).before('skip move timeout', function () {\n            return saveAll();\n          }).on('disabletools unloaditem', function () {\n            self.disable();\n            if (isPluginEnabled()) {\n              _.forEach(highlighters.getAllHighlighters(), function (instance) {\n                if (instance.isEnabled()) {\n                  instance.off('end.save end start').toggleHighlighting(false).disable();\n                }\n              });\n            }\n          });\n        });\n      },\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(`.${this.getName()}`);\n        $(document).off('.highlighter');\n      },\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.buttonMain.enable();\n        this.buttonRemove.enable();\n      },\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.buttonMain.disable();\n        this.buttonRemove.disable();\n      },\n      /**\n       * Show the button\n       */\n      show: function show() {\n        this.buttonMain.show();\n        this.buttonRemove.show();\n      },\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        this.buttonMain.hide();\n        this.buttonRemove.hide();\n      }\n    });\n\n    return plugin;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/itemThemeSwitcher/itemThemeSwitcher',['jquery', 'lodash', 'i18n', 'taoTests/runner/plugin', 'ui/hider', 'ui/themes', 'util/shortcut', 'util/namespace', 'ui/themeLoader'], function ($, _, __, pluginFactory, hider, themeHandler, shortcut, namespaceHelper, themeLoader) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    themeHandler = themeHandler && Object.prototype.hasOwnProperty.call(themeHandler, 'default') ? themeHandler['default'] : themeHandler;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    themeLoader = themeLoader && Object.prototype.hasOwnProperty.call(themeLoader, 'default') ? themeLoader['default'] : themeLoader;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Returns the configured plugin\n     */\n    var itemThemeSwitcher = pluginFactory({\n      name: 'itemThemeSwitcher',\n      /**\n       * Install step, add behavior before the lifecycle.\n       */\n      install: function install() {\n        //define the \"itemThemeSwitcher\" store as \"volatile\" (removed on browser change).\n        this.getTestRunner().getTestStore().setVolatile(this.getName());\n      },\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        var self = this;\n        var pluginName = this.getName();\n        var testRunner = this.getTestRunner();\n        var testRunnerOptions = testRunner.getOptions();\n        var pluginShortcuts = (testRunnerOptions.shortcuts || {})[this.getName()] || {};\n        const pluginConfig = this.getConfig();\n        this.oldNamespace = themeHandler.getActiveNamespace();\n        const state = {\n          availableThemes: [],\n          defaultTheme: '',\n          selectedTheme: ''\n        };\n        const allMenuEntries = [];\n        if (pluginConfig.activeNamespace) {\n          themeHandler.setActiveNamespace(pluginConfig.activeNamespace);\n        }\n        const themesConfig = themeHandler.get('items') || {};\n        if (pluginConfig.activeNamespace !== this.oldNamespace && !_.isEmpty(themesConfig)) {\n          reloadThemes();\n        }\n\n        /**\n         * Tells if the component is enabled\n         * @returns {Boolean}\n         */\n        function isPluginAllowed() {\n          return themesConfig && _.size(themesConfig.available) > 1;\n        }\n\n        /**\n         * Reloads theme config and changes theme\n         */\n        function reloadThemes() {\n          var themeConfig = themeHandler.get('items');\n          themeLoader(themeConfig).load();\n          if (state && state.selectedTheme) {\n            changeTheme(state.selectedTheme);\n          } else {\n            changeTheme(themeConfig.default);\n          }\n        }\n\n        /**\n         * Load the selected theme\n         * @param themeId\n         */\n        function changeTheme(themeId) {\n          var $qtiItem = $('.qti-item');\n          var previousTheme = state.selectedTheme;\n          state.selectedTheme = themeId;\n          if ($qtiItem) {\n            _.defer(function () {\n              $qtiItem.trigger('themechange', [state.selectedTheme]);\n            });\n          }\n          if (self.storage) {\n            self.storage.setItem('itemThemeId', themeId);\n          }\n          if (previousTheme !== state.selectedTheme) {\n            testRunner.trigger('themechange', state.selectedTheme, previousTheme);\n          }\n          allMenuEntries.forEach(function (menuEntry) {\n            if (menuEntry.getId() === themeId) {\n              menuEntry.turnOn();\n            } else {\n              menuEntry.turnOff();\n            }\n          });\n        }\n\n        //init plugin state\n        if (themesConfig) {\n          if (themesConfig.default) {\n            state.defaultTheme = themesConfig.default;\n            state.selectedTheme = themesConfig.default;\n            changeTheme(themesConfig.default);\n          }\n          if (themesConfig.available) {\n            _.forEach(themesConfig.available, function (theme) {\n              state.availableThemes.push({\n                id: theme.id,\n                label: __(theme.name)\n              });\n            });\n          }\n        }\n\n        // register toolbox button\n        this.menuButton = this.getAreaBroker().getToolbox().createMenu({\n          control: 'color-contrast',\n          title: __('Change the current color preset'),\n          icon: 'contrast',\n          text: __('Contrast')\n        }).after('render', () => {\n          if (!isPluginAllowed()) {\n            self.hide();\n          }\n        }).on('click', function (e) {\n          e.preventDefault();\n          testRunner.trigger('tool-themeswitcher-toggle');\n        }).on('openmenu', function () {\n          testRunner.trigger(`plugin-open.${pluginName}`, state.selectedTheme);\n        }).on('closemenu', function () {\n          testRunner.trigger(`plugin-close.${pluginName}`, state.selectedTheme);\n        });\n\n        // register menu entries\n        state.availableThemes.forEach(function (theme) {\n          var themeEntry = self.getAreaBroker().getToolbox().createEntry({\n            role: 'option',\n            control: theme.id,\n            title: theme.label,\n            icon: 'preview',\n            text: __(theme.label)\n          });\n          themeEntry.setMenuId('color-contrast');\n          themeEntry.on('click', function (e) {\n            var themeId = this.config.control;\n            e.preventDefault();\n            self.menuButton.turnOffAll();\n            this.turnOn();\n            changeTheme(themeId);\n          });\n          if (state.defaultTheme === theme.id) {\n            themeEntry.on('render', function () {\n              this.turnOn();\n            });\n          }\n          allMenuEntries.push(themeEntry);\n        });\n        if (testRunnerOptions.allowShortcuts) {\n          if (pluginShortcuts.toggle) {\n            shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n              testRunner.trigger('tool-themeswitcher-toggle');\n            }, {\n              avoidInput: true\n            });\n          }\n        }\n        if (!isPluginAllowed()) {\n          this.hide();\n        }\n\n        //start disabled\n        this.disable();\n\n        //update plugin state based on changes\n        testRunner.on('loaditem', function () {\n          if (isPluginAllowed()) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        }).on('renderitem', function () {\n          self.enable();\n          changeTheme(state.selectedTheme);\n        }).on('enabletools', function () {\n          self.enable();\n        }).on('disabletools unloaditem', function () {\n          self.disable();\n        }).on('tool-themeswitcher-toggle', function () {\n          if (self.getState('enabled') !== false) {\n            self.menuButton.toggleMenu();\n          }\n        }).on('tool-themeswitcher-setnavtype', function (type) {\n          self.menuButton.setNavigationType(type);\n        });\n        return testRunner.getPluginStore(this.getName()).then(function (itemThemesStore) {\n          self.storage = itemThemesStore;\n          self.storage.getItem('itemThemeId').then(function (itemThemeId) {\n            if (itemThemeId && state.selectedTheme !== itemThemeId) {\n              changeTheme(itemThemeId);\n            }\n          });\n        });\n      },\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        themeHandler.setActiveNamespace(this.oldNamespace);\n        shortcut.remove(`.${this.getName()}`);\n        return this.getTestRunner().getPluginStore(this.getName()).then(function (itemThemesStore) {\n          return itemThemesStore.removeItem('itemThemeId');\n        });\n      },\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.menuButton.enable();\n      },\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.menuButton.disable();\n      },\n      /**\n       * Show the button\n       */\n      show: function show() {\n        this.menuButton.show();\n      },\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        this.menuButton.hide();\n      }\n    });\n\n    return itemThemeSwitcher;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/lineReader/compoundMask',['jquery', 'lodash', 'core/statifier', 'core/eventifier', 'ui/component', 'ui/component/placeable', 'ui/component/draggable', 'ui/component/resizable', 'ui/component/stackable'], function ($, _, statifier, eventifier, componentFactory, makePlaceable, makeDraggable, makeResizable, makeStackable) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    statifier = statifier && Object.prototype.hasOwnProperty.call(statifier, 'default') ? statifier['default'] : statifier;\n    eventifier = eventifier && Object.prototype.hasOwnProperty.call(eventifier, 'default') ? eventifier['default'] : eventifier;\n    componentFactory = componentFactory && Object.prototype.hasOwnProperty.call(componentFactory, 'default') ? componentFactory['default'] : componentFactory;\n    makePlaceable = makePlaceable && Object.prototype.hasOwnProperty.call(makePlaceable, 'default') ? makePlaceable['default'] : makePlaceable;\n    makeDraggable = makeDraggable && Object.prototype.hasOwnProperty.call(makeDraggable, 'default') ? makeDraggable['default'] : makeDraggable;\n    makeResizable = makeResizable && Object.prototype.hasOwnProperty.call(makeResizable, 'default') ? makeResizable['default'] : makeResizable;\n    makeStackable = makeStackable && Object.prototype.hasOwnProperty.call(makeStackable, 'default') ? makeStackable['default'] : makeStackable;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n    var defaultDimensions = {\n      outerWidth: 600,\n      outerHeight: 400,\n      innerWidth: 500,\n      innerHeight: 20\n    };\n    var defaultPosition = {\n      outerX: 0,\n      outerY: 0,\n      innerX: 50,\n      innerY: 50\n    };\n    var defaultOptions = {\n      dragMinWidth: 10,\n      dragMinHeight: 10,\n      resizeHandleSize: 10,\n      innerDragHeight: 20\n    };\n    var stackingOptions = {\n      stackingScope: 'test-runner'\n    };\n    var constrains;\n\n    /**\n     * @param {Object} options\n     * @param {Number} options.resizeHandleSize - size of the resize handlers on each resizable edge\n     * @param {Number} options.dragMinWidth - minimal width for the draggable area of each component.\n     * @param {Number} options.dragMinHeight - minimal height for the draggable area of each component.\n     * @param {Number} options.innerDragHeight - height of the inner window drag handle\n     * @param {Object} dimensions\n     * @param {Number} dimensions.outerWidth - overall mask width\n     * @param {Number} dimensions.outerHeight - overall mask height\n     * @param {Number} dimensions.innerWidth - inner window width\n     * @param {Number} dimensions.innerHeight - inner window height\n     * @param {Number} position\n     * @param {Number} position.outerX - overall mask x\n     * @param {Number} position.outerY - overall mask y\n     * @param {Number} position.innerX - inner window mask x\n     * @param {Number} position.innerY - inner window mask y\n     */\n    function compoundMaskFactory(options, dimensions, position) {\n      var compoundMask,\n        allParts = {},\n        innerDrag,\n        closer,\n        visualGuides = {};\n\n      /**\n       * ============================================\n       * Definition of Mask & Overlay component types\n       * ============================================\n       */\n\n      /**\n       * Create a mask component. They are used for masking (obviously) but also resizing the compound mask\n       * @param {Object} maskConfig\n       * @param {String} maskConfig.id\n       * @param {Function} maskConfig.place - size and position the mask according to the transform model\n       * @param {Function} maskConfig.placeOverlay - size and position the overlay according to the transform model\n       * @param {Function} maskConfig.beforeResize - used to set the resize limit depending on which edge the resizing occurs\n       * @param {Function} maskConfig.onResize - how the resize affect the transform model\n       * @param {Object} maskConfig.edges - Interact configuration to specify which edges can be used for resizing\n       * @param {Number} maskConfig.minWidth\n       * @param {Number} maskConfig.minHeight\n       */\n      function createMask(maskConfig) {\n        var mask,\n          maskAPI = {\n            place: maskConfig.place,\n            placeOverlay: maskConfig.placeOverlay,\n            styleResizableEdges: function styleResizableEdges() {\n              var $element = this.getElement();\n              _.forOwn(this.config.edgesBorders, function (isResizable, edgeId) {\n                if (isResizable) {\n                  $element.addClass(`border-${edgeId}`);\n                }\n              });\n            },\n            addResizeControll: function addResizeControll() {\n              var $element = this.getElement();\n              var $resizeControll = $('<div>', {\n                class: 'resize-control'\n              });\n              $element.append($resizeControll);\n            }\n          };\n        mask = componentFactory(maskAPI, maskConfig);\n        makeResizable(mask);\n        makeStackable(mask, stackingOptions);\n        return mask.on('render', function () {\n          var $element = this.getElement();\n          this.styleResizableEdges();\n          if (this.config.resizeControll) {\n            this.addResizeControll();\n          }\n          $element.addClass(`line-reader-mask ${maskConfig.id}`).on('mousedown touchstart', function () {\n            bringAllToFront();\n          });\n\n          // uncomment this to see what's going on with masks:\n          // $element.css({ border: '1px solid olive'});\n        }).on('resizestart', function () {\n          innerDrag.hide();\n          closer.hide();\n          invokeOnOverlays('hide');\n          invokeOnMasks('setState', ['resizing', true]);\n          this.setState('resizer', true);\n        }).on('beforeresize', maskConfig.beforeResize || _.noop).on('resize', maskConfig.onResize || _.noop).on('resizeend', function () {\n          applyTransformsToOverlays();\n          applyTransformsToInnerDrag();\n          applyTransformsToCloser();\n          invokeOnMasks('setState', ['resizing', false]);\n          invokeOnOverlays('show');\n          innerDrag.show();\n          closer.show();\n          this.setState('resizer', false);\n        }).init();\n      }\n\n      /**\n       * Create a overlay component. Overlay are invisible and are used for dragging.\n       * When clicked, the whole mask is hidden and only the overlay is displayed, after being resized to fit the whole mask surface\n       * this allows for performance improvement as well as giving the dragged element proper dragging boundaries.\n       * Also, visual guides are added, like a fake inner window, during the drag\n       * @param {Object} overlayConfig\n       * @param {String} overlayConfig.id\n       */\n      function createOverlay(overlayConfig) {\n        var overlay,\n          overlayAPI = {\n            transformOverlay: function transformOverlay() {\n              var $element = this.getElement();\n              this._sizeBackup = this.getSize();\n              this._posBackup = this.getPosition();\n              this.setSize(dimensions.outerWidth, dimensions.outerHeight).moveTo(position.outerX, position.outerY);\n              $element.addClass('moving');\n              this.setState('transformed', true);\n            },\n            restoreOverlay: function restoreOverlay() {\n              var $element = this.getElement();\n              if (this.is('transformed')) {\n                this.setSize(this._sizeBackup.width, this._sizeBackup.height).moveTo(this._posBackup.x, this._posBackup.y);\n                $element.removeClass('moving');\n                this._sizeBackup = null;\n                this._posBackup = null;\n                this.setState('transformed', false);\n              }\n            },\n            appendVisualGuides: function appendVisualGuides() {\n              var $element = this.getElement(),\n                borderWidth = 1,\n                // this mirror the $lrBorderWidth css variable\n                borderOffset = borderWidth * 2;\n              $element.append(visualGuides.$maskBg);\n              $element.append(visualGuides.$innerWindow);\n              visualGuides.$maskBg.css({\n                width: dimensions.outerWidth - borderOffset,\n                height: dimensions.outerHeight - borderOffset,\n                'border-top-width': dimensions.topHeight - borderOffset,\n                'border-right-width': dimensions.rightWidth - borderOffset,\n                'border-bottom-width': dimensions.bottomHeight - borderOffset,\n                'border-left-width': dimensions.leftWidth - borderOffset\n              });\n              visualGuides.$innerWindow.css({\n                width: dimensions.innerWidth,\n                height: dimensions.innerHeight,\n                left: dimensions.leftWidth - borderOffset,\n                top: dimensions.topHeight - borderOffset\n              });\n            },\n            removeVisualGuides: function removeVisualGuides() {\n              visualGuides.$maskBg.remove();\n              visualGuides.$innerWindow.remove();\n            }\n          };\n        overlay = componentFactory(overlayAPI, overlayConfig);\n        makeDraggable(overlay);\n        makeStackable(overlay, stackingOptions);\n        return overlay.on('render', function () {\n          var self = this,\n            $element = this.getElement(),\n            // captures touch and mouse\n            // also fixes issue with IE not capturing 'mousedown' etc\n            pointerEventsPrefix = window.PointerEvent ? 'pointer' : 'mouse',\n            $moveIcon = $('<div>', {\n              class: 'icon icon-mobile-menu'\n            });\n          $element.addClass(`line-reader-overlay ${overlayConfig.id}`).on(`${pointerEventsPrefix}down` + ` touchstart`, function () {\n            bringAllToFront();\n            self.transformOverlay();\n          }).on(`${pointerEventsPrefix}up` + ` touchend`, function () {\n            self.restoreOverlay();\n          }).prepend($moveIcon);\n        }).on('dragstart', function () {\n          innerDrag.hide();\n          closer.hide();\n          invokeOnMasks('hide');\n          this.appendVisualGuides();\n        }).on('dragmove', function moveAllPartsTogether(xOffsetRelative, yOffsetRelative) {\n          // update the transform model\n          position.outerX += xOffsetRelative;\n          position.outerY += yOffsetRelative;\n          position.innerX += xOffsetRelative;\n          position.innerY += yOffsetRelative;\n        }).on('dragend', function () {\n          this.removeVisualGuides();\n          // although they are already display, calling show() again on the overlays\n          // will force their z-Index at the top of the stack\n          invokeOnAll('show');\n          innerDrag.show();\n          closer.show();\n\n          // apply the new transform model\n          applyTransforms();\n        }).init();\n      }\n\n      /**\n       * ==========================\n       * Inner Drag Handle & Closer\n       * ==========================\n       */\n\n      /**\n       * This handle allows to drag the inner window\n       */\n      function createInnerDragHandle() {\n        // uncomment this (and a few lines below) if debugging is needed:\n        // var $boundingBox = $('<div>').css({ position: 'fixed', 'box-sizing': 'border-box', border: '1px solid red' });\n\n        innerDrag = componentFactory();\n        makeStackable(innerDrag, stackingOptions);\n        makeDraggable(innerDrag, {\n          dragRestriction: function dragRestriction() {\n            var fixedXY = allParts.nw.mask.getElement().offset(),\n              rect;\n            rect = {\n              x: fixedXY.left + constrains.minWidth,\n              y: fixedXY.top + (constrains.minTopHeight + dimensions.innerHeight + options.resizeHandleSize),\n              width: dimensions.outerWidth - constrains.minWidth * 2,\n              height: dimensions.outerHeight - (dimensions.innerHeight + constrains.minTopHeight + constrains.minBottomHeight - options.innerDragHeight)\n            };\n\n            // uncomment to see what's going on:\n            // allParts.ne.mask.getContainer().append($boundingBox);\n            // $boundingBox.css({ width: rect.width, height: rect.height, top: rect.y, left: rect.x });\n\n            return rect;\n          }\n        }).on('render', function () {\n          var $element = this.getElement(),\n            $dragIcon = $('<div>', {\n              class: 'icon icon-move'\n            });\n          $element.css('touch-action', 'none');\n          $element.addClass('line-reader-inner-drag');\n          $element.css({\n            background: 'none'\n          });\n          $element.append($dragIcon);\n        }).on('dragstart', function () {\n          closer.hide();\n          bringAllToFront();\n          invokeOnMasks('setState', ['resizing', true]);\n        }).on('dragmove', function (xOffsetRelative, yOffsetRelative) {\n          position.innerX += xOffsetRelative;\n          position.innerY += yOffsetRelative;\n          dimensions.leftWidth += xOffsetRelative;\n          dimensions.topHeight += yOffsetRelative;\n          dimensions.rightWidth -= xOffsetRelative;\n          dimensions.bottomHeight -= yOffsetRelative;\n          applyTransformsToMasks();\n        }).on('dragend', function () {\n          innerDrag.bringToFront();\n          closer.show();\n          invokeOnMasks('setState', ['resizing', false]);\n          applyTransformsToOverlays();\n        }).init();\n      }\n\n      /**\n       * Close button for the compound mask\n       */\n      function createCloser() {\n        closer = componentFactory();\n        makeStackable(closer, stackingOptions);\n        makePlaceable(closer).on('render', function () {\n          var self = this,\n            $element = this.getElement(),\n            $closeIcon = $('<div>', {\n              class: 'icon icon-result-nok'\n            });\n          $element.append($closeIcon);\n          $element.addClass('line-reader-closer');\n          $element.on('mousedown touchstart', function () {\n            bringAllToFront();\n          });\n          $element.on('click', function (e) {\n            e.stopPropagation();\n            self.trigger('click');\n          });\n        }).init();\n      }\n\n      /**\n       * =================\n       * Utility functions\n       * =================\n       */\n      function bringAllToFront() {\n        invokeOnAll('bringToFront');\n        innerDrag.bringToFront();\n        closer.bringToFront();\n      }\n      function invokeOnAll(fn, args) {\n        invokeOnMasks(fn, args);\n        invokeOnOverlays(fn, args);\n      }\n      function invokeOnMasks(fn, args) {\n        invokeOn('mask', fn, args);\n      }\n      function invokeOnOverlays(fn, args) {\n        invokeOn('overlay', fn, args);\n      }\n\n      /**\n       * Invoke a method on all compound mask parts, whether mask or overlays\n       * @param {String} target - mask | overlay\n       * @param {String} fn - the name of the method to invoke\n       * @param {*[]} args - arguments passed on invoke\n       */\n      function invokeOn(target, fn, args) {\n        _.forOwn(allParts, function (part) {\n          if (_.isObject(part[target]) && _.isFunction(part[target][fn])) {\n            part[target][fn](...(args || []));\n          }\n        });\n      }\n\n      /**\n       * =================================\n       * Transform model related functions\n       * =================================\n       */\n\n      function applyTransforms() {\n        applyTransformsToMasks();\n        applyTransformsToOverlays();\n        applyTransformsToInnerDrag();\n        applyTransformsToCloser();\n      }\n      function applyTransformsToMasks() {\n        invokeOnMasks('place');\n      }\n      function applyTransformsToOverlays() {\n        _.forOwn(allParts, function (part) {\n          if (part.overlay) {\n            part.mask.placeOverlay(part.overlay);\n          }\n        });\n      }\n      function applyTransformsToInnerDrag() {\n        if (innerDrag) {\n          innerDrag.setSize(dimensions.innerWidth - 20, options.innerDragHeight).moveTo(position.innerX + 10, position.innerY + dimensions.innerHeight + options.resizeHandleSize);\n        }\n      }\n      function applyTransformsToCloser() {\n        if (closer) {\n          closer.setSize(constrains.minWidth - options.resizeHandleSize, constrains.minHeight - options.resizeHandleSize).moveTo(position.outerX + dimensions.outerWidth - constrains.minWidth - 5,\n          // manual adjustment so it looks better\n          position.outerY + options.resizeHandleSize - 4);\n        }\n      }\n\n      /**\n       * Check that the given transform model respect the current constrains.\n       * If not, correct them\n       */\n      function correctTransforms() {\n        if (dimensions.topHeight < constrains.minTopHeight) {\n          dimensions.topHeight = constrains.minTopHeight;\n          position.innerY = position.outerY + constrains.minTopHeight;\n        }\n        if (dimensions.innerHeight < constrains.minHeight) {\n          dimensions.innerHeight = constrains.minHeight;\n        }\n        if (dimensions.bottomHeight < constrains.minBottomHeight) {\n          dimensions.bottomHeight = constrains.minBottomHeight;\n        }\n        dimensions.outerHeight = dimensions.topHeight + dimensions.innerHeight + dimensions.bottomHeight;\n        if (dimensions.leftWidth < constrains.minWidth) {\n          dimensions.leftWidth = constrains.minWidth;\n          position.innerX = position.outerX + constrains.minWidth;\n        }\n        if (dimensions.innerWidth < constrains.minWidth) {\n          dimensions.innerWidth = constrains.minWidth;\n        }\n        if (dimensions.rightWidth < constrains.minWidth) {\n          dimensions.rightWidth = constrains.minWidth;\n        }\n        dimensions.outerWidth = dimensions.leftWidth + dimensions.innerWidth + dimensions.rightWidth;\n      }\n\n      /**\n       * Update the transform model during a resize affecting the top height\n       * @param {Number} newHeight\n       * @param {Number} newY\n       * @param {Boolean} fromTop - if the resize occurs from the top\n       */\n      function setTopHeight(newHeight, newY, fromTop) {\n        dimensions.topHeight = newHeight;\n        if (fromTop) {\n          dimensions.outerHeight = newHeight + dimensions.innerHeight + dimensions.bottomHeight;\n          position.outerY = newY;\n        } else {\n          dimensions.innerHeight = dimensions.outerHeight - newHeight - dimensions.bottomHeight;\n          position.innerY = position.outerY + newHeight;\n        }\n      }\n\n      /**\n       * Update the transform model during a resize affecting the right width\n       * @param {Number} newWidth\n       * @param {Number} newX\n       * @param {Boolean} fromLeft - if the resize occurs from the left\n       */\n      function setRightWidth(newWidth, newX, fromLeft) {\n        dimensions.rightWidth = newWidth;\n        if (fromLeft) {\n          dimensions.innerWidth = newX - position.innerX;\n        } else {\n          dimensions.outerWidth = dimensions.leftWidth + dimensions.innerWidth + newWidth;\n        }\n      }\n\n      /**\n       * Update the transform model during a resize affecting the bottom height\n       * @param {Number} newHeight\n       * @param {Number} newY\n       * @param {Boolean} fromTop - if the resize occurs from the top\n       */\n      function setBottomHeight(newHeight, newY, fromTop) {\n        dimensions.bottomHeight = newHeight;\n        if (fromTop) {\n          dimensions.innerHeight = newY - position.innerY;\n          dimensions.bottomHeight = newHeight;\n        } else {\n          dimensions.outerHeight = dimensions.topHeight + dimensions.innerHeight + newHeight;\n        }\n      }\n\n      /**\n       * Update the transform model during a resize affecting the left width\n       * @param {Number} newWidth\n       * @param {Number} newX\n       * @param {Boolean} fromLeft - if the resize occurs from the left\n       */\n      function setLeftWidth(newWidth, newX, fromLeft) {\n        dimensions.leftWidth = newWidth;\n        if (fromLeft) {\n          dimensions.outerWidth = newWidth + dimensions.innerWidth + dimensions.rightWidth;\n          position.outerX = newX;\n        } else {\n          dimensions.innerWidth = dimensions.outerWidth - newWidth - dimensions.rightWidth;\n          position.innerX = position.outerX + newWidth;\n        }\n      }\n\n      /**\n       * Update the transform model during a resize affecting inner height\n       * @param {Number} newHeight\n       */\n      const setInnerHeight = newHeight => {\n        dimensions.innerHeight = newHeight;\n        dimensions.bottomHeight = dimensions.outerHeight - dimensions.innerHeight - dimensions.topHeight;\n      };\n      /**\n       * ======================================\n       * Mask parts and other elements creation\n       * ======================================\n       */\n\n      function createCompoundMask() {\n        // North\n        createPart({\n          id: 'n',\n          edges: {\n            top: false,\n            right: false,\n            bottom: false,\n            left: false\n          },\n          edgesBorders: {\n            top: true,\n            right: false,\n            bottom: true,\n            left: false\n          },\n          addOverlay: true,\n          minHeight: constrains.minTopHeight,\n          // move and dimension the mask\n          place: function place() {\n            this.moveTo(position.innerX, position.outerY).setSize(dimensions.innerWidth, dimensions.topHeight);\n          },\n          // move and dimension the overlay\n          placeOverlay: function placeOverlay(overlay) {\n            var pos = this.getPosition(),\n              size = this.getSize();\n            overlay.moveTo(position.outerX, pos.y).setSize(dimensions.outerWidth, size.height);\n          },\n          // set a resize limit whenever resize happens on an inner edge (here, the top inner edge, eg. the bottom of the mask),\n          // so the min/max width/height limit for \"inner component\" is respected\n          beforeResize: function beforeResize(width, height, fromLeft, fromTop) {\n            this.config.maxHeight = fromTop ? null : dimensions.topHeight + (dimensions.innerHeight - constrains.minHeight);\n          },\n          // set the new transform values (dimension and position) resulting from the current mask resize, and apply them\n          onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n            setTopHeight(height, y, fromTop);\n            applyTransformsToMasks();\n          }\n        });\n\n        // North-east\n        createPart({\n          id: 'ne',\n          edges: {\n            top: false,\n            right: false,\n            bottom: false,\n            left: false\n          },\n          edgesBorders: {\n            top: true,\n            right: true,\n            bottom: false,\n            left: false\n          },\n          minHeight: constrains.minTopHeight,\n          place: function place() {\n            this.moveTo(position.innerX + dimensions.innerWidth, position.outerY).setSize(dimensions.rightWidth, dimensions.topHeight);\n          },\n          placeOverlay: function placeOverlay(overlay) {\n            var pos = this.getPosition(),\n              size = this.getSize();\n            overlay.moveTo(pos.x, pos.y + options.resizeHandleSize).setSize(size.width - options.resizeHandleSize, size.height - options.resizeHandleSize * 2);\n          },\n          onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n            setTopHeight(height, y, fromTop);\n            setRightWidth(width, x, fromLeft);\n            applyTransformsToMasks();\n          }\n        });\n\n        // South east\n        createPart({\n          id: 'se',\n          edges: {\n            top: false,\n            right: '.resize-control',\n            bottom: '.resize-control',\n            left: false\n          },\n          edgesBorders: {\n            top: false,\n            right: true,\n            bottom: true,\n            left: false\n          },\n          minHeight: constrains.minBottomHeight,\n          resizeControll: true,\n          place: function place() {\n            this.moveTo(position.innerX + dimensions.innerWidth, position.innerY + dimensions.innerHeight).setSize(dimensions.rightWidth, dimensions.bottomHeight);\n          },\n          placeOverlay: function placeOverlay(overlay) {\n            var pos = this.getPosition(),\n              size = this.getSize();\n            overlay.moveTo(pos.x, pos.y + options.resizeHandleSize).setSize(size.width - options.resizeHandleSize, size.height - options.resizeHandleSize * 2);\n          },\n          onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n            setRightWidth(width, x, fromLeft);\n            setBottomHeight(height, y, fromTop);\n            applyTransformsToMasks();\n          }\n        });\n\n        // South\n        createPart({\n          id: 's',\n          edges: {\n            top: false,\n            right: false,\n            bottom: false,\n            left: false\n          },\n          edgesBorders: {\n            top: true,\n            right: false,\n            bottom: true,\n            left: false\n          },\n          minHeight: constrains.minBottomHeight,\n          place: function place() {\n            this.moveTo(position.innerX, position.innerY + dimensions.innerHeight).setSize(dimensions.innerWidth, dimensions.bottomHeight);\n          },\n          placeOverlay: function placeOverlay(overlay) {\n            var pos = this.getPosition(),\n              size = this.getSize();\n            overlay.moveTo(pos.x, pos.y + options.resizeHandleSize).setSize(size.width, size.height - options.resizeHandleSize * 2);\n          },\n          beforeResize: function beforeResize(width, height, fromLeft, fromTop) {\n            this.config.maxHeight = fromTop ? dimensions.bottomHeight + (dimensions.innerHeight - constrains.minHeight) : null;\n          },\n          onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n            setBottomHeight(height, y, fromTop);\n            applyTransformsToMasks();\n          }\n        });\n\n        // East\n        createPart({\n          id: 'e',\n          edges: {\n            top: false,\n            right: false,\n            bottom: '.resize-control',\n            left: '.resize-control'\n          },\n          edgesBorders: {\n            top: false,\n            right: true,\n            bottom: false,\n            left: true\n          },\n          resizeControll: true,\n          place: function place() {\n            this.moveTo(position.innerX + dimensions.innerWidth, position.innerY).setSize(dimensions.rightWidth, dimensions.innerHeight);\n          },\n          placeOverlay: function placeOverlay(overlay) {\n            var pos = this.getPosition(),\n              size = this.getSize();\n            overlay.moveTo(pos.x + options.resizeHandleSize, pos.y - options.resizeHandleSize).setSize(size.width - options.resizeHandleSize * 2, size.height + options.resizeHandleSize * 2);\n          },\n          // eslint-disable-next-line no-unused-vars\n          beforeResize: function beforeResize(width, height, fromLeft) {\n            this.config.maxWidth = dimensions.rightWidth + (dimensions.innerWidth - constrains.minWidth);\n            this.config.minWidth = constrains.minWidth;\n            this.config.maxHeight = dimensions.outerHeight - dimensions.topHeight - constrains.minBottomHeight;\n          },\n          onResize: function onResize(width, height, fromLeft, fromTop, x) {\n            setRightWidth(width, x, fromLeft);\n            setInnerHeight(height);\n            applyTransformsToMasks();\n          }\n        });\n\n        // South-west\n        createPart({\n          id: 'sw',\n          edges: {\n            top: false,\n            right: false,\n            bottom: false,\n            left: false\n          },\n          edgesBorders: {\n            top: false,\n            right: false,\n            bottom: true,\n            left: true\n          },\n          minHeight: constrains.minBottomHeight,\n          place: function place() {\n            this.moveTo(position.outerX, position.innerY + dimensions.innerHeight).setSize(dimensions.leftWidth, dimensions.bottomHeight);\n          },\n          placeOverlay: function placeOverlay(overlay) {\n            var pos = this.getPosition(),\n              size = this.getSize();\n            overlay.moveTo(pos.x + options.resizeHandleSize, pos.y + options.resizeHandleSize).setSize(size.width - options.resizeHandleSize, size.height - options.resizeHandleSize * 2);\n          },\n          onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n            setBottomHeight(height, y, fromTop);\n            setLeftWidth(width, x, fromLeft);\n            applyTransformsToMasks();\n          }\n        });\n\n        // West\n        createPart({\n          id: 'w',\n          edges: {\n            top: false,\n            right: false,\n            bottom: false,\n            left: false\n          },\n          edgesBorders: {\n            top: false,\n            right: true,\n            bottom: false,\n            left: true\n          },\n          place: function place() {\n            this.moveTo(position.outerX, position.innerY).setSize(dimensions.leftWidth, dimensions.innerHeight);\n          },\n          placeOverlay: function placeOverlay(overlay) {\n            var pos = this.getPosition(),\n              size = this.getSize();\n            overlay.moveTo(pos.x + options.resizeHandleSize, pos.y - options.resizeHandleSize).setSize(size.width - options.resizeHandleSize * 2, size.height + options.resizeHandleSize * 2);\n          },\n          beforeResize: function beforeResize(width, height, fromLeft) {\n            this.config.maxWidth = fromLeft ? null : dimensions.leftWidth + (dimensions.innerWidth - constrains.minWidth);\n          },\n          onResize: function onResize(width, height, fromLeft, fromTop, x) {\n            setLeftWidth(width, x, fromLeft);\n            applyTransformsToMasks();\n          }\n        });\n\n        // North-west\n        createPart({\n          id: 'nw',\n          edges: {\n            top: false,\n            right: false,\n            bottom: false,\n            left: false\n          },\n          edgesBorders: {\n            top: true,\n            right: false,\n            bottom: false,\n            left: true\n          },\n          minHeight: constrains.minTopHeight,\n          place: function place() {\n            this.moveTo(position.outerX, position.outerY).setSize(dimensions.leftWidth, dimensions.topHeight);\n          },\n          placeOverlay: function placeOverlay(overlay) {\n            var pos = this.getPosition(),\n              size = this.getSize();\n            overlay.moveTo(pos.x + options.resizeHandleSize, pos.y + options.resizeHandleSize).setSize(size.width - options.resizeHandleSize, size.height - options.resizeHandleSize * 2);\n          },\n          onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n            setTopHeight(height, y, fromTop);\n            setLeftWidth(width, x, fromLeft);\n            applyTransformsToMasks();\n          }\n        });\n      }\n      function createPart(partConfig) {\n        allParts[partConfig.id] = {\n          mask: createMask(_.assign({}, constrains, partConfig)),\n          overlay: partConfig.addOverlay ? createOverlay(partConfig) : null\n        };\n      }\n      function createVisualGuides() {\n        visualGuides.$maskBg = $('<div>', {\n          class: 'mask-bg'\n        });\n        visualGuides.$innerWindow = $('<div>', {\n          class: 'inner-window'\n        });\n      }\n\n      /**\n       * =========================\n       * The compoundMask instance\n       * =========================\n       */\n\n      dimensions = _.defaults(dimensions || {}, defaultDimensions);\n      position = _.defaults(position || {}, defaultPosition);\n      options = _.defaults(options || {}, defaultOptions);\n      constrains = {\n        minWidth: options.resizeHandleSize * 2 + options.dragMinWidth,\n        minHeight: options.resizeHandleSize * 2 + options.dragMinHeight,\n        minBottomHeight: options.resizeHandleSize * 2 + options.innerDragHeight,\n        minTopHeight: options.resizeHandleSize * 2 + 18 // make sure that top will fit header size\n      };\n\n      compoundMask = {\n        init: function init() {\n          var self = this;\n          this.setTransforms(dimensions, position);\n          createCompoundMask();\n          createVisualGuides();\n          createInnerDragHandle();\n          createCloser();\n          closer.on('click', function () {\n            self.hide();\n            self.trigger('close');\n          });\n          return this;\n        },\n        render: function render($container) {\n          invokeOnAll('render', [$container]);\n          innerDrag.render($container);\n          closer.render($container);\n          applyTransforms();\n          return this;\n        },\n        destroy: function destroy() {\n          invokeOnAll('destroy');\n          visualGuides = null;\n          innerDrag = null;\n          closer = null;\n          return this;\n        },\n        show: function show() {\n          invokeOnAll('show');\n          innerDrag.show();\n          closer.show();\n          this.setState('hidden', false);\n          return this;\n        },\n        hide: function hide() {\n          invokeOnAll('hide');\n          innerDrag.hide();\n          closer.hide();\n          this.setState('hidden', true);\n          return this;\n        },\n        /**\n         * Allow updating the transform model\n         * @param {Object} dim\n         * @param {Number} dim.outerWidth - overall mask width\n         * @param {Number} dim.outerHeight - overall mask height\n         * @param {Number} dim.innerWidth - inner window width\n         * @param {Number} dim.innerHeight - inner window height\n         * @param {Number} pos\n         * @param {Number} pos.outerX - overall mask x\n         * @param {Number} pos.outerY - overall mask y\n         * @param {Number} pos.innerX - inner window x\n         * @param {Number} pos.innerY - inner window y\n         */\n        setTransforms: function setTransforms(dim, pos) {\n          dimensions = _.defaults(dim || {}, dimensions);\n          position = _.defaults(pos || {}, position);\n\n          // automatically complete the dimensions\n          dimensions.topHeight = pos.innerY - pos.outerY;\n          dimensions.rightWidth = dim.outerWidth - (pos.innerX - pos.outerX) - dim.innerWidth;\n          dimensions.bottomHeight = dim.outerHeight - (pos.innerY - pos.outerY) - dim.innerHeight;\n          dimensions.leftWidth = pos.innerX - pos.outerX;\n          correctTransforms();\n          applyTransforms();\n        },\n        getDimensions: function getDimensions() {\n          return dimensions;\n        },\n        getPosition: function getPosition() {\n          return position;\n        },\n        getParts: function getParts() {\n          return allParts;\n        }\n      };\n      statifier(compoundMask);\n      eventifier(compoundMask);\n      return compoundMask;\n    }\n\n    return compoundMaskFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/lineReader/plugin',['lodash', 'i18n', 'taoTests/runner/plugin', 'ui/hider', 'util/shortcut', 'util/namespace', 'taoQtiTest/runner/helpers/map', 'taoQtiTest/runner/plugins/tools/lineReader/compoundMask'], function (_, __, pluginFactory, hider, shortcut, namespaceHelper, mapHelper, compoundMaskFactory) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n    compoundMaskFactory = compoundMaskFactory && Object.prototype.hasOwnProperty.call(compoundMaskFactory, 'default') ? compoundMaskFactory['default'] : compoundMaskFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n    var pluginName = 'line-reader';\n\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n    var actionPrefix = `tool-${pluginName}-`;\n\n    /**\n     * Options for the compoundMask factory\n     * @type {Object}\n     */\n    var maskOptions = {\n      dragMinWidth: 17,\n      dragMinHeight: 7,\n      resizeHandleSize: 7,\n      innerDragHeight: 20\n    };\n    var dimensions, position;\n\n    /**\n     * These functions are a first effort to place the mask on the first line on the item\n     * They make a lot of assumptions:\n     * - the item starts with a text\n     * - the padding is set on the .qti-item container\n     * - the padding is consistent with the minWidth/minHeight configuration of the mask\n     * - and some other...\n     * @param {jQuery} $container - where the mask is appended\n     */\n    function getDimensions($container) {\n      var $qtiContent = $container.find('#qti-content'),\n        $qtiItem = $qtiContent.find('.qti-item'),\n        lineHeight = Math.ceil(parseFloat($qtiContent.css('line-height'))) || 20; // reasonable default line height\n\n      return {\n        outerWidth: $qtiItem.width() + maskOptions.resizeHandleSize * 4 + maskOptions.dragMinWidth * 2,\n        outerHeight: 175,\n        // reasonable default height\n        innerWidth: $qtiItem.width(),\n        innerHeight: lineHeight\n      };\n    }\n    function getPosition($container) {\n      var $qtiContent = $container.find('#qti-content'),\n        $qtiItem = $qtiContent.find('.qti-item'),\n        itemPosition = $qtiItem.position() || {},\n        paddingLeft = parseInt($qtiItem.css('padding-left'), 10),\n        paddingTop = parseInt($qtiItem.css('padding-top'), 10),\n        textPadding = 3,\n        // this is to let the text breathe a bit\n        innerX = parseInt(itemPosition.left, 10) + paddingLeft - textPadding,\n        innerY = parseInt(itemPosition.top, 10) + paddingTop - textPadding;\n      return {\n        outerX: innerX - maskOptions.resizeHandleSize * 2 - maskOptions.dragMinWidth,\n        outerY: 0,\n        innerX: innerX,\n        innerY: innerY\n      };\n    }\n    function containerWidthHasChanged($container) {\n      var newDimensions = getDimensions($container);\n      return newDimensions.outerWidth !== dimensions.outerWidth;\n    }\n\n    /**\n     * Returns the configured plugin\n     */\n    var plugin = pluginFactory({\n      name: pluginName,\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init: function init() {\n        const self = this;\n        const testRunner = this.getTestRunner();\n        const testRunnerOptions = testRunner.getOptions();\n        const pluginShortcuts = (testRunnerOptions.shortcuts || {})[pluginName] || {};\n        const $container = testRunner.getAreaBroker().getContentArea().parent();\n        this.compoundMask = compoundMaskFactory(maskOptions).init().render($container).on('close', function () {\n          closeMask();\n        }).hide();\n\n        /**\n         * Checks if the plugin is currently available\n         * @returns {Boolean}\n         */\n        function isEnabled() {\n          //to be activated with the special category x-tao-option-lineReader\n          return mapHelper.hasItemCategory(testRunner.getTestMap(), testRunner.getTestContext().itemIdentifier, 'lineReader', true);\n        }\n        function toggleButton() {\n          if (isEnabled()) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        }\n        function toggleMask() {\n          if (self.compoundMask.getState('hidden')) {\n            if (containerWidthHasChanged($container)) {\n              transformMask($container);\n            }\n            openMask();\n          } else {\n            closeMask();\n          }\n        }\n        function openMask() {\n          self.compoundMask.show();\n          self.trigger('start');\n          self.button.turnOn();\n        }\n        function closeMask() {\n          if (!self.compoundMask.getState('hidden')) {\n            self.compoundMask.hide();\n          }\n          self.trigger('end');\n          self.button.turnOff();\n        }\n        function transformMask($maskContainer) {\n          dimensions = getDimensions($maskContainer);\n          position = getPosition($maskContainer);\n          self.compoundMask.setTransforms(_.clone(dimensions), _.clone(position));\n        }\n\n        // create button\n        this.button = this.getAreaBroker().getToolbox().createEntry({\n          title: __('Line Reader'),\n          icon: 'insert-horizontal-line',\n          control: 'line-reader',\n          text: __('Line Reader')\n        });\n\n        // attach user events\n        this.button.on('click', function (e) {\n          e.preventDefault();\n          testRunner.trigger(`${actionPrefix}toggle`);\n        });\n        if (testRunnerOptions.allowShortcuts) {\n          if (pluginShortcuts.toggle) {\n            shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n              testRunner.trigger(`${actionPrefix}toggle`);\n            }, {\n              avoidInput: true,\n              prevent: true\n            });\n          }\n        }\n\n        //start disabled\n        this.disable();\n\n        //update plugin state based on changes\n        testRunner.on('loaditem', toggleButton).on('renderitem', function () {\n          transformMask($container);\n        }).on('enabletools renderitem', function () {\n          self.enable();\n        }).on('disabletools unloaditem', function () {\n          self.disable();\n          closeMask();\n        }).on(`${actionPrefix}toggle`, function () {\n          if (isEnabled()) {\n            toggleMask();\n          }\n        });\n      },\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        this.compoundMask.destroy();\n        shortcut.remove(`.${this.getName()}`);\n      },\n      /**\n       * Enable the button\n       */\n      enable: function enable() {\n        this.button.enable();\n      },\n      /**\n       * Disable the button\n       */\n      disable: function disable() {\n        this.button.disable();\n      },\n      /**\n       * Show the button\n       */\n      show: function show() {\n        this.button.show();\n      },\n      /**\n       * Hide the button\n       */\n      hide: function hide() {\n        this.button.hide();\n      }\n    });\n\n    return plugin;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/magnifier/magnifierPanel',['jquery', 'lodash', 'ui/component', 'handlebars', 'lib/handlebars/helpers', 'ui/dynamicComponent'], function ($$1, _, component, Handlebars, Helpers0, dynamicComponent) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    component = component && Object.prototype.hasOwnProperty.call(component, 'default') ? component['default'] : component;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    dynamicComponent = dynamicComponent && Object.prototype.hasOwnProperty.call(dynamicComponent, 'default') ? dynamicComponent['default'] : dynamicComponent;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n      buffer += \"<div class=\\\"magnifier\\\">\\n    <div class=\\\"level\\\">\";\n      if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</div>\\n    <div class=\\\"overlay\\\"></div>\\n    <div class=\\\"inner\\\"></div>\\n    <div class=\\\"controls close\\\">\\n        <a href=\\\"#\\\" class=\\\"control\\\" data-control=\\\"zoomIn\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Magnify more\", options) : helperMissing.call(depth0, \"__\", \"Magnify more\", options)))\n        + \"\\\"><span class=\\\"icon-add\\\"></span></a>\\n        <a href=\\\"#\\\" class=\\\"control\\\"  data-control=\\\"zoomOut\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Magnify less\", options) : helperMissing.call(depth0, \"__\", \"Magnify less\", options)))\n        + \"\\\"><span class=\\\"icon-remove\\\"></span></a>\\n        <a href=\\\"#\\\" class=\\\"closeMagnifier\\\" data-control=\\\"closeMagnifier\\\" title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Close Magnifier\", options) : helperMissing.call(depth0, \"__\", \"Close Magnifier\", options)))\n        + \"\\\"><span class=\\\"icon-result-nok\\\"></span></a>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function magnifierPanelTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The screen pixel ratio\n     * @type {Number}\n     */\n    var screenRatio = window.screen.width / window.screen.height;\n\n    /**\n     * Standard debounce delay for heavy process\n     * @type {Number}\n     */\n    var debounceDelay = 50;\n\n    /**\n     * Standard scrolling throttling for the scrolling\n     * It can be lower than the debounce delay as it is lighter in process and it improves the user experience\n     * @type {Number}\n     */\n    var scrollingDelay = 20;\n\n    /**\n     * The default base size\n     * @type {Number}\n     */\n    var defaultBaseSize = 116;\n\n    /**\n     * The minimum zoom level\n     * @type {Number}\n     */\n    var defaultLevelMin = 2;\n\n    /**\n     * The maximum zoom level\n     * @type {Number}\n     */\n    var defaultLevelMax = 8;\n\n    /**\n     * The default zoom level\n     * @type {Number}\n     */\n    var defaultLevel = defaultLevelMin;\n\n    /**\n     * Some default values\n     * @type {Object}\n     */\n    var defaultConfig = {\n      level: defaultLevel,\n      levelMin: defaultLevelMin,\n      levelMax: defaultLevelMax,\n      levelStep: 0.5,\n      baseSize: defaultBaseSize,\n      maxRatio: 0.5\n    };\n    var dynamicComponentDefaultConfig = {\n      draggable: true,\n      resizable: true,\n      preserveAspectRatio: false,\n      width: defaultBaseSize * defaultLevel,\n      height: defaultBaseSize * defaultLevel / screenRatio,\n      minWidth: defaultBaseSize * defaultLevelMin,\n      minHeight: defaultBaseSize * defaultLevelMin / screenRatio,\n      stackingScope: 'test-runner',\n      top: 50,\n      left: 10\n    };\n\n    /**\n     * Creates a magnifier panel component\n     * @param {Object} config\n     * @param {Number} [config.level] - The default zoom level\n     * @param {Number} [config.levelMin] - The minimum allowed zoom level\n     * @param {Number} [config.levelMax] - The maximum allowed zoom level\n     * @param {Number} [config.levelStep] - The level increment applied when using the controls + and -\n     * @param {Number} [config.baseSize] - The base size used to assign the width and the height according to the zoom level\n     * @param {Number} [config.maxRatio] - The ratio for the maximum size regarding the size of the window\n     * @returns {magnifierPanel} the component (initialized)\n     */\n    function magnifierPanelFactory(config) {\n      var initConfig = _.defaults(config || {}, defaultConfig);\n      var zoomLevelMin = parseFloat(initConfig.levelMin);\n      var zoomLevelMax = parseFloat(initConfig.levelMax);\n      var zoomLevelStep = parseFloat(initConfig.levelStep);\n      var zoomLevel = adjustZoomLevel(initConfig.level);\n      var maxRatio = parseFloat(initConfig.maxRatio);\n      var $initTarget = null;\n      var controls = null;\n      var observer = null;\n      var targetWidth, targetHeight, dx, dy;\n      var scrolling = [];\n      var dynamicComponentInstance;\n      var dynamicComponentConfig = _.defaults(config ? config.component || {} : {}, dynamicComponentDefaultConfig);\n\n      /**\n       * @typedef {Object} magnifierPanel\n       */\n      var magnifierPanel = component({\n        /**\n         * Gets the current zoom level\n         * @returns {Number}\n         */\n        getZoomLevel: function getZoomLevel() {\n          return zoomLevel;\n        },\n        /**\n         * Gets the targeted content the magnifier will zoom\n         * @returns {jQuery}\n         */\n        getTarget: function getTarget() {\n          return controls && controls.$target;\n        },\n        /**\n         * Sets the targeted content the magnifier will zoom\n         * @param {jQuery} $newTarget\n         * @returns {magnifierPanel}\n         * @fires targetchange\n         * @fires update\n         */\n        setTarget: function setTarget($newTarget) {\n          if (controls) {\n            controls.$target = $newTarget;\n            controls.$viewTarget = null;\n            setScrollingListener();\n\n            /**\n             * @event magnifierPanel#targetchange\n             * @param {jQuery} $target\n             */\n            this.trigger('targetchange', controls.$target);\n            this.update();\n          } else {\n            $initTarget = $newTarget;\n          }\n          return this;\n        },\n        /**\n         * Sets the zoom level of the magnifier\n         * @param {Number} level\n         * @returns {magnifierPanel}\n         * @fires zoom\n         */\n        zoomTo: function zoomTo(level) {\n          if (level && _.isFinite(level)) {\n            zoomLevel = adjustZoomLevel(level);\n          }\n          applyZoomLevel();\n          showZoomLevel();\n          updateMaxSize();\n          updateZoom();\n\n          /**\n           * @event magnifierPanel#zoom\n           * @param {Number} zoomLevel\n           */\n          this.trigger('zoom', zoomLevel);\n          return this;\n        },\n        /**\n         * Increments the zoom level of the magnifier\n         * @param {Number} step\n         * @returns {magnifierPanel}\n         * @fires zoom\n         */\n        zoomBy: function zoomBy(step) {\n          if (step && _.isFinite(step)) {\n            this.zoomTo(zoomLevel + parseFloat(step));\n          }\n          return this;\n        },\n        /**\n         * Zoom-in using the configured level step\n         * @returns {magnifierPanel}\n         * @fires zoom\n         */\n        zoomIn: function zoomIn() {\n          return this.zoomBy(zoomLevelStep);\n        },\n        /**\n         * Zoom-out using the configured level step\n         * @returns {magnifierPanel}\n         * @fires zoom\n         */\n        zoomOut: function zoomOut() {\n          return this.zoomBy(-zoomLevelStep);\n        },\n        /**\n         * Places the magnifier sight at a particular position on the target content\n         * @param {Number} x\n         * @param {Number} y\n         * @returns {magnifierPanel}\n         */\n        zoomAt: function zoomAt(x, y) {\n          var position;\n          if (controls) {\n            position = this.translate(x, y);\n            controls.$inner.css({\n              top: -position.top,\n              left: -position.left\n            });\n          }\n        },\n        /**\n         * Translates screen coordinates to zoom coordinates\n         * @param {Number} x\n         * @param {Number} y\n         * @returns {Object}\n         */\n        translate: function translate(x, y) {\n          return {\n            top: translateMagnifier(y, targetHeight, dynamicComponentInstance.position.height),\n            left: translateMagnifier(x, targetWidth, dynamicComponentInstance.position.width)\n          };\n        },\n        /**\n         * Updates the magnifier with the target content\n         * @returns {magnifierPanel}\n         * @fires update\n         */\n        update: function update() {\n          if (controls && controls.$target) {\n            controls.$clone = controls.$target.clone().removeAttr('id');\n            controls.$clone.find('iframe').remove();\n            controls.$clone.find('[name],[id],[data-serial]').removeAttr('name id data-serial');\n            controls.$inner.empty().append(controls.$clone);\n            controls.$clone.find('audio').prop('muted', true);\n            applySize();\n            applyZoomLevel();\n            updateZoom();\n            updateMaxSize();\n            applyScrolling();\n\n            /**\n             * @event magnifierPanel#update\n             */\n            this.trigger('update');\n          }\n          return this;\n        }\n      }, defaultConfig);\n\n      /**\n       * Will update the magnifier content with the actual content\n       * @type {Function}\n       */\n      var updateMagnifier = _.debounce(_.bind(magnifierPanel.update, magnifierPanel), debounceDelay);\n\n      /**\n       * Will update the magnifier content with the scrolling position\n       * @type {Function}\n       */\n      var scrollingListenerCallback = _.throttle(function (event) {\n        var $target = $$1(event.target);\n        var scrollingTop = event.target.scrollTop;\n        var scrollLeft = event.target.scrollLeft;\n        var scrollId, scrollData;\n\n        //check if the element is already known as a scrollable element\n        if (controls && controls.$clone && $target.data('magnifier-scroll')) {\n          scrollId = $target.data('magnifier-scroll');\n          scrollData = _.find(scrolling, {\n            id: scrollId\n          });\n          scrollData.scrollTop = scrollingTop;\n          scrollData.scrollLeft = scrollLeft;\n\n          //if in clone, scroll it\n          scrollInClone(scrollData);\n        } else {\n          //if the element is not yet identified as a scrollable element, tag it and register its id\n          scrollId = _.uniqueId('scrolling_');\n          $target.attr('data-magnifier-scroll', scrollId);\n          scrolling.push({\n            id: scrollId,\n            scrollTop: scrollingTop,\n            scrollLeft: scrollLeft\n          });\n\n          //update all\n          magnifierPanel.update();\n        }\n      }, scrollingDelay);\n\n      /**\n       * Scroll an element in the clone\n       *\n       * @param {Object} scrollData\n       * @param {String} scrollData.id\n       * @param {Number} [scrollData.scrollTop]\n       * @param {Number} [scrollData.scrollLeft]\n       */\n      function scrollInClone(scrollData) {\n        var $clonedTarget;\n        if (controls && controls.$clone && scrollData && scrollData.id) {\n          $clonedTarget = controls.$clone.find(`[data-magnifier-scroll=${scrollData.id}]`);\n          if ($clonedTarget.length) {\n            if (_.isNumber(scrollData.scrollTop)) {\n              $clonedTarget[0].scrollTop = scrollData.scrollTop;\n            }\n            if (_.isNumber(scrollData.scrollLeft)) {\n              $clonedTarget[0].scrollLeft = scrollData.scrollLeft;\n            }\n          }\n        }\n      }\n\n      /**\n       * Capture all scroll positions of elements inside current target\n       */\n      function updateScrollPositions() {\n        if (!controls || !controls.$target) {\n          return;\n        }\n        const elements = [controls.$target];\n        let scrollOffsetsChanged = false;\n        while (elements.length) {\n          const $currentElement = $$1(elements.shift());\n          const scrollLeft = $currentElement.scrollLeft();\n          const scrollTop = $currentElement.scrollTop();\n          let scrollId = $currentElement.data('magnifier-scroll');\n          elements.push(...Array.from($currentElement.children()));\n          if (scrollLeft > 0 || scrollTop > 0 || scrollId) {\n            scrollOffsetsChanged = true;\n            if (scrollId) {\n              const scrollData = _.find(scrolling, {\n                id: scrollId\n              });\n              scrollData.scrollTop = scrollTop;\n              scrollData.scrollLeft = scrollLeft;\n            } else {\n              scrollId = _.uniqueId('scrolling_');\n              $currentElement.attr('data-magnifier-scroll', scrollId);\n              scrolling.push({\n                id: scrollId,\n                scrollTop,\n                scrollLeft\n              });\n            }\n          }\n        }\n\n        // If there is any changes to scroll offset inside the target the magnifier should be updated\n        if (scrollOffsetsChanged) {\n          magnifierPanel.update();\n        }\n      }\n\n      /**\n       * Initializes the listener for scrolling event and transfer the scrolling\n       */\n      function setScrollingListener() {\n        updateScrollPositions();\n        window.addEventListener('scroll', scrollingListenerCallback, true);\n      }\n\n      /**\n       * Stops the listener for scrolling event\n       */\n      function removeScrollingListener() {\n        window.removeEventListener('scroll', scrollingListenerCallback, true);\n      }\n\n      /**\n       * Applies scrolling programmatically from the recorded list of elements to be scrolled\n       */\n      function applyScrolling() {\n        _.forEach(scrolling, scrollInClone);\n      }\n\n      /**\n       * Adjusts a provided zoom level to fit the constraints\n       * @param {Number|String} level\n       * @returns {Number}\n       */\n      function adjustZoomLevel(level) {\n        return Math.max(zoomLevelMin, Math.min(parseFloat(level), zoomLevelMax));\n      }\n\n      /**\n       * Applies the zoom level to the content\n       */\n      function applyZoomLevel() {\n        if (controls) {\n          controls.$inner.css({\n            transform: `scale(${zoomLevel})`\n          });\n        }\n      }\n\n      /**\n       * Shows the zoom level using a CSS animation\n       */\n      function showZoomLevel() {\n        var $newZoomLevel;\n        if (controls) {\n          $newZoomLevel = controls.$zoomLevel.clone(true).html(zoomLevel);\n          controls.$zoomLevel.before($newZoomLevel).remove();\n          controls.$zoomLevel = $newZoomLevel;\n        }\n      }\n\n      /**\n       * Updates the max size according to the window's size\n       */\n      function updateMaxSize() {\n        if (!dynamicComponentInstance) {\n          return;\n        }\n        const $window = $$1(window);\n        dynamicComponentInstance.config.maxWidth = $window.width() * maxRatio;\n        dynamicComponentInstance.config.maxHeight = $window.height() * maxRatio;\n      }\n\n      /**\n       * Forwards the size of the target to the cloned content\n       */\n      function applySize() {\n        if (controls && controls.$clone) {\n          targetWidth = controls.$target.width();\n          targetHeight = controls.$target.height();\n          controls.$clone.width(targetWidth).height(targetHeight);\n        }\n      }\n\n      /**\n       * Place the zoom sight at the right place inside the magnifier\n       */\n      function updateZoom() {\n        var position;\n        if (controls && controls.$target) {\n          position = dynamicComponentInstance.position;\n          position.x += dx + controls.$target.scrollLeft();\n          position.y += dy + controls.$target.scrollTop();\n          magnifierPanel.zoomAt(position.x, position.y);\n        }\n      }\n\n      /**\n       * Creates the observer that will react to DOM changes to update the magnifier\n       */\n      function createObserver() {\n        observer = new window.MutationObserver(updateMagnifier);\n      }\n\n      /**\n       * Starts to observe the DOM of the magnifier target\n       */\n      function startObserver() {\n        if (controls && controls.$target) {\n          observer.observe(controls.$target.get(0), {\n            childList: true,\n            // Set to true if additions and removals of the target node's child elements (including text nodes) are to be observed.\n            attributes: true,\n            // Set to true if mutations to target's attributes are to be observed.\n            characterData: true,\n            // Set to true if mutations to target's data are to be observed.\n            subtree: true // Set to true if mutations to target and target's descendants are to be observed.\n          });\n        }\n\n        setScrollingListener();\n      }\n\n      /**\n       * Stops to observe the DOM of the magnifier target\n       */\n      function stopObserver() {\n        observer.disconnect();\n        removeScrollingListener();\n      }\n\n      /**\n       * Translates a screen coordinate into the magnifier\n       * @param {Number} coordinate\n       * @param {Number} actualSize\n       * @param {Number} magnifierSize\n       * @returns {Number}\n       */\n      function translateMagnifier(coordinate, actualSize, magnifierSize) {\n        var delta = 0;\n        var ratio = zoomLevel;\n        if (actualSize) {\n          delta = actualSize * (zoomLevel - 1) / 2;\n          ratio = (actualSize * zoomLevel - magnifierSize) / (actualSize - magnifierSize);\n        }\n        return coordinate * ratio - delta;\n      }\n\n      /**\n       * Gets the top element from a particular absolute point.\n       * @param {Number} x - the page X-coordinate of the point\n       * @param {Number} y - the page Y-coordinate of the point\n       * @returns {HTMLElement}\n       */\n      function getElementFromPoint(x, y) {\n        var el;\n\n        // this is done to prevent working with undefined coordinates\n        x = x || 0;\n        y = y || 0;\n        if (controls) {\n          controls.$overlay.addClass('hidden');\n        }\n        el = document.elementFromPoint(x, y);\n        if (controls) {\n          controls.$overlay.removeClass('hidden');\n        }\n        return el;\n      }\n\n      /**\n       * Find the related node in the target. The both trees must have the same content.\n       * @param {jQuery|HTMLElement} node - the node for which find a relation\n       * @param {jQuery|HTMLElement} root - the root of the tree that contains the actual node\n       * @param {jQuery|HTMLElement} target - the root of the tree that could contains the related node\n       * @returns {jQuery}\n       */\n      function findSourceNode(node, root, target) {\n        var $node = $$1(node);\n        var $root = $$1(root);\n        var $target = $$1(target);\n        var indexes = [$node.index()];\n\n        // compute map of node's parents indexes\n        $node.parents().each(function () {\n          var $this = $$1(this);\n          if (!$this.is($root)) {\n            indexes.push($this.index());\n          } else {\n            return false;\n          }\n        });\n\n        // the last index is related to the root, so ignore it\n        indexes.pop();\n\n        // now try to find the same node using the path provided by the indexes map\n        if (indexes.length) {\n          $node = $target;\n          _.forEachRight(indexes, function (index) {\n            $node = $node.children().eq(index);\n            if (!$node.length) {\n              return false;\n            }\n          });\n        } else {\n          // nothing to search for...\n          $node = $$1();\n        }\n        return $node;\n      }\n      dynamicComponentInstance = dynamicComponent({}).on('rendercontent', function ($content) {\n        // eslint-disable-next-line consistent-this\n        var dynamicComponentContext = this;\n        var $element = this.getElement();\n        $element.addClass('magnifier-container');\n        magnifierPanel.setTemplate(magnifierPanelTpl).on('render', function () {\n          var self = this;\n          var $component = this.getElement();\n          this.setState('hidden', true);\n\n          // compute the padding of the magnifier content\n          dx = ($component.outerWidth() - $component.width()) / 2;\n          dy = ($component.outerHeight() - $component.height()) / 2;\n          controls = {\n            $target: $initTarget,\n            $inner: $$1('.inner', $component),\n            $zoomLevel: $$1('.level', $component),\n            $overlay: $$1('.overlay', $component)\n          };\n          $initTarget = null;\n\n          // click on zoom-out control\n          $component.on('click touchstart', '.control[data-control=\"zoomOut\"]', function (event) {\n            event.preventDefault();\n            self.zoomOut();\n          });\n\n          // click on zoom-in control\n          $component.on('click touchstart', '.control[data-control=\"zoomIn\"]', function (event) {\n            event.preventDefault();\n            self.zoomIn();\n          });\n\n          // click on close controls\n          $component.on('click touchstart', '.closeMagnifier', function (event) {\n            event.preventDefault();\n            self.hide();\n            self.trigger('close');\n          });\n\n          // interact through the magnifier glass with the zoomed content\n          $component.on('click touchstart', '.overlay', function (event) {\n            findSourceNode(getElementFromPoint(event.pageX, event.pageY), controls.$inner, controls.$target).click().focus();\n          });\n          createObserver();\n          updateMaxSize();\n          applyZoomLevel();\n        }).on('show', function () {\n          updateMagnifier();\n          startObserver();\n          dynamicComponentContext.show();\n        }).on('hide', function () {\n          stopObserver();\n          dynamicComponentContext.hide();\n        }).on('destroy', function () {\n          stopObserver();\n          $initTarget = null;\n          controls = null;\n          observer = null;\n          dynamicComponentContext.destroy();\n        }).init(initConfig).render($content);\n      }).on('down move resize', function () {\n        updateZoom();\n      }).on('resize', function () {\n        updateMaxSize();\n      }).init(dynamicComponentConfig);\n      return magnifierPanel;\n    }\n\n    return magnifierPanelFactory;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/magnifier/magnifier',['lodash', 'i18n', 'taoTests/runner/plugin', 'ui/hider', 'util/shortcut', 'util/namespace', 'taoQtiTest/runner/plugins/tools/magnifier/magnifierPanel', 'taoQtiTest/runner/helpers/map'], function (_, __, pluginFactory, hider, shortcut, namespaceHelper, magnifierPanelFactory, mapHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    magnifierPanelFactory = magnifierPanelFactory && Object.prototype.hasOwnProperty.call(magnifierPanelFactory, 'default') ? magnifierPanelFactory['default'] : magnifierPanelFactory;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n    var pluginName = 'magnifier';\n\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n    var actionPrefix = `tool-${pluginName}-`;\n\n    /**\n     * Some default options for the plugin\n     * @type {Object}\n     */\n    var defaultOptions = {\n      zoomMin: 2,\n      // Smallest magnification factor\n      zoomMax: 8,\n      // Biggest magnification factor\n      zoomStep: 0.5 // Increment between min an max\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    var magnifier = pluginFactory({\n      name: pluginName,\n      /**\n       * Initializes the plugin (called during runner's init)\n       */\n      init: function init() {\n        const self = this;\n        const testRunner = this.getTestRunner();\n        const testRunnerOptions = testRunner.getOptions();\n        const pluginConfig = Object.assign({}, defaultOptions, this.getConfig());\n        const pluginShortcuts = (testRunnerOptions.shortcuts || {})[pluginName] || {};\n        let magnifierPanel = null;\n\n        /**\n         * Creates the magnifier panel on demand\n         * @returns {magnifierPanel}\n         * @fires plugin-magnifier-create.magnifier\n         */\n        function getMagnifierPanel() {\n          var $container;\n          if (!magnifierPanel) {\n            $container = testRunner.getAreaBroker().getContainer();\n            magnifierPanel = magnifierPanelFactory({\n              levelMin: pluginConfig.zoomMin,\n              levelMax: pluginConfig.zoomMax,\n              levelStep: pluginConfig.zoomStep,\n              component: {\n                renderTo: $container.parent(),\n                draggableContainer: $container.parent()\n              }\n            }).on('show', function () {\n              /**\n               * @event plugin-magnifier-show.magnifier\n               */\n              self.trigger('magnifier-show');\n            }).on('hide', function () {\n              /**\n               * @event plugin-magnifier-hide.magnifier\n               */\n              self.trigger('magnifier-hide');\n            }).on('zoom', function (level) {\n              /**\n               * @event plugin-magnifier-zoom.magnifier\n               * @param {Number} zoomLevel\n               */\n              self.trigger('magnifier-zoom', level);\n            }).on('close', function () {\n              hideMagnifier();\n            }).setTarget($container);\n\n            /**\n             * @event plugin-magnifier-create.magnifier\n             */\n            self.trigger('magnifier-create');\n          }\n          return magnifierPanel;\n        }\n\n        /**\n         * Checks if the plugin is currently available\n         * @returns {Boolean}\n         */\n        function isEnabled() {\n          //to be activated with the special category x-tao-option-magnifier\n          return mapHelper.hasItemCategory(testRunner.getTestMap(), testRunner.getTestContext().itemIdentifier, 'magnifier', true);\n        }\n\n        /**\n         * Shows/hides the plugin GUI according to context\n         */\n        function togglePlugin() {\n          if (isEnabled()) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        }\n\n        /**\n         * Shows/hides the magnifier\n         */\n        function toggleMagnifier() {\n          if (self.getState('enabled')) {\n            if (self.getState('active')) {\n              hideMagnifier();\n            } else {\n              showMagnifier();\n            }\n          }\n        }\n\n        /**\n         * Opens the magnifier panel\n         * @fires plugin-magnifier-show.magnifier\n         */\n        function showMagnifier() {\n          getMagnifierPanel();\n          if (magnifierPanel.is('hidden')) {\n            magnifierPanel.show();\n          }\n          self.button.turnOn();\n          testRunner.trigger(`plugin-open.${pluginName}`);\n          self.setState('active', true);\n        }\n\n        /**\n         * Closes the magnifier panel\n         * @fires plugin-magnifier-hide.magnifier\n         */\n        function hideMagnifier() {\n          self.setState('active', false);\n          self.button.turnOff();\n          testRunner.trigger(`plugin-close.${pluginName}`);\n          if (magnifierPanel && !magnifierPanel.is('hidden')) {\n            magnifierPanel.hide();\n          }\n        }\n\n        // build element\n        this.button = this.getAreaBroker().getToolbox().createEntry({\n          control: 'magnify',\n          title: __('Displays a customisable magnifier'),\n          text: __('Magnifying Glass'),\n          icon: 'find'\n        });\n\n        // attach behavior\n        this.button.on('click', function (event) {\n          event.preventDefault();\n          testRunner.trigger(`${actionPrefix}toggle`);\n        });\n\n        // handle the plugin's shortcuts\n        if (testRunnerOptions.allowShortcuts) {\n          _.forEach(pluginShortcuts, function (command, key) {\n            shortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), function () {\n              // just fire the action using the event loop\n              testRunner.trigger(actionPrefix + key);\n            }, {\n              avoidInput: true\n            });\n          });\n        }\n\n        //start disabled\n        togglePlugin();\n        this.disable();\n\n        //update plugin state based on changes\n        testRunner\n        // runner life cycle\n        .on('loaditem', function () {\n          togglePlugin();\n          self.disable();\n        }).on('renderitem', function () {\n          if (magnifierPanel) {\n            magnifierPanel.update().zoomTo(pluginConfig.zoomMin);\n          }\n        }).on('enabletools renderitem', function () {\n          self.enable();\n        }).on('disabletools unloaditem', function () {\n          if (self.getState('active')) {\n            hideMagnifier();\n          }\n          self.disable();\n        }).on('destroy', function () {\n          if (magnifierPanel) {\n            magnifierPanel.destroy();\n          }\n          magnifierPanel = null;\n        })\n\n        // commands that controls the magnifier\n        .on(`${actionPrefix}toggle`, function () {\n          if (isEnabled()) {\n            toggleMagnifier();\n          }\n        }).on(`${actionPrefix}in`, function () {\n          if (isEnabled() && self.getState('enabled') && self.getState('active')) {\n            getMagnifierPanel().zoomIn();\n          }\n        }).on(`${actionPrefix}out`, function () {\n          if (isEnabled() && self.getState('enabled') && self.getState('active')) {\n            getMagnifierPanel().zoomOut();\n          }\n        }).on(`${actionPrefix}close`, function () {\n          if (self.getState('active')) {\n            hideMagnifier();\n          }\n        });\n      },\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy: function destroy() {\n        shortcut.remove(`.${pluginName}`);\n      },\n      /**\n       * Enables the button\n       */\n      enable: function enable() {\n        this.button.enable();\n      },\n      /**\n       * Disables the button\n       */\n      disable: function disable() {\n        this.button.disable();\n      },\n      /**\n       * Shows the button\n       */\n      show: function show() {\n        this.button.show();\n      },\n      /**\n       * Hides the button\n       */\n      hide: function hide() {\n        this.button.hide();\n      }\n    });\n\n    return magnifier;\n\n});\n\n","define('taoQtiTest/runner/plugins/tools/zoom',['jquery', 'i18n', 'ui/hider', 'ui/transformer', 'util/shortcut', 'util/namespace', 'taoTests/runner/plugin', 'taoQtiTest/runner/helpers/map'], function ($, __, hider, transformer, shortcut, namespaceHelper, pluginFactory, mapHelper) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    transformer = transformer && Object.prototype.hasOwnProperty.call(transformer, 'default') ? transformer['default'] : transformer;\n    shortcut = shortcut && Object.prototype.hasOwnProperty.call(shortcut, 'default') ? shortcut['default'] : shortcut;\n    namespaceHelper = namespaceHelper && Object.prototype.hasOwnProperty.call(namespaceHelper, 'default') ? namespaceHelper['default'] : namespaceHelper;\n    pluginFactory = pluginFactory && Object.prototype.hasOwnProperty.call(pluginFactory, 'default') ? pluginFactory['default'] : pluginFactory;\n    mapHelper = mapHelper && Object.prototype.hasOwnProperty.call(mapHelper, 'default') ? mapHelper['default'] : mapHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2022  (original work) Open Assessment Technologies SA;\n     *\n     * @author dieter <dieter@taotesting.com>\n     * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n     */\n\n    /**\n     * The standard zoom level, in percentage\n     * @type {Number}\n     */\n    const standard = 100;\n\n    /**\n     * Zoom-In/Zoom-Out steps\n     * @type {Number}\n     */\n    const increment = 10;\n\n    /**\n     * The zoom boundaries, in percentage\n     * @type {Object}\n     */\n    const threshold = {\n      lower: 10,\n      upper: 200\n    };\n\n    /**\n     * Sets the zoom level\n     * @param {jQuery} $target\n     * @param {Number} level - Zoom percentage\n     */\n    const _setZoomLevel = ($target, level) => {\n      const $parent = $target.parent();\n      const newScale = level / standard;\n      const isOverZoom = $parent.outerWidth(true) < $target.width() * newScale;\n      if (isOverZoom) {\n        transformer.setTransformOrigin($target, '0 0');\n        $parent.css('margin-left', '0');\n      } else {\n        transformer.setTransformOrigin($target, '50% 0');\n        $parent.css('margin-left', '');\n      }\n      transformer.scale($target, newScale);\n    };\n\n    /**\n     * Restores the standard zoom level\n     * @param {jQuery} $target\n     */\n    const _resetZoom = $target => {\n      transformer.reset($target);\n    };\n\n    /**\n     * Forces a browser repaint\n     * Solution from http://stackoverflow.com/questions/3485365/how-can-i-force-webkit-to-redraw-repaint-to-propagate-style-changes?answertab=votes#tab-top\n     * @param {jQuery} $target\n     */\n    const forceRepaint = $target => {\n      const sel = $target[0];\n      if (sel) {\n        sel.style.display = 'none';\n        sel.offsetHeight; // no need to store this anywhere, the reference is enough\n        sel.style.display = '';\n      }\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    var zoom = pluginFactory({\n      name: 'zoom',\n      /**\n       * Initialize the plugin (called during runner's init)\n       */\n      init() {\n        const testRunner = this.getTestRunner();\n        const testRunnerOptions = testRunner.getOptions();\n        const pluginShortcuts = (testRunnerOptions.shortcuts || {})[this.getName()] || {};\n        const testRunnerContainer = this.getAreaBroker().getContainer().get(0);\n\n        /**\n         * Checks if the plugin is currently available\n         * @returns {Boolean}\n         */\n        const isConfigured = () => {\n          //to be activated with the special category x-tao-option-zoom\n          return mapHelper.hasItemCategory(testRunner.getTestMap(), testRunner.getTestContext().itemIdentifier, 'zoom', true);\n        };\n\n        /**\n         * Is zoom activated ? if not, then we hide the plugin\n         */\n        const togglePlugin = () => {\n          if (isConfigured()) {\n            //allow zoom\n            this.show();\n          } else {\n            this.hide();\n          }\n        };\n        const zoomAction = dir => {\n          const inc = increment * dir;\n          if (this.$zoomTarget) {\n            const el = this.$zoomTarget[0];\n            const before = el.getBoundingClientRect();\n            let sx = this.$container.scrollLeft();\n            let sy = this.$container.scrollTop();\n            this.zoom = Math.max(threshold.lower, Math.min(threshold.upper, this.zoom + inc));\n            if (this.zoom === standard) {\n              _resetZoom(this.$zoomTarget);\n            } else {\n              _setZoomLevel(this.$zoomTarget, this.zoom);\n            }\n            testRunnerContainer.style.setProperty('--tool-zoom-level', this.zoom / standard);\n\n            // force a browser repaint to fix a scrollbar issue with WebKit\n            forceRepaint(this.$zoomTarget);\n            const after = el.getBoundingClientRect();\n            sx = Math.max(0, sx + (after.width - before.width) / 2);\n            sy = Math.max(0, sy + (after.height - before.height) / 2);\n            this.$container.scrollLeft(sx).scrollTop(sy);\n          }\n        };\n        const zoomIn = () => {\n          if (this.getState('enabled') !== false) {\n            zoomAction(1);\n          }\n        };\n        const zoomOut = () => {\n          if (this.getState('enabled') !== false) {\n            zoomAction(-1);\n          }\n        };\n\n        /**\n         * Reapplys the same zoom level to the target\n         * It can be useful if the element was (visually-)hidden why zoom happened\n         */\n        const zoomReApply = () => {\n          if (this.zoom !== standard) {\n            _setZoomLevel(this.$zoomTarget, this.zoom);\n          }\n        };\n\n        //build element (detached)\n        this.buttonZoomOut = this.getAreaBroker().getToolbox().createEntry({\n          control: 'zoomOut',\n          title: __('Zoom out'),\n          icon: 'remove'\n        });\n        this.buttonZoomIn = this.getAreaBroker().getToolbox().createEntry({\n          control: 'zoomIn',\n          title: __('Zoom in'),\n          icon: 'add'\n        });\n\n        //attach behavior\n        this.buttonZoomIn.on('click', e => {\n          e.preventDefault();\n          testRunner.trigger('tool-zoomin');\n        });\n\n        //attach behavior\n        this.buttonZoomOut.on('click', e => {\n          e.preventDefault();\n          testRunner.trigger('tool-zoomout');\n        });\n        if (testRunnerOptions.allowShortcuts) {\n          if (pluginShortcuts.in) {\n            shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.in, this.getName(), true), () => {\n              testRunner.trigger('tool-zoomin');\n            }, {\n              avoidInput: true\n            });\n          }\n          if (pluginShortcuts.out) {\n            shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.out, this.getName(), true), () => {\n              testRunner.trigger('tool-zoomout');\n            }, {\n              avoidInput: true\n            });\n          }\n        }\n\n        //start disabled\n        togglePlugin();\n        this.disable();\n\n        //update plugin state based on changes\n        testRunner.on('loaditem', () => {\n          this.zoom = standard;\n          togglePlugin();\n          this.disable();\n        }).on('renderitem', () => {\n          this.$container = $('#qti-content');\n          this.$zoomTarget = $('.qti-item');\n          this.enable();\n        }).on('enabletools', () => {\n          this.enable();\n        }).on('disabletools unloaditem', () => {\n          this.disable();\n        }).on('tool-zoomin', zoomIn).on('tool-zoomout', zoomOut).on('tool-zoomreapply', zoomReApply);\n      },\n      /**\n       * Called during the runner's destroy phase\n       */\n      destroy() {\n        shortcut.remove(`.${this.getName()}`);\n      },\n      /**\n       * Enable the button\n       */\n      enable() {\n        this.buttonZoomIn.enable();\n        this.buttonZoomOut.enable();\n      },\n      /**\n       * Disable the button\n       */\n      disable() {\n        this.buttonZoomIn.disable();\n        this.buttonZoomOut.disable();\n      },\n      /**\n       * Show the button\n       */\n      show() {\n        this.buttonZoomIn.show();\n        this.buttonZoomOut.show();\n      },\n      /**\n       * Hide the button\n       */\n      hide() {\n        this.buttonZoomIn.hide();\n        this.buttonZoomOut.hide();\n      }\n    });\n\n    return zoom;\n\n});\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('/*\\nUsage:\\n- linear-gradient((color1, color2, color3)) - returns linear-gradient with evenly distributed colors,\\n   if 3 colors used then the position of each will be 33,33%\\n- linear-gradient((color1 0%, color2 30%, color3 80%)) - returns linear-gradient with manually distributed colors,\\n   first param - color, second - position. Also you can use px or other valid units for set position.\\n*/\\n/* based on \\\"visually-hidden\\\" mixin in LDS for accessibility goals */\\n/* Do not edit */\\n.test-runner-scope .content-wrapper p.key-navigation-group, .test-runner-scope .content-wrapper div.key-navigation-group:not(.select2-container) {\\n  padding: 5px !important;\\n}\\n.test-runner-scope .content-wrapper .key-navigation-group:not(.qti-extendedTextInteraction):not(.qti-textEntryInteraction):not(.qti-customInteraction) {\\n  border-width: 1px !important;\\n  border-style: solid;\\n  border-color: transparent;\\n}\\n.test-runner-scope .content-wrapper .key-navigation-group:not(.qti-extendedTextInteraction):not(.qti-textEntryInteraction):not(.qti-customInteraction).focusin {\\n  border-color: rgb(14, 93, 145) !important;\\n  outline: none;\\n}\\n.test-runner-scope .content-wrapper .key-navigation-group:not(.qti-extendedTextInteraction):not(.qti-textEntryInteraction):not(.qti-customInteraction).qti-interaction .qti-choice.key-navigation-highlight:not(.tts-content-node) {\\n  background: #e7eff4 !important;\\n}\\n.test-runner-scope .content-wrapper span.key-navigation-group {\\n  border: none !important;\\n}\\n.test-runner-scope .content-wrapper span.key-navigation-group.focusin {\\n  outline: solid rgb(14, 93, 145) 1px !important;\\n  outline-offset: 1px;\\n}\\n.test-runner-scope .test-sidebar .key-navigation-group.focusin {\\n  background: #e7eff4;\\n}\\n.test-runner-scope .test-sidebar .key-navigation-group .qti-navigator-filters .key-navigation-highlight .qti-navigator-tab {\\n  border-width: 2px;\\n}\\n.test-runner-scope .test-sidebar .key-navigation-group .qti-navigator-filters .key-navigation-highlight:focus {\\n  outline: none;\\n}\\n.test-runner-scope .test-sidebar .key-navigation-group .qti-navigator-filters .key-navigation-highlight:focus .qti-navigator-tab {\\n  border-top-color: #222 !important;\\n  border-left-color: #222 !important;\\n  border-right-color: #222 !important;\\n}\\n.test-runner-scope .test-sidebar .key-navigation-group li.qti-navigator-item.key-navigation-highlight {\\n  padding-left: 8px;\\n  border-left: solid 2px #222;\\n}\\n.test-runner-scope .test-sidebar .key-navigation-group li.qti-navigator-item.key-navigation-highlight .key-navigation-highlight:focus {\\n  outline: none;\\n}\\n.test-runner-scope .test-sidebar .qti-navigator-fizzy .key-navigation-group.focusin {\\n  background: #f2f2f2;\\n}\\n.test-runner-scope .bottom-action-bar.content-action-bar.key-navigation-group.focusin {\\n  -ms-box-shadow: 0 0 6px 2px #3e7da7;\\n  -o-box-shadow: 0 0 6px 2px #3e7da7;\\n  box-shadow: 0 0 6px 2px #3e7da7;\\n}\\n.test-runner-scope .bottom-action-bar.content-action-bar.key-navigation-group .key-navigation-highlight:focus {\\n  margin-bottom: 0;\\n  border-bottom-color: #e7eff4 !important;\\n  outline: none;\\n}\\n.test-runner-scope .bottom-action-bar.content-action-bar.key-navigation-group .key-navigation-highlight:focus.active {\\n  border-bottom-color: transparent !important;\\n  background: #e7eff4 !important;\\n}\\n.test-runner-scope .bottom-action-bar.content-action-bar.key-navigation-group .key-navigation-highlight:focus:not(.active):not(:active) .li-inner {\\n  color: #e7eff4;\\n}\\n\\nheader .settings-menu .key-navigation-group {\\n  padding-right: 5px;\\n}\\nheader .settings-menu .key-navigation-group.focusin {\\n  background-color: rgba(14, 93, 145, 0.5);\\n  padding-bottom: 10px;\\n}\\nheader .settings-menu .key-navigation-highlight:focus {\\n  height: 54px;\\n  color: white !important;\\n  border-bottom: solid 2px white !important;\\n}\\n/*# sourceMappingURL=../../../taoQtiTest/views/node_modules/@oat-sa/tao-test-runner-qti/dist/plugins/content/accessibility/css/key-navigation.css.map *//*\\nUsage:\\n- linear-gradient((color1, color2, color3)) - returns linear-gradient with evenly distributed colors,\\n   if 3 colors used then the position of each will be 33,33%\\n- linear-gradient((color1 0%, color2 30%, color3 80%)) - returns linear-gradient with manually distributed colors,\\n   first param - color, second - position. Also you can use px or other valid units for set position.\\n*/\\n/* based on \\\"visually-hidden\\\" mixin in LDS for accessibility goals */\\n/* Do not edit */\\n.countdown {\\n  opacity: 0;\\n  position: relative;\\n  display: inline-block;\\n  overflow: hidden;\\n  text-align: center;\\n  vertical-align: top;\\n  line-height: 1.2;\\n  padding: 0 20px;\\n  margin-top: -1px;\\n  height: 100%;\\n}\\n.countdown.rendered {\\n  opacity: 1;\\n  transition: opacity, 300ms, linear, 0s;\\n}\\n.countdown .label {\\n  max-width: 130px;\\n  display: block;\\n  font-size: 12px;\\n  font-size: 1.2rem;\\n}\\n/*# sourceMappingURL=../../../taoQtiTest/views/node_modules/@oat-sa/tao-test-runner-qti/dist/plugins/controls/timer/component/css/countdown.css.map *//*\\nUsage:\\n- linear-gradient((color1, color2, color3)) - returns linear-gradient with evenly distributed colors,\\n   if 3 colors used then the position of each will be 33,33%\\n- linear-gradient((color1 0%, color2 30%, color3 80%)) - returns linear-gradient with manually distributed colors,\\n   first param - color, second - position. Also you can use px or other valid units for set position.\\n*/\\n/* based on \\\"visually-hidden\\\" mixin in LDS for accessibility goals */\\n/* Do not edit */\\n.timer-box {\\n  opacity: 0;\\n  padding-top: 0;\\n  white-space: nowrap;\\n  /*flex item of control-box */\\n  flex: 1 0 auto;\\n  /* is also a flex container for .qti-timer */\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: nowrap;\\n  justify-content: flex-end;\\n}\\n.timer-box.rendered {\\n  opacity: 1;\\n  transition: opacity, 300ms, linear, 0s;\\n}\\n.timer-box .timer-toggler {\\n  text-decoration: none;\\n  color: white;\\n  line-height: 1.3;\\n  opacity: 0.68;\\n  padding: 8px 20px;\\n  position: relative;\\n  top: -1px;\\n  left: 20px;\\n  z-index: 2;\\n  transition: opacity, 0.5s, ease-out, 0s;\\n}\\n.timer-box .timer-toggler:hover, .timer-box .timer-toggler:active, .timer-box .timer-toggler:focus {\\n  outline: unset;\\n}\\n.timer-box .timer-toggler:active, .timer-box .timer-toggler:focus {\\n  border: 2px solid white;\\n}\\n.timer-box .timer-toggler:hover {\\n  opacity: 0.93;\\n  transition: opacity, 0.5s, ease-out, 0s;\\n}\\n.timer-box.zen .timer-toggler {\\n  opacity: 0.93;\\n  transition: opacity, 0.5s, ease-out, 0s;\\n}\\n.timer-box.zen .countdown .time {\\n  opacity: 0;\\n  transition: opacity, 1s, ease-out, 0s;\\n}\\n.timer-box .countdown::before {\\n  content: \\\" \\\";\\n  background: rgba(255, 255, 255, 0.3);\\n  width: 1px;\\n  height: 20px;\\n  position: absolute;\\n  left: 0;\\n  top: 5px;\\n}\\n.timer-box .countdown:first-child::before {\\n  content: none;\\n}\\n.timer-box .countdown[data-scope=test][data-type=min] {\\n  order: 5;\\n}\\n.timer-box .countdown[data-scope=test] {\\n  order: 10;\\n}\\n.timer-box .countdown[data-scope=testPart][data-type=min] {\\n  order: 15;\\n}\\n.timer-box .countdown[data-scope=testPart] {\\n  order: 20;\\n}\\n.timer-box .countdown[data-scope=section][data-type=min] {\\n  order: 25;\\n}\\n.timer-box .countdown[data-scope=section] {\\n  order: 30;\\n}\\n.timer-box .countdown[data-scope=item][data-type=min] {\\n  order: 35;\\n}\\n.timer-box .countdown[data-scope=item] {\\n  order: 40;\\n}\\n/*# sourceMappingURL=../../../taoQtiTest/views/node_modules/@oat-sa/tao-test-runner-qti/dist/plugins/controls/timer/component/css/timerbox.css.map */');\n","\ndefine(\"taoQtiTest/loader/testPlugins.bundle\", function(){});\n"],"mappings":"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"}